{"version":3,"sources":["summernote.js","switch.js","upvote.js"],"names":[],"mappingstoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"addons.js","sourcesContent":["/**\r\n * Super simple wysiwyg editor on Bootstrap v0.6.16\r\n * http://summernote.org/\r\n *\r\n * summernote.js\r\n * Copyright 2013-2015 Alan Hong. and other contributors\r\n * summernote may be freely distributed under the MIT license./\r\n *\r\n * Date: 2015-08-03T16:41Z\r\n */\r\n(function (factory) {\r\n  /* global define */\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define(['jquery'], factory);\r\n  } else {\r\n    // Browser globals: jQuery\r\n    factory(window.jQuery);\r\n  }\r\n}(function ($) {\r\n  \r\n\r\n\r\n  if (!Array.prototype.reduce) {\r\n    /**\r\n     * Array.prototype.reduce polyfill\r\n     *\r\n     * @param {Function} callback\r\n     * @param {Value} [initialValue]\r\n     * @return {Value}\r\n     *\r\n     * @see http://goo.gl/WNriQD\r\n     */\r\n    Array.prototype.reduce = function (callback) {\r\n      var t = Object(this), len = t.length >>> 0, k = 0, value;\r\n      if (arguments.length === 2) {\r\n        value = arguments[1];\r\n      } else {\r\n        while (k < len && !(k in t)) {\r\n          k++;\r\n        }\r\n        if (k >= len) {\r\n          throw new TypeError('Reduce of empty array with no initial value');\r\n        }\r\n        value = t[k++];\r\n      }\r\n      for (; k < len; k++) {\r\n        if (k in t) {\r\n          value = callback(value, t[k], k, t);\r\n        }\r\n      }\r\n      return value;\r\n    };\r\n  }\r\n\r\n  if ('function' !== typeof Array.prototype.filter) {\r\n    /**\r\n     * Array.prototype.filter polyfill\r\n     *\r\n     * @param {Function} func\r\n     * @return {Array}\r\n     *\r\n     * @see http://goo.gl/T1KFnq\r\n     */\r\n    Array.prototype.filter = function (func) {\r\n      var t = Object(this), len = t.length >>> 0;\r\n\r\n      var res = [];\r\n      var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\r\n      for (var i = 0; i < len; i++) {\r\n        if (i in t) {\r\n          var val = t[i];\r\n          if (func.call(thisArg, val, i, t)) {\r\n            res.push(val);\r\n          }\r\n        }\r\n      }\r\n  \r\n      return res;\r\n    };\r\n  }\r\n\r\n  if (!Array.prototype.map) {\r\n    /**\r\n     * Array.prototype.map polyfill\r\n     *\r\n     * @param {Function} callback\r\n     * @return {Array}\r\n     *\r\n     * @see https://goo.gl/SMWaMK\r\n     */\r\n    Array.prototype.map = function (callback, thisArg) {\r\n      var T, A, k;\r\n      if (this === null) {\r\n        throw new TypeError(' this is null or not defined');\r\n      }\r\n\r\n      var O = Object(this);\r\n      var len = O.length >>> 0;\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError(callback + ' is not a function');\r\n      }\r\n  \r\n      if (arguments.length > 1) {\r\n        T = thisArg;\r\n      }\r\n  \r\n      A = new Array(len);\r\n      k = 0;\r\n  \r\n      while (k < len) {\r\n        var kValue, mappedValue;\r\n        if (k in O) {\r\n          kValue = O[k];\r\n          mappedValue = callback.call(T, kValue, k, O);\r\n          A[k] = mappedValue;\r\n        }\r\n        k++;\r\n      }\r\n      return A;\r\n    };\r\n  }\r\n\r\n  var isSupportAmd = typeof define === 'function' && define.amd;\r\n\r\n  /**\r\n   * returns whether font is installed or not.\r\n   *\r\n   * @param {String} fontName\r\n   * @return {Boolean}\r\n   */\r\n  var isFontInstalled = function (fontName) {\r\n    var testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\r\n    var $tester = $('<div>').css({\r\n      position: 'absolute',\r\n      left: '-9999px',\r\n      top: '-9999px',\r\n      fontSize: '200px'\r\n    }).text('mmmmmmmmmwwwwwww').appendTo(document.body);\r\n\r\n    var originalWidth = $tester.css('fontFamily', testFontName).width();\r\n    var width = $tester.css('fontFamily', fontName + ',' + testFontName).width();\r\n\r\n    $tester.remove();\r\n\r\n    return originalWidth !== width;\r\n  };\r\n\r\n  var userAgent = navigator.userAgent;\r\n  var isMSIE = /MSIE|Trident/i.test(userAgent);\r\n  var browserVersion;\r\n  if (isMSIE) {\r\n    var matches = /MSIE (\\d+[.]\\d+)/.exec(userAgent);\r\n    if (matches) {\r\n      browserVersion = parseFloat(matches[1]);\r\n    }\r\n    matches = /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(userAgent);\r\n    if (matches) {\r\n      browserVersion = parseFloat(matches[1]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @class core.agent\r\n   *\r\n   * Object which check platform and agent\r\n   *\r\n   * @singleton\r\n   * @alternateClassName agent\r\n   */\r\n  var agent = {\r\n    /** @property {Boolean} [isMac=false] true if this agent is Mac  */\r\n    isMac: navigator.appVersion.indexOf('Mac') > -1,\r\n    /** @property {Boolean} [isMSIE=false] true if this agent is a Internet Explorer  */\r\n    isMSIE: isMSIE,\r\n    /** @property {Boolean} [isFF=false] true if this agent is a Firefox  */\r\n    isFF: /firefox/i.test(userAgent),\r\n    isWebkit: /webkit/i.test(userAgent),\r\n    /** @property {Boolean} [isSafari=false] true if this agent is a Safari  */\r\n    isSafari: /safari/i.test(userAgent),\r\n    /** @property {Float} browserVersion current browser version  */\r\n    browserVersion: browserVersion,\r\n    /** @property {String} jqueryVersion current jQuery version string  */\r\n    jqueryVersion: parseFloat($.fn.jquery),\r\n    isSupportAmd: isSupportAmd,\r\n    hasCodeMirror: isSupportAmd ? require.specified('CodeMirror') : !!window.CodeMirror,\r\n    isFontInstalled: isFontInstalled,\r\n    isW3CRangeSupport: !!document.createRange\r\n  };\r\n\r\n  /**\r\n   * @class core.func\r\n   *\r\n   * func utils (for high-order func's arg)\r\n   *\r\n   * @singleton\r\n   * @alternateClassName func\r\n   */\r\n  var func = (function () {\r\n    var eq = function (itemA) {\r\n      return function (itemB) {\r\n        return itemA === itemB;\r\n      };\r\n    };\r\n\r\n    var eq2 = function (itemA, itemB) {\r\n      return itemA === itemB;\r\n    };\r\n\r\n    var peq2 = function (propName) {\r\n      return function (itemA, itemB) {\r\n        return itemA[propName] === itemB[propName];\r\n      };\r\n    };\r\n\r\n    var ok = function () {\r\n      return true;\r\n    };\r\n\r\n    var fail = function () {\r\n      return false;\r\n    };\r\n\r\n    var not = function (f) {\r\n      return function () {\r\n        return !f.apply(f, arguments);\r\n      };\r\n    };\r\n\r\n    var and = function (fA, fB) {\r\n      return function (item) {\r\n        return fA(item) && fB(item);\r\n      };\r\n    };\r\n\r\n    var self = function (a) {\r\n      return a;\r\n    };\r\n\r\n    var idCounter = 0;\r\n\r\n    /**\r\n     * generate a globally-unique id\r\n     *\r\n     * @param {String} [prefix]\r\n     */\r\n    var uniqueId = function (prefix) {\r\n      var id = ++idCounter + '';\r\n      return prefix ? prefix + id : id;\r\n    };\r\n\r\n    /**\r\n     * returns bnd (bounds) from rect\r\n     *\r\n     * - IE Compatability Issue: http://goo.gl/sRLOAo\r\n     * - Scroll Issue: http://goo.gl/sNjUc\r\n     *\r\n     * @param {Rect} rect\r\n     * @return {Object} bounds\r\n     * @return {Number} bounds.top\r\n     * @return {Number} bounds.left\r\n     * @return {Number} bounds.width\r\n     * @return {Number} bounds.height\r\n     */\r\n    var rect2bnd = function (rect) {\r\n      var $document = $(document);\r\n      return {\r\n        top: rect.top + $document.scrollTop(),\r\n        left: rect.left + $document.scrollLeft(),\r\n        width: rect.right - rect.left,\r\n        height: rect.bottom - rect.top\r\n      };\r\n    };\r\n\r\n    /**\r\n     * returns a copy of the object where the keys have become the values and the values the keys.\r\n     * @param {Object} obj\r\n     * @return {Object}\r\n     */\r\n    var invertObject = function (obj) {\r\n      var inverted = {};\r\n      for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          inverted[obj[key]] = key;\r\n        }\r\n      }\r\n      return inverted;\r\n    };\r\n\r\n    /**\r\n     * @param {String} namespace\r\n     * @param {String} [prefix]\r\n     * @return {String}\r\n     */\r\n    var namespaceToCamel = function (namespace, prefix) {\r\n      prefix = prefix || '';\r\n      return prefix + namespace.split('.').map(function (name) {\r\n        return name.substring(0, 1).toUpperCase() + name.substring(1);\r\n      }).join('');\r\n    };\r\n\r\n    return {\r\n      eq: eq,\r\n      eq2: eq2,\r\n      peq2: peq2,\r\n      ok: ok,\r\n      fail: fail,\r\n      self: self,\r\n      not: not,\r\n      and: and,\r\n      uniqueId: uniqueId,\r\n      rect2bnd: rect2bnd,\r\n      invertObject: invertObject,\r\n      namespaceToCamel: namespaceToCamel\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * @class core.list\r\n   *\r\n   * list utils\r\n   *\r\n   * @singleton\r\n   * @alternateClassName list\r\n   */\r\n  var list = (function () {\r\n    /**\r\n     * returns the first item of an array.\r\n     *\r\n     * @param {Array} array\r\n     */\r\n    var head = function (array) {\r\n      return array[0];\r\n    };\r\n\r\n    /**\r\n     * returns the last item of an array.\r\n     *\r\n     * @param {Array} array\r\n     */\r\n    var last = function (array) {\r\n      return array[array.length - 1];\r\n    };\r\n\r\n    /**\r\n     * returns everything but the last entry of the array.\r\n     *\r\n     * @param {Array} array\r\n     */\r\n    var initial = function (array) {\r\n      return array.slice(0, array.length - 1);\r\n    };\r\n\r\n    /**\r\n     * returns the rest of the items in an array.\r\n     *\r\n     * @param {Array} array\r\n     */\r\n    var tail = function (array) {\r\n      return array.slice(1);\r\n    };\r\n\r\n    /**\r\n     * returns item of array\r\n     */\r\n    var find = function (array, pred) {\r\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\r\n        var item = array[idx];\r\n        if (pred(item)) {\r\n          return item;\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * returns true if all of the values in the array pass the predicate truth test.\r\n     */\r\n    var all = function (array, pred) {\r\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\r\n        if (!pred(array[idx])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n\r\n    /**\r\n     * returns index of item\r\n     */\r\n    var indexOf = function (array, item) {\r\n      return $.inArray(item, array);\r\n    };\r\n\r\n    /**\r\n     * returns true if the value is present in the list.\r\n     */\r\n    var contains = function (array, item) {\r\n      return indexOf(array, item) !== -1;\r\n    };\r\n\r\n    /**\r\n     * get sum from a list\r\n     *\r\n     * @param {Array} array - array\r\n     * @param {Function} fn - iterator\r\n     */\r\n    var sum = function (array, fn) {\r\n      fn = fn || func.self;\r\n      return array.reduce(function (memo, v) {\r\n        return memo + fn(v);\r\n      }, 0);\r\n    };\r\n  \r\n    /**\r\n     * returns a copy of the collection with array type.\r\n     * @param {Collection} collection - collection eg) node.childNodes, ...\r\n     */\r\n    var from = function (collection) {\r\n      var result = [], idx = -1, length = collection.length;\r\n      while (++idx < length) {\r\n        result[idx] = collection[idx];\r\n      }\r\n      return result;\r\n    };\r\n  \r\n    /**\r\n     * cluster elements by predicate function.\r\n     *\r\n     * @param {Array} array - array\r\n     * @param {Function} fn - predicate function for cluster rule\r\n     * @param {Array[]}\r\n     */\r\n    var clusterBy = function (array, fn) {\r\n      if (!array.length) { return []; }\r\n      var aTail = tail(array);\r\n      return aTail.reduce(function (memo, v) {\r\n        var aLast = last(memo);\r\n        if (fn(last(aLast), v)) {\r\n          aLast[aLast.length] = v;\r\n        } else {\r\n          memo[memo.length] = [v];\r\n        }\r\n        return memo;\r\n      }, [[head(array)]]);\r\n    };\r\n  \r\n    /**\r\n     * returns a copy of the array with all falsy values removed\r\n     *\r\n     * @param {Array} array - array\r\n     * @param {Function} fn - predicate function for cluster rule\r\n     */\r\n    var compact = function (array) {\r\n      var aResult = [];\r\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\r\n        if (array[idx]) { aResult.push(array[idx]); }\r\n      }\r\n      return aResult;\r\n    };\r\n\r\n    /**\r\n     * produces a duplicate-free version of the array\r\n     *\r\n     * @param {Array} array\r\n     */\r\n    var unique = function (array) {\r\n      var results = [];\r\n\r\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\r\n        if (!contains(results, array[idx])) {\r\n          results.push(array[idx]);\r\n        }\r\n      }\r\n\r\n      return results;\r\n    };\r\n\r\n    /**\r\n     * returns next item.\r\n     * @param {Array} array\r\n     */\r\n    var next = function (array, item) {\r\n      var idx = indexOf(array, item);\r\n      if (idx === -1) { return null; }\r\n\r\n      return array[idx + 1];\r\n    };\r\n\r\n    /**\r\n     * returns prev item.\r\n     * @param {Array} array\r\n     */\r\n    var prev = function (array, item) {\r\n      var idx = indexOf(array, item);\r\n      if (idx === -1) { return null; }\r\n\r\n      return array[idx - 1];\r\n    };\r\n  \r\n    return { head: head, last: last, initial: initial, tail: tail,\r\n             prev: prev, next: next, find: find, contains: contains,\r\n             all: all, sum: sum, from: from,\r\n             clusterBy: clusterBy, compact: compact, unique: unique };\r\n  })();\r\n\r\n\r\n  var NBSP_CHAR = String.fromCharCode(160);\r\n  var ZERO_WIDTH_NBSP_CHAR = '\\ufeff';\r\n\r\n  /**\r\n   * @class core.dom\r\n   *\r\n   * Dom functions\r\n   *\r\n   * @singleton\r\n   * @alternateClassName dom\r\n   */\r\n  var dom = (function () {\r\n    /**\r\n     * @method isEditable\r\n     *\r\n     * returns whether node is `note-editable` or not.\r\n     *\r\n     * @param {Node} node\r\n     * @return {Boolean}\r\n     */\r\n    var isEditable = function (node) {\r\n      return node && $(node).hasClass('note-editable');\r\n    };\r\n\r\n    /**\r\n     * @method isControlSizing\r\n     *\r\n     * returns whether node is `note-control-sizing` or not.\r\n     *\r\n     * @param {Node} node\r\n     * @return {Boolean}\r\n     */\r\n    var isControlSizing = function (node) {\r\n      return node && $(node).hasClass('note-control-sizing');\r\n    };\r\n\r\n    /**\r\n     * @method  buildLayoutInfo\r\n     *\r\n     * build layoutInfo from $editor(.note-editor)\r\n     *\r\n     * @param {jQuery} $editor\r\n     * @return {Object}\r\n     * @return {Function} return.editor\r\n     * @return {Node} return.dropzone\r\n     * @return {Node} return.toolbar\r\n     * @return {Node} return.editable\r\n     * @return {Node} return.codable\r\n     * @return {Node} return.popover\r\n     * @return {Node} return.handle\r\n     * @return {Node} return.dialog\r\n     */\r\n    var buildLayoutInfo = function ($editor) {\r\n      var makeFinder;\r\n\r\n      // air mode\r\n      if ($editor.hasClass('note-air-editor')) {\r\n        var id = list.last($editor.attr('id').split('-'));\r\n        makeFinder = function (sIdPrefix) {\r\n          return function () { return $(sIdPrefix + id); };\r\n        };\r\n\r\n        return {\r\n          editor: function () { return $editor; },\r\n          holder : function () { return $editor.data('holder'); },\r\n          editable: function () { return $editor; },\r\n          popover: makeFinder('#note-popover-'),\r\n          handle: makeFinder('#note-handle-'),\r\n          dialog: makeFinder('#note-dialog-')\r\n        };\r\n\r\n        // frame mode\r\n      } else {\r\n        makeFinder = function (className, $base) {\r\n          $base = $base || $editor;\r\n          return function () { return $base.find(className); };\r\n        };\r\n\r\n        var options = $editor.data('options');\r\n        var $dialogHolder = (options && options.dialogsInBody) ? $(document.body) : null;\r\n\r\n        return {\r\n          editor: function () { return $editor; },\r\n          holder : function () { return $editor.data('holder'); },\r\n          dropzone: makeFinder('.note-dropzone'),\r\n          toolbar: makeFinder('.note-toolbar'),\r\n          editable: makeFinder('.note-editable'),\r\n          codable: makeFinder('.note-codable'),\r\n          statusbar: makeFinder('.note-statusbar'),\r\n          popover: makeFinder('.note-popover'),\r\n          handle: makeFinder('.note-handle'),\r\n          dialog: makeFinder('.note-dialog', $dialogHolder)\r\n        };\r\n      }\r\n    };\r\n\r\n    /**\r\n     * returns makeLayoutInfo from editor's descendant node.\r\n     *\r\n     * @private\r\n     * @param {Node} descendant\r\n     * @return {Object}\r\n     */\r\n    var makeLayoutInfo = function (descendant) {\r\n      var $target = $(descendant).closest('.note-editor, .note-air-editor, .note-air-layout');\r\n\r\n      if (!$target.length) {\r\n        return null;\r\n      }\r\n\r\n      var $editor;\r\n      if ($target.is('.note-editor, .note-air-editor')) {\r\n        $editor = $target;\r\n      } else {\r\n        $editor = $('#note-editor-' + list.last($target.attr('id').split('-')));\r\n      }\r\n\r\n      return buildLayoutInfo($editor);\r\n    };\r\n\r\n    /**\r\n     * @method makePredByNodeName\r\n     *\r\n     * returns predicate which judge whether nodeName is same\r\n     *\r\n     * @param {String} nodeName\r\n     * @return {Function}\r\n     */\r\n    var makePredByNodeName = function (nodeName) {\r\n      nodeName = nodeName.toUpperCase();\r\n      return function (node) {\r\n        return node && node.nodeName.toUpperCase() === nodeName;\r\n      };\r\n    };\r\n\r\n    /**\r\n     * @method isText\r\n     *\r\n     *\r\n     *\r\n     * @param {Node} node\r\n     * @return {Boolean} true if node's type is text(3)\r\n     */\r\n    var isText = function (node) {\r\n      return node && node.nodeType === 3;\r\n    };\r\n\r\n    /**\r\n     * ex) br, col, embed, hr, img, input, ...\r\n     * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\r\n     */\r\n    var isVoid = function (node) {\r\n      return node && /^BR|^IMG|^HR|^IFRAME|^BUTTON/.test(node.nodeName.toUpperCase());\r\n    };\r\n\r\n    var isPara = function (node) {\r\n      if (isEditable(node)) {\r\n        return false;\r\n      }\r\n\r\n      // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\r\n      return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\r\n    };\r\n\r\n    var isLi = makePredByNodeName('LI');\r\n\r\n    var isPurePara = function (node) {\r\n      return isPara(node) && !isLi(node);\r\n    };\r\n\r\n    var isTable = makePredByNodeName('TABLE');\r\n\r\n    var isInline = function (node) {\r\n      return !isBodyContainer(node) &&\r\n             !isList(node) &&\r\n             !isHr(node) &&\r\n             !isPara(node) &&\r\n             !isTable(node) &&\r\n             !isBlockquote(node);\r\n    };\r\n\r\n    var isList = function (node) {\r\n      return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\r\n    };\r\n\r\n    var isHr = makePredByNodeName('HR');\r\n\r\n    var isCell = function (node) {\r\n      return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\r\n    };\r\n\r\n    var isBlockquote = makePredByNodeName('BLOCKQUOTE');\r\n\r\n    var isBodyContainer = function (node) {\r\n      return isCell(node) || isBlockquote(node) || isEditable(node);\r\n    };\r\n\r\n    var isAnchor = makePredByNodeName('A');\r\n\r\n    var isParaInline = function (node) {\r\n      return isInline(node) && !!ancestor(node, isPara);\r\n    };\r\n\r\n    var isBodyInline = function (node) {\r\n      return isInline(node) && !ancestor(node, isPara);\r\n    };\r\n\r\n    var isBody = makePredByNodeName('BODY');\r\n\r\n    /**\r\n     * returns whether nodeB is closest sibling of nodeA\r\n     *\r\n     * @param {Node} nodeA\r\n     * @param {Node} nodeB\r\n     * @return {Boolean}\r\n     */\r\n    var isClosestSibling = function (nodeA, nodeB) {\r\n      return nodeA.nextSibling === nodeB ||\r\n             nodeA.previousSibling === nodeB;\r\n    };\r\n\r\n    /**\r\n     * returns array of closest siblings with node\r\n     *\r\n     * @param {Node} node\r\n     * @param {function} [pred] - predicate function\r\n     * @return {Node[]}\r\n     */\r\n    var withClosestSiblings = function (node, pred) {\r\n      pred = pred || func.ok;\r\n\r\n      var siblings = [];\r\n      if (node.previousSibling && pred(node.previousSibling)) {\r\n        siblings.push(node.previousSibling);\r\n      }\r\n      siblings.push(node);\r\n      if (node.nextSibling && pred(node.nextSibling)) {\r\n        siblings.push(node.nextSibling);\r\n      }\r\n      return siblings;\r\n    };\r\n\r\n    /**\r\n     * blank HTML for cursor position\r\n     * - [workaround] old IE only works with &nbsp;\r\n     * - [workaround] IE11 and other browser works with bogus br\r\n     */\r\n    var blankHTML = agent.isMSIE && agent.browserVersion < 11 ? '&nbsp;' : '<br>';\r\n\r\n    /**\r\n     * @method nodeLength\r\n     *\r\n     * returns #text's text size or element's childNodes size\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    var nodeLength = function (node) {\r\n      if (isText(node)) {\r\n        return node.nodeValue.length;\r\n      }\r\n\r\n      return node.childNodes.length;\r\n    };\r\n\r\n    /**\r\n     * returns whether node is empty or not.\r\n     *\r\n     * @param {Node} node\r\n     * @return {Boolean}\r\n     */\r\n    var isEmpty = function (node) {\r\n      var len = nodeLength(node);\r\n\r\n      if (len === 0) {\r\n        return true;\r\n      } else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {\r\n        // ex) <p><br></p>, <span><br></span>\r\n        return true;\r\n      } else if (list.all(node.childNodes, isText) && node.innerHTML === '') {\r\n        // ex) <p></p>, <span></span>\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * padding blankHTML if node is empty (for cursor position)\r\n     */\r\n    var paddingBlankHTML = function (node) {\r\n      if (!isVoid(node) && !nodeLength(node)) {\r\n        node.innerHTML = blankHTML;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * find nearest ancestor predicate hit\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} pred - predicate function\r\n     */\r\n    var ancestor = function (node, pred) {\r\n      while (node) {\r\n        if (pred(node)) { return node; }\r\n        if (isEditable(node)) { break; }\r\n\r\n        node = node.parentNode;\r\n      }\r\n      return null;\r\n    };\r\n\r\n    /**\r\n     * find nearest ancestor only single child blood line and predicate hit\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} pred - predicate function\r\n     */\r\n    var singleChildAncestor = function (node, pred) {\r\n      node = node.parentNode;\r\n\r\n      while (node) {\r\n        if (nodeLength(node) !== 1) { break; }\r\n        if (pred(node)) { return node; }\r\n        if (isEditable(node)) { break; }\r\n\r\n        node = node.parentNode;\r\n      }\r\n      return null;\r\n    };\r\n\r\n    /**\r\n     * returns new array of ancestor nodes (until predicate hit).\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} [optional] pred - predicate function\r\n     */\r\n    var listAncestor = function (node, pred) {\r\n      pred = pred || func.fail;\r\n\r\n      var ancestors = [];\r\n      ancestor(node, function (el) {\r\n        if (!isEditable(el)) {\r\n          ancestors.push(el);\r\n        }\r\n\r\n        return pred(el);\r\n      });\r\n      return ancestors;\r\n    };\r\n\r\n    /**\r\n     * find farthest ancestor predicate hit\r\n     */\r\n    var lastAncestor = function (node, pred) {\r\n      var ancestors = listAncestor(node);\r\n      return list.last(ancestors.filter(pred));\r\n    };\r\n\r\n    /**\r\n     * returns common ancestor node between two nodes.\r\n     *\r\n     * @param {Node} nodeA\r\n     * @param {Node} nodeB\r\n     */\r\n    var commonAncestor = function (nodeA, nodeB) {\r\n      var ancestors = listAncestor(nodeA);\r\n      for (var n = nodeB; n; n = n.parentNode) {\r\n        if ($.inArray(n, ancestors) > -1) { return n; }\r\n      }\r\n      return null; // difference document area\r\n    };\r\n\r\n    /**\r\n     * listing all previous siblings (until predicate hit).\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} [optional] pred - predicate function\r\n     */\r\n    var listPrev = function (node, pred) {\r\n      pred = pred || func.fail;\r\n\r\n      var nodes = [];\r\n      while (node) {\r\n        if (pred(node)) { break; }\r\n        nodes.push(node);\r\n        node = node.previousSibling;\r\n      }\r\n      return nodes;\r\n    };\r\n\r\n    /**\r\n     * listing next siblings (until predicate hit).\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} [pred] - predicate function\r\n     */\r\n    var listNext = function (node, pred) {\r\n      pred = pred || func.fail;\r\n\r\n      var nodes = [];\r\n      while (node) {\r\n        if (pred(node)) { break; }\r\n        nodes.push(node);\r\n        node = node.nextSibling;\r\n      }\r\n      return nodes;\r\n    };\r\n\r\n    /**\r\n     * listing descendant nodes\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} [pred] - predicate function\r\n     */\r\n    var listDescendant = function (node, pred) {\r\n      var descendents = [];\r\n      pred = pred || func.ok;\r\n\r\n      // start DFS(depth first search) with node\r\n      (function fnWalk(current) {\r\n        if (node !== current && pred(current)) {\r\n          descendents.push(current);\r\n        }\r\n        for (var idx = 0, len = current.childNodes.length; idx < len; idx++) {\r\n          fnWalk(current.childNodes[idx]);\r\n        }\r\n      })(node);\r\n\r\n      return descendents;\r\n    };\r\n\r\n    /**\r\n     * wrap node with new tag.\r\n     *\r\n     * @param {Node} node\r\n     * @param {Node} tagName of wrapper\r\n     * @return {Node} - wrapper\r\n     */\r\n    var wrap = function (node, wrapperName) {\r\n      var parent = node.parentNode;\r\n      var wrapper = $('<' + wrapperName + '>')[0];\r\n\r\n      parent.insertBefore(wrapper, node);\r\n      wrapper.appendChild(node);\r\n\r\n      return wrapper;\r\n    };\r\n\r\n    /**\r\n     * insert node after preceding\r\n     *\r\n     * @param {Node} node\r\n     * @param {Node} preceding - predicate function\r\n     */\r\n    var insertAfter = function (node, preceding) {\r\n      var next = preceding.nextSibling, parent = preceding.parentNode;\r\n      if (next) {\r\n        parent.insertBefore(node, next);\r\n      } else {\r\n        parent.appendChild(node);\r\n      }\r\n      return node;\r\n    };\r\n\r\n    /**\r\n     * append elements.\r\n     *\r\n     * @param {Node} node\r\n     * @param {Collection} aChild\r\n     */\r\n    var appendChildNodes = function (node, aChild) {\r\n      $.each(aChild, function (idx, child) {\r\n        node.appendChild(child);\r\n      });\r\n      return node;\r\n    };\r\n\r\n    /**\r\n     * returns whether boundaryPoint is left edge or not.\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @return {Boolean}\r\n     */\r\n    var isLeftEdgePoint = function (point) {\r\n      return point.offset === 0;\r\n    };\r\n\r\n    /**\r\n     * returns whether boundaryPoint is right edge or not.\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @return {Boolean}\r\n     */\r\n    var isRightEdgePoint = function (point) {\r\n      return point.offset === nodeLength(point.node);\r\n    };\r\n\r\n    /**\r\n     * returns whether boundaryPoint is edge or not.\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @return {Boolean}\r\n     */\r\n    var isEdgePoint = function (point) {\r\n      return isLeftEdgePoint(point) || isRightEdgePoint(point);\r\n    };\r\n\r\n    /**\r\n     * returns wheter node is left edge of ancestor or not.\r\n     *\r\n     * @param {Node} node\r\n     * @param {Node} ancestor\r\n     * @return {Boolean}\r\n     */\r\n    var isLeftEdgeOf = function (node, ancestor) {\r\n      while (node && node !== ancestor) {\r\n        if (position(node) !== 0) {\r\n          return false;\r\n        }\r\n        node = node.parentNode;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    /**\r\n     * returns whether node is right edge of ancestor or not.\r\n     *\r\n     * @param {Node} node\r\n     * @param {Node} ancestor\r\n     * @return {Boolean}\r\n     */\r\n    var isRightEdgeOf = function (node, ancestor) {\r\n      while (node && node !== ancestor) {\r\n        if (position(node) !== nodeLength(node.parentNode) - 1) {\r\n          return false;\r\n        }\r\n        node = node.parentNode;\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    /**\r\n     * returns whether point is left edge of ancestor or not.\r\n     * @param {BoundaryPoint} point\r\n     * @param {Node} ancestor\r\n     * @return {Boolean}\r\n     */\r\n    var isLeftEdgePointOf = function (point, ancestor) {\r\n      return isLeftEdgePoint(point) && isLeftEdgeOf(point.node, ancestor);\r\n    };\r\n\r\n    /**\r\n     * returns whether point is right edge of ancestor or not.\r\n     * @param {BoundaryPoint} point\r\n     * @param {Node} ancestor\r\n     * @return {Boolean}\r\n     */\r\n    var isRightEdgePointOf = function (point, ancestor) {\r\n      return isRightEdgePoint(point) && isRightEdgeOf(point.node, ancestor);\r\n    };\r\n\r\n    /**\r\n     * returns offset from parent.\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    var position = function (node) {\r\n      var offset = 0;\r\n      while ((node = node.previousSibling)) {\r\n        offset += 1;\r\n      }\r\n      return offset;\r\n    };\r\n\r\n    var hasChildren = function (node) {\r\n      return !!(node && node.childNodes && node.childNodes.length);\r\n    };\r\n\r\n    /**\r\n     * returns previous boundaryPoint\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @param {Boolean} isSkipInnerOffset\r\n     * @return {BoundaryPoint}\r\n     */\r\n    var prevPoint = function (point, isSkipInnerOffset) {\r\n      var node, offset;\r\n\r\n      if (point.offset === 0) {\r\n        if (isEditable(point.node)) {\r\n          return null;\r\n        }\r\n\r\n        node = point.node.parentNode;\r\n        offset = position(point.node);\r\n      } else if (hasChildren(point.node)) {\r\n        node = point.node.childNodes[point.offset - 1];\r\n        offset = nodeLength(node);\r\n      } else {\r\n        node = point.node;\r\n        offset = isSkipInnerOffset ? 0 : point.offset - 1;\r\n      }\r\n\r\n      return {\r\n        node: node,\r\n        offset: offset\r\n      };\r\n    };\r\n\r\n    /**\r\n     * returns next boundaryPoint\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @param {Boolean} isSkipInnerOffset\r\n     * @return {BoundaryPoint}\r\n     */\r\n    var nextPoint = function (point, isSkipInnerOffset) {\r\n      var node, offset;\r\n\r\n      if (nodeLength(point.node) === point.offset) {\r\n        if (isEditable(point.node)) {\r\n          return null;\r\n        }\r\n\r\n        node = point.node.parentNode;\r\n        offset = position(point.node) + 1;\r\n      } else if (hasChildren(point.node)) {\r\n        node = point.node.childNodes[point.offset];\r\n        offset = 0;\r\n      } else {\r\n        node = point.node;\r\n        offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\r\n      }\r\n\r\n      return {\r\n        node: node,\r\n        offset: offset\r\n      };\r\n    };\r\n\r\n    /**\r\n     * returns whether pointA and pointB is same or not.\r\n     *\r\n     * @param {BoundaryPoint} pointA\r\n     * @param {BoundaryPoint} pointB\r\n     * @return {Boolean}\r\n     */\r\n    var isSamePoint = function (pointA, pointB) {\r\n      return pointA.node === pointB.node && pointA.offset === pointB.offset;\r\n    };\r\n\r\n    /**\r\n     * returns whether point is visible (can set cursor) or not.\r\n     * \r\n     * @param {BoundaryPoint} point\r\n     * @return {Boolean}\r\n     */\r\n    var isVisiblePoint = function (point) {\r\n      if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {\r\n        return true;\r\n      }\r\n\r\n      var leftNode = point.node.childNodes[point.offset - 1];\r\n      var rightNode = point.node.childNodes[point.offset];\r\n      if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * @method prevPointUtil\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @param {Function} pred\r\n     * @return {BoundaryPoint}\r\n     */\r\n    var prevPointUntil = function (point, pred) {\r\n      while (point) {\r\n        if (pred(point)) {\r\n          return point;\r\n        }\r\n\r\n        point = prevPoint(point);\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    /**\r\n     * @method nextPointUntil\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @param {Function} pred\r\n     * @return {BoundaryPoint}\r\n     */\r\n    var nextPointUntil = function (point, pred) {\r\n      while (point) {\r\n        if (pred(point)) {\r\n          return point;\r\n        }\r\n\r\n        point = nextPoint(point);\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    /**\r\n     * returns whether point has character or not.\r\n     *\r\n     * @param {Point} point\r\n     * @return {Boolean}\r\n     */\r\n    var isCharPoint = function (point) {\r\n      if (!isText(point.node)) {\r\n        return false;\r\n      }\r\n\r\n      var ch = point.node.nodeValue.charAt(point.offset - 1);\r\n      return ch && (ch !== ' ' && ch !== NBSP_CHAR);\r\n    };\r\n\r\n    /**\r\n     * @method walkPoint\r\n     *\r\n     * @param {BoundaryPoint} startPoint\r\n     * @param {BoundaryPoint} endPoint\r\n     * @param {Function} handler\r\n     * @param {Boolean} isSkipInnerOffset\r\n     */\r\n    var walkPoint = function (startPoint, endPoint, handler, isSkipInnerOffset) {\r\n      var point = startPoint;\r\n\r\n      while (point) {\r\n        handler(point);\r\n\r\n        if (isSamePoint(point, endPoint)) {\r\n          break;\r\n        }\r\n\r\n        var isSkipOffset = isSkipInnerOffset &&\r\n                           startPoint.node !== point.node &&\r\n                           endPoint.node !== point.node;\r\n        point = nextPoint(point, isSkipOffset);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method makeOffsetPath\r\n     *\r\n     * return offsetPath(array of offset) from ancestor\r\n     *\r\n     * @param {Node} ancestor - ancestor node\r\n     * @param {Node} node\r\n     */\r\n    var makeOffsetPath = function (ancestor, node) {\r\n      var ancestors = listAncestor(node, func.eq(ancestor));\r\n      return ancestors.map(position).reverse();\r\n    };\r\n\r\n    /**\r\n     * @method fromOffsetPath\r\n     *\r\n     * return element from offsetPath(array of offset)\r\n     *\r\n     * @param {Node} ancestor - ancestor node\r\n     * @param {array} offsets - offsetPath\r\n     */\r\n    var fromOffsetPath = function (ancestor, offsets) {\r\n      var current = ancestor;\r\n      for (var i = 0, len = offsets.length; i < len; i++) {\r\n        if (current.childNodes.length <= offsets[i]) {\r\n          current = current.childNodes[current.childNodes.length - 1];\r\n        } else {\r\n          current = current.childNodes[offsets[i]];\r\n        }\r\n      }\r\n      return current;\r\n    };\r\n\r\n    /**\r\n     * @method splitNode\r\n     *\r\n     * split element or #text\r\n     *\r\n     * @param {BoundaryPoint} point\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\r\n     * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\r\n     * @return {Node} right node of boundaryPoint\r\n     */\r\n    var splitNode = function (point, options) {\r\n      var isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\r\n      var isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\r\n\r\n      // edge case\r\n      if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\r\n        if (isLeftEdgePoint(point)) {\r\n          return point.node;\r\n        } else if (isRightEdgePoint(point)) {\r\n          return point.node.nextSibling;\r\n        }\r\n      }\r\n\r\n      // split #text\r\n      if (isText(point.node)) {\r\n        return point.node.splitText(point.offset);\r\n      } else {\r\n        var childNode = point.node.childNodes[point.offset];\r\n        var clone = insertAfter(point.node.cloneNode(false), point.node);\r\n        appendChildNodes(clone, listNext(childNode));\r\n\r\n        if (!isSkipPaddingBlankHTML) {\r\n          paddingBlankHTML(point.node);\r\n          paddingBlankHTML(clone);\r\n        }\r\n\r\n        return clone;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method splitTree\r\n     *\r\n     * split tree by point\r\n     *\r\n     * @param {Node} root - split root\r\n     * @param {BoundaryPoint} point\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\r\n     * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\r\n     * @return {Node} right node of boundaryPoint\r\n     */\r\n    var splitTree = function (root, point, options) {\r\n      // ex) [#text, <span>, <p>]\r\n      var ancestors = listAncestor(point.node, func.eq(root));\r\n\r\n      if (!ancestors.length) {\r\n        return null;\r\n      } else if (ancestors.length === 1) {\r\n        return splitNode(point, options);\r\n      }\r\n\r\n      return ancestors.reduce(function (node, parent) {\r\n        if (node === point.node) {\r\n          node = splitNode(point, options);\r\n        }\r\n\r\n        return splitNode({\r\n          node: parent,\r\n          offset: node ? dom.position(node) : nodeLength(parent)\r\n        }, options);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * split point\r\n     *\r\n     * @param {Point} point\r\n     * @param {Boolean} isInline\r\n     * @return {Object}\r\n     */\r\n    var splitPoint = function (point, isInline) {\r\n      // find splitRoot, container\r\n      //  - inline: splitRoot is a child of paragraph\r\n      //  - block: splitRoot is a child of bodyContainer\r\n      var pred = isInline ? isPara : isBodyContainer;\r\n      var ancestors = listAncestor(point.node, pred);\r\n      var topAncestor = list.last(ancestors) || point.node;\r\n\r\n      var splitRoot, container;\r\n      if (pred(topAncestor)) {\r\n        splitRoot = ancestors[ancestors.length - 2];\r\n        container = topAncestor;\r\n      } else {\r\n        splitRoot = topAncestor;\r\n        container = splitRoot.parentNode;\r\n      }\r\n\r\n      // if splitRoot is exists, split with splitTree\r\n      var pivot = splitRoot && splitTree(splitRoot, point, {\r\n        isSkipPaddingBlankHTML: isInline,\r\n        isNotSplitEdgePoint: isInline\r\n      });\r\n\r\n      // if container is point.node, find pivot with point.offset\r\n      if (!pivot && container === point.node) {\r\n        pivot = point.node.childNodes[point.offset];\r\n      }\r\n\r\n      return {\r\n        rightNode: pivot,\r\n        container: container\r\n      };\r\n    };\r\n\r\n    var create = function (nodeName) {\r\n      return document.createElement(nodeName);\r\n    };\r\n\r\n    var createText = function (text) {\r\n      return document.createTextNode(text);\r\n    };\r\n\r\n    /**\r\n     * @method remove\r\n     *\r\n     * remove node, (isRemoveChild: remove child or not)\r\n     *\r\n     * @param {Node} node\r\n     * @param {Boolean} isRemoveChild\r\n     */\r\n    var remove = function (node, isRemoveChild) {\r\n      if (!node || !node.parentNode) { return; }\r\n      if (node.removeNode) { return node.removeNode(isRemoveChild); }\r\n\r\n      var parent = node.parentNode;\r\n      if (!isRemoveChild) {\r\n        var nodes = [];\r\n        var i, len;\r\n        for (i = 0, len = node.childNodes.length; i < len; i++) {\r\n          nodes.push(node.childNodes[i]);\r\n        }\r\n\r\n        for (i = 0, len = nodes.length; i < len; i++) {\r\n          parent.insertBefore(nodes[i], node);\r\n        }\r\n      }\r\n\r\n      parent.removeChild(node);\r\n    };\r\n\r\n    /**\r\n     * @method removeWhile\r\n     *\r\n     * @param {Node} node\r\n     * @param {Function} pred\r\n     */\r\n    var removeWhile = function (node, pred) {\r\n      while (node) {\r\n        if (isEditable(node) || !pred(node)) {\r\n          break;\r\n        }\r\n\r\n        var parent = node.parentNode;\r\n        remove(node);\r\n        node = parent;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method replace\r\n     *\r\n     * replace node with provided nodeName\r\n     *\r\n     * @param {Node} node\r\n     * @param {String} nodeName\r\n     * @return {Node} - new node\r\n     */\r\n    var replace = function (node, nodeName) {\r\n      if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\r\n        return node;\r\n      }\r\n\r\n      var newNode = create(nodeName);\r\n\r\n      if (node.style.cssText) {\r\n        newNode.style.cssText = node.style.cssText;\r\n      }\r\n\r\n      appendChildNodes(newNode, list.from(node.childNodes));\r\n      insertAfter(newNode, node);\r\n      remove(node);\r\n\r\n      return newNode;\r\n    };\r\n\r\n    var isTextarea = makePredByNodeName('TEXTAREA');\r\n\r\n    /**\r\n     * @param {jQuery} $node\r\n     * @param {Boolean} [stripLinebreaks] - default: false\r\n     */\r\n    var value = function ($node, stripLinebreaks) {\r\n      var val = isTextarea($node[0]) ? $node.val() : $node.html();\r\n      if (stripLinebreaks) {\r\n        return val.replace(/[\\n\\r]/g, '');\r\n      }\r\n      return val;\r\n    };\r\n\r\n    /**\r\n     * @method html\r\n     *\r\n     * get the HTML contents of node\r\n     *\r\n     * @param {jQuery} $node\r\n     * @param {Boolean} [isNewlineOnBlock]\r\n     */\r\n    var html = function ($node, isNewlineOnBlock) {\r\n      var markup = value($node);\r\n\r\n      if (isNewlineOnBlock) {\r\n        var regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\r\n        markup = markup.replace(regexTag, function (match, endSlash, name) {\r\n          name = name.toUpperCase();\r\n          var isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\r\n                                       !!endSlash;\r\n          var isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\r\n\r\n          return match + ((isEndOfInlineContainer || isBlockNode) ? '\\n' : '');\r\n        });\r\n        markup = $.trim(markup);\r\n      }\r\n\r\n      return markup;\r\n    };\r\n\r\n    return {\r\n      /** @property {String} NBSP_CHAR */\r\n      NBSP_CHAR: NBSP_CHAR,\r\n      /** @property {String} ZERO_WIDTH_NBSP_CHAR */\r\n      ZERO_WIDTH_NBSP_CHAR: ZERO_WIDTH_NBSP_CHAR,\r\n      /** @property {String} blank */\r\n      blank: blankHTML,\r\n      /** @property {String} emptyPara */\r\n      emptyPara: '<p>' + blankHTML + '</p>',\r\n      makePredByNodeName: makePredByNodeName,\r\n      isEditable: isEditable,\r\n      isControlSizing: isControlSizing,\r\n      buildLayoutInfo: buildLayoutInfo,\r\n      makeLayoutInfo: makeLayoutInfo,\r\n      isText: isText,\r\n      isVoid: isVoid,\r\n      isPara: isPara,\r\n      isPurePara: isPurePara,\r\n      isInline: isInline,\r\n      isBlock: func.not(isInline),\r\n      isBodyInline: isBodyInline,\r\n      isBody: isBody,\r\n      isParaInline: isParaInline,\r\n      isList: isList,\r\n      isTable: isTable,\r\n      isCell: isCell,\r\n      isBlockquote: isBlockquote,\r\n      isBodyContainer: isBodyContainer,\r\n      isAnchor: isAnchor,\r\n      isDiv: makePredByNodeName('DIV'),\r\n      isLi: isLi,\r\n      isBR: makePredByNodeName('BR'),\r\n      isSpan: makePredByNodeName('SPAN'),\r\n      isB: makePredByNodeName('B'),\r\n      isU: makePredByNodeName('U'),\r\n      isS: makePredByNodeName('S'),\r\n      isI: makePredByNodeName('I'),\r\n      isImg: makePredByNodeName('IMG'),\r\n      isTextarea: isTextarea,\r\n      isEmpty: isEmpty,\r\n      isEmptyAnchor: func.and(isAnchor, isEmpty),\r\n      isClosestSibling: isClosestSibling,\r\n      withClosestSiblings: withClosestSiblings,\r\n      nodeLength: nodeLength,\r\n      isLeftEdgePoint: isLeftEdgePoint,\r\n      isRightEdgePoint: isRightEdgePoint,\r\n      isEdgePoint: isEdgePoint,\r\n      isLeftEdgeOf: isLeftEdgeOf,\r\n      isRightEdgeOf: isRightEdgeOf,\r\n      isLeftEdgePointOf: isLeftEdgePointOf,\r\n      isRightEdgePointOf: isRightEdgePointOf,\r\n      prevPoint: prevPoint,\r\n      nextPoint: nextPoint,\r\n      isSamePoint: isSamePoint,\r\n      isVisiblePoint: isVisiblePoint,\r\n      prevPointUntil: prevPointUntil,\r\n      nextPointUntil: nextPointUntil,\r\n      isCharPoint: isCharPoint,\r\n      walkPoint: walkPoint,\r\n      ancestor: ancestor,\r\n      singleChildAncestor: singleChildAncestor,\r\n      listAncestor: listAncestor,\r\n      lastAncestor: lastAncestor,\r\n      listNext: listNext,\r\n      listPrev: listPrev,\r\n      listDescendant: listDescendant,\r\n      commonAncestor: commonAncestor,\r\n      wrap: wrap,\r\n      insertAfter: insertAfter,\r\n      appendChildNodes: appendChildNodes,\r\n      position: position,\r\n      hasChildren: hasChildren,\r\n      makeOffsetPath: makeOffsetPath,\r\n      fromOffsetPath: fromOffsetPath,\r\n      splitTree: splitTree,\r\n      splitPoint: splitPoint,\r\n      create: create,\r\n      createText: createText,\r\n      remove: remove,\r\n      removeWhile: removeWhile,\r\n      replace: replace,\r\n      html: html,\r\n      value: value\r\n    };\r\n  })();\r\n\r\n\r\n  var range = (function () {\r\n\r\n    /**\r\n     * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js\r\n     *\r\n     * @param {TextRange} textRange\r\n     * @param {Boolean} isStart\r\n     * @return {BoundaryPoint}\r\n     *\r\n     * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx\r\n     */\r\n    var textRangeToPoint = function (textRange, isStart) {\r\n      var container = textRange.parentElement(), offset;\r\n  \r\n      var tester = document.body.createTextRange(), prevContainer;\r\n      var childNodes = list.from(container.childNodes);\r\n      for (offset = 0; offset < childNodes.length; offset++) {\r\n        if (dom.isText(childNodes[offset])) {\r\n          continue;\r\n        }\r\n        tester.moveToElementText(childNodes[offset]);\r\n        if (tester.compareEndPoints('StartToStart', textRange) >= 0) {\r\n          break;\r\n        }\r\n        prevContainer = childNodes[offset];\r\n      }\r\n  \r\n      if (offset !== 0 && dom.isText(childNodes[offset - 1])) {\r\n        var textRangeStart = document.body.createTextRange(), curTextNode = null;\r\n        textRangeStart.moveToElementText(prevContainer || container);\r\n        textRangeStart.collapse(!prevContainer);\r\n        curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;\r\n  \r\n        var pointTester = textRange.duplicate();\r\n        pointTester.setEndPoint('StartToStart', textRangeStart);\r\n        var textCount = pointTester.text.replace(/[\\r\\n]/g, '').length;\r\n  \r\n        while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {\r\n          textCount -= curTextNode.nodeValue.length;\r\n          curTextNode = curTextNode.nextSibling;\r\n        }\r\n  \r\n        /* jshint ignore:start */\r\n        var dummy = curTextNode.nodeValue; // enforce IE to re-reference curTextNode, hack\r\n        /* jshint ignore:end */\r\n  \r\n        if (isStart && curTextNode.nextSibling && dom.isText(curTextNode.nextSibling) &&\r\n            textCount === curTextNode.nodeValue.length) {\r\n          textCount -= curTextNode.nodeValue.length;\r\n          curTextNode = curTextNode.nextSibling;\r\n        }\r\n  \r\n        container = curTextNode;\r\n        offset = textCount;\r\n      }\r\n  \r\n      return {\r\n        cont: container,\r\n        offset: offset\r\n      };\r\n    };\r\n    \r\n    /**\r\n     * return TextRange from boundary point (inspired by google closure-library)\r\n     * @param {BoundaryPoint} point\r\n     * @return {TextRange}\r\n     */\r\n    var pointToTextRange = function (point) {\r\n      var textRangeInfo = function (container, offset) {\r\n        var node, isCollapseToStart;\r\n  \r\n        if (dom.isText(container)) {\r\n          var prevTextNodes = dom.listPrev(container, func.not(dom.isText));\r\n          var prevContainer = list.last(prevTextNodes).previousSibling;\r\n          node =  prevContainer || container.parentNode;\r\n          offset += list.sum(list.tail(prevTextNodes), dom.nodeLength);\r\n          isCollapseToStart = !prevContainer;\r\n        } else {\r\n          node = container.childNodes[offset] || container;\r\n          if (dom.isText(node)) {\r\n            return textRangeInfo(node, 0);\r\n          }\r\n  \r\n          offset = 0;\r\n          isCollapseToStart = false;\r\n        }\r\n  \r\n        return {\r\n          node: node,\r\n          collapseToStart: isCollapseToStart,\r\n          offset: offset\r\n        };\r\n      };\r\n  \r\n      var textRange = document.body.createTextRange();\r\n      var info = textRangeInfo(point.node, point.offset);\r\n  \r\n      textRange.moveToElementText(info.node);\r\n      textRange.collapse(info.collapseToStart);\r\n      textRange.moveStart('character', info.offset);\r\n      return textRange;\r\n    };\r\n    \r\n    /**\r\n     * Wrapped Range\r\n     *\r\n     * @constructor\r\n     * @param {Node} sc - start container\r\n     * @param {Number} so - start offset\r\n     * @param {Node} ec - end container\r\n     * @param {Number} eo - end offset\r\n     */\r\n    var WrappedRange = function (sc, so, ec, eo) {\r\n      this.sc = sc;\r\n      this.so = so;\r\n      this.ec = ec;\r\n      this.eo = eo;\r\n  \r\n      // nativeRange: get nativeRange from sc, so, ec, eo\r\n      var nativeRange = function () {\r\n        if (agent.isW3CRangeSupport) {\r\n          var w3cRange = document.createRange();\r\n          w3cRange.setStart(sc, so);\r\n          w3cRange.setEnd(ec, eo);\r\n\r\n          return w3cRange;\r\n        } else {\r\n          var textRange = pointToTextRange({\r\n            node: sc,\r\n            offset: so\r\n          });\r\n\r\n          textRange.setEndPoint('EndToEnd', pointToTextRange({\r\n            node: ec,\r\n            offset: eo\r\n          }));\r\n\r\n          return textRange;\r\n        }\r\n      };\r\n\r\n      this.getPoints = function () {\r\n        return {\r\n          sc: sc,\r\n          so: so,\r\n          ec: ec,\r\n          eo: eo\r\n        };\r\n      };\r\n\r\n      this.getStartPoint = function () {\r\n        return {\r\n          node: sc,\r\n          offset: so\r\n        };\r\n      };\r\n\r\n      this.getEndPoint = function () {\r\n        return {\r\n          node: ec,\r\n          offset: eo\r\n        };\r\n      };\r\n\r\n      /**\r\n       * select update visible range\r\n       */\r\n      this.select = function () {\r\n        var nativeRng = nativeRange();\r\n        if (agent.isW3CRangeSupport) {\r\n          var selection = document.getSelection();\r\n          if (selection.rangeCount > 0) {\r\n            selection.removeAllRanges();\r\n          }\r\n          selection.addRange(nativeRng);\r\n        } else {\r\n          nativeRng.select();\r\n        }\r\n        \r\n        return this;\r\n      };\r\n\r\n      /**\r\n       * @return {WrappedRange}\r\n       */\r\n      this.normalize = function () {\r\n\r\n        /**\r\n         * @param {BoundaryPoint} point\r\n         * @param {Boolean} isLeftToRight\r\n         * @return {BoundaryPoint}\r\n         */\r\n        var getVisiblePoint = function (point, isLeftToRight) {\r\n          if ((dom.isVisiblePoint(point) && !dom.isEdgePoint(point)) ||\r\n              (dom.isVisiblePoint(point) && dom.isRightEdgePoint(point) && !isLeftToRight) ||\r\n              (dom.isVisiblePoint(point) && dom.isLeftEdgePoint(point) && isLeftToRight) ||\r\n              (dom.isVisiblePoint(point) && dom.isBlock(point.node) && dom.isEmpty(point.node))) {\r\n            return point;\r\n          }\r\n\r\n          // point on block's edge\r\n          var block = dom.ancestor(point.node, dom.isBlock);\r\n          if (((dom.isLeftEdgePointOf(point, block) || dom.isVoid(dom.prevPoint(point).node)) && !isLeftToRight) ||\r\n              ((dom.isRightEdgePointOf(point, block) || dom.isVoid(dom.nextPoint(point).node)) && isLeftToRight)) {\r\n\r\n            // returns point already on visible point\r\n            if (dom.isVisiblePoint(point)) {\r\n              return point;\r\n            }\r\n            // reverse direction \r\n            isLeftToRight = !isLeftToRight;\r\n          }\r\n\r\n          var nextPoint = isLeftToRight ? dom.nextPointUntil(dom.nextPoint(point), dom.isVisiblePoint) :\r\n                                          dom.prevPointUntil(dom.prevPoint(point), dom.isVisiblePoint);\r\n          return nextPoint || point;\r\n        };\r\n\r\n        var endPoint = getVisiblePoint(this.getEndPoint(), false);\r\n        var startPoint = this.isCollapsed() ? endPoint : getVisiblePoint(this.getStartPoint(), true);\r\n\r\n        return new WrappedRange(\r\n          startPoint.node,\r\n          startPoint.offset,\r\n          endPoint.node,\r\n          endPoint.offset\r\n        );\r\n      };\r\n\r\n      /**\r\n       * returns matched nodes on range\r\n       *\r\n       * @param {Function} [pred] - predicate function\r\n       * @param {Object} [options]\r\n       * @param {Boolean} [options.includeAncestor]\r\n       * @param {Boolean} [options.fullyContains]\r\n       * @return {Node[]}\r\n       */\r\n      this.nodes = function (pred, options) {\r\n        pred = pred || func.ok;\r\n\r\n        var includeAncestor = options && options.includeAncestor;\r\n        var fullyContains = options && options.fullyContains;\r\n\r\n        // TODO compare points and sort\r\n        var startPoint = this.getStartPoint();\r\n        var endPoint = this.getEndPoint();\r\n\r\n        var nodes = [];\r\n        var leftEdgeNodes = [];\r\n\r\n        dom.walkPoint(startPoint, endPoint, function (point) {\r\n          if (dom.isEditable(point.node)) {\r\n            return;\r\n          }\r\n\r\n          var node;\r\n          if (fullyContains) {\r\n            if (dom.isLeftEdgePoint(point)) {\r\n              leftEdgeNodes.push(point.node);\r\n            }\r\n            if (dom.isRightEdgePoint(point) && list.contains(leftEdgeNodes, point.node)) {\r\n              node = point.node;\r\n            }\r\n          } else if (includeAncestor) {\r\n            node = dom.ancestor(point.node, pred);\r\n          } else {\r\n            node = point.node;\r\n          }\r\n\r\n          if (node && pred(node)) {\r\n            nodes.push(node);\r\n          }\r\n        }, true);\r\n\r\n        return list.unique(nodes);\r\n      };\r\n\r\n      /**\r\n       * returns commonAncestor of range\r\n       * @return {Element} - commonAncestor\r\n       */\r\n      this.commonAncestor = function () {\r\n        return dom.commonAncestor(sc, ec);\r\n      };\r\n\r\n      /**\r\n       * returns expanded range by pred\r\n       *\r\n       * @param {Function} pred - predicate function\r\n       * @return {WrappedRange}\r\n       */\r\n      this.expand = function (pred) {\r\n        var startAncestor = dom.ancestor(sc, pred);\r\n        var endAncestor = dom.ancestor(ec, pred);\r\n\r\n        if (!startAncestor && !endAncestor) {\r\n          return new WrappedRange(sc, so, ec, eo);\r\n        }\r\n\r\n        var boundaryPoints = this.getPoints();\r\n\r\n        if (startAncestor) {\r\n          boundaryPoints.sc = startAncestor;\r\n          boundaryPoints.so = 0;\r\n        }\r\n\r\n        if (endAncestor) {\r\n          boundaryPoints.ec = endAncestor;\r\n          boundaryPoints.eo = dom.nodeLength(endAncestor);\r\n        }\r\n\r\n        return new WrappedRange(\r\n          boundaryPoints.sc,\r\n          boundaryPoints.so,\r\n          boundaryPoints.ec,\r\n          boundaryPoints.eo\r\n        );\r\n      };\r\n\r\n      /**\r\n       * @param {Boolean} isCollapseToStart\r\n       * @return {WrappedRange}\r\n       */\r\n      this.collapse = function (isCollapseToStart) {\r\n        if (isCollapseToStart) {\r\n          return new WrappedRange(sc, so, sc, so);\r\n        } else {\r\n          return new WrappedRange(ec, eo, ec, eo);\r\n        }\r\n      };\r\n\r\n      /**\r\n       * splitText on range\r\n       */\r\n      this.splitText = function () {\r\n        var isSameContainer = sc === ec;\r\n        var boundaryPoints = this.getPoints();\r\n\r\n        if (dom.isText(ec) && !dom.isEdgePoint(this.getEndPoint())) {\r\n          ec.splitText(eo);\r\n        }\r\n\r\n        if (dom.isText(sc) && !dom.isEdgePoint(this.getStartPoint())) {\r\n          boundaryPoints.sc = sc.splitText(so);\r\n          boundaryPoints.so = 0;\r\n\r\n          if (isSameContainer) {\r\n            boundaryPoints.ec = boundaryPoints.sc;\r\n            boundaryPoints.eo = eo - so;\r\n          }\r\n        }\r\n\r\n        return new WrappedRange(\r\n          boundaryPoints.sc,\r\n          boundaryPoints.so,\r\n          boundaryPoints.ec,\r\n          boundaryPoints.eo\r\n        );\r\n      };\r\n\r\n      /**\r\n       * delete contents on range\r\n       * @return {WrappedRange}\r\n       */\r\n      this.deleteContents = function () {\r\n        if (this.isCollapsed()) {\r\n          return this;\r\n        }\r\n\r\n        var rng = this.splitText();\r\n        var nodes = rng.nodes(null, {\r\n          fullyContains: true\r\n        });\r\n\r\n        // find new cursor point\r\n        var point = dom.prevPointUntil(rng.getStartPoint(), function (point) {\r\n          return !list.contains(nodes, point.node);\r\n        });\r\n\r\n        var emptyParents = [];\r\n        $.each(nodes, function (idx, node) {\r\n          // find empty parents\r\n          var parent = node.parentNode;\r\n          if (point.node !== parent && dom.nodeLength(parent) === 1) {\r\n            emptyParents.push(parent);\r\n          }\r\n          dom.remove(node, false);\r\n        });\r\n\r\n        // remove empty parents\r\n        $.each(emptyParents, function (idx, node) {\r\n          dom.remove(node, false);\r\n        });\r\n\r\n        return new WrappedRange(\r\n          point.node,\r\n          point.offset,\r\n          point.node,\r\n          point.offset\r\n        ).normalize();\r\n      };\r\n      \r\n      /**\r\n       * makeIsOn: return isOn(pred) function\r\n       */\r\n      var makeIsOn = function (pred) {\r\n        return function () {\r\n          var ancestor = dom.ancestor(sc, pred);\r\n          return !!ancestor && (ancestor === dom.ancestor(ec, pred));\r\n        };\r\n      };\r\n  \r\n      // isOnEditable: judge whether range is on editable or not\r\n      this.isOnEditable = makeIsOn(dom.isEditable);\r\n      // isOnList: judge whether range is on list node or not\r\n      this.isOnList = makeIsOn(dom.isList);\r\n      // isOnAnchor: judge whether range is on anchor node or not\r\n      this.isOnAnchor = makeIsOn(dom.isAnchor);\r\n      // isOnAnchor: judge whether range is on cell node or not\r\n      this.isOnCell = makeIsOn(dom.isCell);\r\n\r\n      /**\r\n       * @param {Function} pred\r\n       * @return {Boolean}\r\n       */\r\n      this.isLeftEdgeOf = function (pred) {\r\n        if (!dom.isLeftEdgePoint(this.getStartPoint())) {\r\n          return false;\r\n        }\r\n\r\n        var node = dom.ancestor(this.sc, pred);\r\n        return node && dom.isLeftEdgeOf(this.sc, node);\r\n      };\r\n\r\n      /**\r\n       * returns whether range was collapsed or not\r\n       */\r\n      this.isCollapsed = function () {\r\n        return sc === ec && so === eo;\r\n      };\r\n\r\n      /**\r\n       * wrap inline nodes which children of body with paragraph\r\n       *\r\n       * @return {WrappedRange}\r\n       */\r\n      this.wrapBodyInlineWithPara = function () {\r\n        if (dom.isBodyContainer(sc) && dom.isEmpty(sc)) {\r\n          sc.innerHTML = dom.emptyPara;\r\n          return new WrappedRange(sc.firstChild, 0, sc.firstChild, 0);\r\n        }\r\n\r\n        /**\r\n         * [workaround] firefox often create range on not visible point. so normalize here.\r\n         *  - firefox: |<p>text</p>|\r\n         *  - chrome: <p>|text|</p>\r\n         */\r\n        var rng = this.normalize();\r\n        if (dom.isParaInline(sc) || dom.isPara(sc)) {\r\n          return rng;\r\n        }\r\n\r\n        // find inline top ancestor\r\n        var topAncestor;\r\n        if (dom.isInline(rng.sc)) {\r\n          var ancestors = dom.listAncestor(rng.sc, func.not(dom.isInline));\r\n          topAncestor = list.last(ancestors);\r\n          if (!dom.isInline(topAncestor)) {\r\n            topAncestor = ancestors[ancestors.length - 2] || rng.sc.childNodes[rng.so];\r\n          }\r\n        } else {\r\n          topAncestor = rng.sc.childNodes[rng.so > 0 ? rng.so - 1 : 0];\r\n        }\r\n\r\n        // siblings not in paragraph\r\n        var inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();\r\n        inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline));\r\n\r\n        // wrap with paragraph\r\n        if (inlineSiblings.length) {\r\n          var para = dom.wrap(list.head(inlineSiblings), 'p');\r\n          dom.appendChildNodes(para, list.tail(inlineSiblings));\r\n        }\r\n\r\n        return this.normalize();\r\n      };\r\n\r\n      /**\r\n       * insert node at current cursor\r\n       *\r\n       * @param {Node} node\r\n       * @return {Node}\r\n       */\r\n      this.insertNode = function (node) {\r\n        var rng = this.wrapBodyInlineWithPara().deleteContents();\r\n        var info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));\r\n\r\n        if (info.rightNode) {\r\n          info.rightNode.parentNode.insertBefore(node, info.rightNode);\r\n        } else {\r\n          info.container.appendChild(node);\r\n        }\r\n\r\n        return node;\r\n      };\r\n\r\n      /**\r\n       * insert html at current cursor\r\n       */\r\n      this.pasteHTML = function (markup) {\r\n        var contentsContainer = $('<div></div>').html(markup)[0];\r\n        var childNodes = list.from(contentsContainer.childNodes);\r\n\r\n        var rng = this.wrapBodyInlineWithPara().deleteContents();\r\n\r\n        return childNodes.reverse().map(function (childNode) {\r\n          return rng.insertNode(childNode);\r\n        }).reverse();\r\n      };\r\n  \r\n      /**\r\n       * returns text in range\r\n       *\r\n       * @return {String}\r\n       */\r\n      this.toString = function () {\r\n        var nativeRng = nativeRange();\r\n        return agent.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;\r\n      };\r\n\r\n      /**\r\n       * returns range for word before cursor\r\n       *\r\n       * @param {Boolean} [findAfter] - find after cursor, default: false\r\n       * @return {WrappedRange}\r\n       */\r\n      this.getWordRange = function (findAfter) {\r\n        var endPoint = this.getEndPoint();\r\n\r\n        if (!dom.isCharPoint(endPoint)) {\r\n          return this;\r\n        }\r\n\r\n        var startPoint = dom.prevPointUntil(endPoint, function (point) {\r\n          return !dom.isCharPoint(point);\r\n        });\r\n\r\n        if (findAfter) {\r\n          endPoint = dom.nextPointUntil(endPoint, function (point) {\r\n            return !dom.isCharPoint(point);\r\n          });\r\n        }\r\n\r\n        return new WrappedRange(\r\n          startPoint.node,\r\n          startPoint.offset,\r\n          endPoint.node,\r\n          endPoint.offset\r\n        );\r\n      };\r\n  \r\n      /**\r\n       * create offsetPath bookmark\r\n       *\r\n       * @param {Node} editable\r\n       */\r\n      this.bookmark = function (editable) {\r\n        return {\r\n          s: {\r\n            path: dom.makeOffsetPath(editable, sc),\r\n            offset: so\r\n          },\r\n          e: {\r\n            path: dom.makeOffsetPath(editable, ec),\r\n            offset: eo\r\n          }\r\n        };\r\n      };\r\n\r\n      /**\r\n       * create offsetPath bookmark base on paragraph\r\n       *\r\n       * @param {Node[]} paras\r\n       */\r\n      this.paraBookmark = function (paras) {\r\n        return {\r\n          s: {\r\n            path: list.tail(dom.makeOffsetPath(list.head(paras), sc)),\r\n            offset: so\r\n          },\r\n          e: {\r\n            path: list.tail(dom.makeOffsetPath(list.last(paras), ec)),\r\n            offset: eo\r\n          }\r\n        };\r\n      };\r\n\r\n      /**\r\n       * getClientRects\r\n       * @return {Rect[]}\r\n       */\r\n      this.getClientRects = function () {\r\n        var nativeRng = nativeRange();\r\n        return nativeRng.getClientRects();\r\n      };\r\n    };\r\n\r\n  /**\r\n   * @class core.range\r\n   *\r\n   * Data structure\r\n   *  * BoundaryPoint: a point of dom tree\r\n   *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\r\n   *\r\n   * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\r\n   *\r\n   * @singleton\r\n   * @alternateClassName range\r\n   */\r\n    return {\r\n      /**\r\n       * @method\r\n       * \r\n       * create Range Object From arguments or Browser Selection\r\n       *\r\n       * @param {Node} sc - start container\r\n       * @param {Number} so - start offset\r\n       * @param {Node} ec - end container\r\n       * @param {Number} eo - end offset\r\n       * @return {WrappedRange}\r\n       */\r\n      create : function (sc, so, ec, eo) {\r\n        if (!arguments.length) { // from Browser Selection\r\n          if (agent.isW3CRangeSupport) {\r\n            var selection = document.getSelection();\r\n            if (!selection || selection.rangeCount === 0) {\r\n              return null;\r\n            } else if (dom.isBody(selection.anchorNode)) {\r\n              // Firefox: returns entire body as range on initialization. We won't never need it.\r\n              return null;\r\n            }\r\n  \r\n            var nativeRng = selection.getRangeAt(0);\r\n            sc = nativeRng.startContainer;\r\n            so = nativeRng.startOffset;\r\n            ec = nativeRng.endContainer;\r\n            eo = nativeRng.endOffset;\r\n          } else { // IE8: TextRange\r\n            var textRange = document.selection.createRange();\r\n            var textRangeEnd = textRange.duplicate();\r\n            textRangeEnd.collapse(false);\r\n            var textRangeStart = textRange;\r\n            textRangeStart.collapse(true);\r\n  \r\n            var startPoint = textRangeToPoint(textRangeStart, true),\r\n            endPoint = textRangeToPoint(textRangeEnd, false);\r\n\r\n            // same visible point case: range was collapsed.\r\n            if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) &&\r\n                dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) &&\r\n                endPoint.node.nextSibling === startPoint.node) {\r\n              startPoint = endPoint;\r\n            }\r\n\r\n            sc = startPoint.cont;\r\n            so = startPoint.offset;\r\n            ec = endPoint.cont;\r\n            eo = endPoint.offset;\r\n          }\r\n        } else if (arguments.length === 2) { //collapsed\r\n          ec = sc;\r\n          eo = so;\r\n        }\r\n        return new WrappedRange(sc, so, ec, eo);\r\n      },\r\n\r\n      /**\r\n       * @method \r\n       * \r\n       * create WrappedRange from node\r\n       *\r\n       * @param {Node} node\r\n       * @return {WrappedRange}\r\n       */\r\n      createFromNode: function (node) {\r\n        var sc = node;\r\n        var so = 0;\r\n        var ec = node;\r\n        var eo = dom.nodeLength(ec);\r\n\r\n        // browsers can't target a picture or void node\r\n        if (dom.isVoid(sc)) {\r\n          so = dom.listPrev(sc).length - 1;\r\n          sc = sc.parentNode;\r\n        }\r\n        if (dom.isBR(ec)) {\r\n          eo = dom.listPrev(ec).length - 1;\r\n          ec = ec.parentNode;\r\n        } else if (dom.isVoid(ec)) {\r\n          eo = dom.listPrev(ec).length;\r\n          ec = ec.parentNode;\r\n        }\r\n\r\n        return this.create(sc, so, ec, eo);\r\n      },\r\n\r\n      /**\r\n       * create WrappedRange from node after position\r\n       *\r\n       * @param {Node} node\r\n       * @return {WrappedRange}\r\n       */\r\n      createFromNodeBefore: function (node) {\r\n        return this.createFromNode(node).collapse(true);\r\n      },\r\n\r\n      /**\r\n       * create WrappedRange from node after position\r\n       *\r\n       * @param {Node} node\r\n       * @return {WrappedRange}\r\n       */\r\n      createFromNodeAfter: function (node) {\r\n        return this.createFromNode(node).collapse();\r\n      },\r\n\r\n      /**\r\n       * @method \r\n       * \r\n       * create WrappedRange from bookmark\r\n       *\r\n       * @param {Node} editable\r\n       * @param {Object} bookmark\r\n       * @return {WrappedRange}\r\n       */\r\n      createFromBookmark : function (editable, bookmark) {\r\n        var sc = dom.fromOffsetPath(editable, bookmark.s.path);\r\n        var so = bookmark.s.offset;\r\n        var ec = dom.fromOffsetPath(editable, bookmark.e.path);\r\n        var eo = bookmark.e.offset;\r\n        return new WrappedRange(sc, so, ec, eo);\r\n      },\r\n\r\n      /**\r\n       * @method \r\n       *\r\n       * create WrappedRange from paraBookmark\r\n       *\r\n       * @param {Object} bookmark\r\n       * @param {Node[]} paras\r\n       * @return {WrappedRange}\r\n       */\r\n      createFromParaBookmark: function (bookmark, paras) {\r\n        var so = bookmark.s.offset;\r\n        var eo = bookmark.e.offset;\r\n        var sc = dom.fromOffsetPath(list.head(paras), bookmark.s.path);\r\n        var ec = dom.fromOffsetPath(list.last(paras), bookmark.e.path);\r\n\r\n        return new WrappedRange(sc, so, ec, eo);\r\n      }\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * @class defaults \r\n   * \r\n   * @singleton\r\n   */\r\n  var defaults = {\r\n    /** @property */\r\n    version: '0.6.16',\r\n\r\n    /**\r\n     * \r\n     * for event options, reference to EventHandler.attach\r\n     * \r\n     * @property {Object} options \r\n     * @property {String/Number} [options.width=null] set editor width \r\n     * @property {String/Number} [options.height=null] set editor height, ex) 300\r\n     * @property {String/Number} options.minHeight set minimum height of editor\r\n     * @property {String/Number} options.maxHeight\r\n     * @property {String/Number} options.focus \r\n     * @property {Number} options.tabsize \r\n     * @property {Boolean} options.styleWithSpan\r\n     * @property {Object} options.codemirror\r\n     * @property {Object} [options.codemirror.mode='text/html']\r\n     * @property {Object} [options.codemirror.htmlMode=true]\r\n     * @property {Object} [options.codemirror.lineNumbers=true]\r\n     * @property {String} [options.lang=en-US] language 'en-US', 'ko-KR', ...\r\n     * @property {String} [options.direction=null] text direction, ex) 'rtl'\r\n     * @property {Array} [options.toolbar]\r\n     * @property {Boolean} [options.airMode=false]\r\n     * @property {Array} [options.airPopover]\r\n     * @property {Fucntion} [options.onInit] initialize\r\n     * @property {Fucntion} [options.onsubmit]\r\n     */\r\n    options: {\r\n      width: null,                  // set editor width\r\n      height: null,                 // set editor height, ex) 300\r\n\r\n      minHeight: null,              // set minimum height of editor\r\n      maxHeight: null,              // set maximum height of editor\r\n\r\n      focus: false,                 // set focus to editable area after initializing summernote\r\n\r\n      tabsize: 4,                   // size of tab ex) 2 or 4\r\n      styleWithSpan: true,          // style with span (Chrome and FF only)\r\n\r\n      disableLinkTarget: false,     // hide link Target Checkbox\r\n      disableDragAndDrop: false,    // disable drag and drop event\r\n      disableResizeEditor: false,   // disable resizing editor\r\n      disableResizeImage: false,    // disable resizing image\r\n\r\n      shortcuts: true,              // enable keyboard shortcuts\r\n\r\n      textareaAutoSync: true,       // enable textarea auto sync\r\n\r\n      placeholder: false,           // enable placeholder text\r\n      prettifyHtml: true,           // enable prettifying html while toggling codeview\r\n\r\n      iconPrefix: 'fa fa-',         // prefix for css icon classes\r\n\r\n      icons: {\r\n        font: {\r\n          bold: 'bold',\r\n          italic: 'italic',\r\n          underline: 'underline',\r\n          clear: 'eraser',\r\n          height: 'text-height',\r\n          strikethrough: 'strikethrough',\r\n          superscript: 'superscript',\r\n          subscript: 'subscript'\r\n        },\r\n        image: {\r\n          image: 'picture-o',\r\n          floatLeft: 'align-left',\r\n          floatRight: 'align-right',\r\n          floatNone: 'align-justify',\r\n          shapeRounded: 'square',\r\n          shapeCircle: 'circle-o',\r\n          shapeThumbnail: 'picture-o',\r\n          shapeNone: 'times',\r\n          remove: 'trash-o'\r\n        },\r\n        link: {\r\n          link: 'link',\r\n          unlink: 'unlink',\r\n          edit: 'edit'\r\n        },\r\n        table: {\r\n          table: 'table'\r\n        },\r\n        hr: {\r\n          insert: 'minus'\r\n        },\r\n        style: {\r\n          style: 'magic'\r\n        },\r\n        lists: {\r\n          unordered: 'list-ul',\r\n          ordered: 'list-ol'\r\n        },\r\n        options: {\r\n          help: 'question',\r\n          fullscreen: 'arrows-alt',\r\n          codeview: 'code'\r\n        },\r\n        paragraph: {\r\n          paragraph: 'align-left',\r\n          outdent: 'outdent',\r\n          indent: 'indent',\r\n          left: 'align-left',\r\n          center: 'align-center',\r\n          right: 'align-right',\r\n          justify: 'align-justify'\r\n        },\r\n        color: {\r\n          recent: 'font'\r\n        },\r\n        history: {\r\n          undo: 'undo',\r\n          redo: 'repeat'\r\n        },\r\n        misc: {\r\n          check: 'check'\r\n        }\r\n      },\r\n\r\n      dialogsInBody: false,          // false will add dialogs into editor\r\n\r\n      codemirror: {                 // codemirror options\r\n        mode: 'text/html',\r\n        htmlMode: true,\r\n        lineNumbers: true\r\n      },\r\n\r\n      // language\r\n      lang: 'en-US',                // language 'en-US', 'ko-KR', ...\r\n      direction: null,              // text direction, ex) 'rtl'\r\n\r\n      // toolbar\r\n      toolbar: [\r\n        ['style', ['style']],\r\n        ['font', ['bold', 'italic', 'underline', 'clear']],\r\n        // ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\r\n        ['fontname', ['fontname']],\r\n        ['fontsize', ['fontsize']],\r\n        ['color', ['color']],\r\n        ['para', ['ul', 'ol', 'paragraph']],\r\n        ['height', ['height']],\r\n        ['table', ['table']],\r\n        ['insert', ['link', 'picture', 'hr']],\r\n        ['view', ['fullscreen', 'codeview']],\r\n        ['help', ['help']]\r\n      ],\r\n\r\n      plugin : { },\r\n\r\n      // air mode: inline editor\r\n      airMode: false,\r\n      // airPopover: [\r\n      //   ['style', ['style']],\r\n      //   ['font', ['bold', 'italic', 'underline', 'clear']],\r\n      //   ['fontname', ['fontname']],\r\n      //   ['color', ['color']],\r\n      //   ['para', ['ul', 'ol', 'paragraph']],\r\n      //   ['height', ['height']],\r\n      //   ['table', ['table']],\r\n      //   ['insert', ['link', 'picture']],\r\n      //   ['help', ['help']]\r\n      // ],\r\n      airPopover: [\r\n        ['color', ['color']],\r\n        ['font', ['bold', 'underline', 'clear']],\r\n        ['para', ['ul', 'paragraph']],\r\n        ['table', ['table']],\r\n        ['insert', ['link', 'picture']]\r\n      ],\r\n\r\n      // style tag\r\n      styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n\r\n      // default fontName\r\n      defaultFontName: 'Helvetica Neue',\r\n\r\n      // fontName\r\n      fontNames: [\r\n        'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\r\n        'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\r\n        'Tahoma', 'Times New Roman', 'Verdana'\r\n      ],\r\n      fontNamesIgnoreCheck: [],\r\n\r\n      fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\r\n\r\n      // pallete colors(n x n)\r\n      colors: [\r\n        ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'],\r\n        ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'],\r\n        ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'],\r\n        ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'],\r\n        ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'],\r\n        ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'],\r\n        ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'],\r\n        ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031']\r\n      ],\r\n\r\n      // lineHeight\r\n      lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\r\n\r\n      // insertTable max size\r\n      insertTableMaxSize: {\r\n        col: 10,\r\n        row: 10\r\n      },\r\n\r\n      // image\r\n      maximumImageFileSize: null, // size in bytes, null = no limit\r\n\r\n      // callbacks\r\n      oninit: null,             // initialize\r\n      onfocus: null,            // editable has focus\r\n      onblur: null,             // editable out of focus\r\n      onenter: null,            // enter key pressed\r\n      onkeyup: null,            // keyup\r\n      onkeydown: null,          // keydown\r\n      onImageUpload: null,      // imageUpload\r\n      onImageUploadError: null, // imageUploadError\r\n      onMediaDelete: null,      // media delete\r\n      onToolbarClick: null,\r\n      onsubmit: null,\r\n\r\n      /**\r\n       * manipulate link address when user create link\r\n       * @param {String} sLinkUrl\r\n       * @return {String}\r\n       */\r\n      onCreateLink: function (sLinkUrl) {\r\n        if (sLinkUrl.indexOf('@') !== -1 && sLinkUrl.indexOf(':') === -1) {\r\n          sLinkUrl =  'mailto:' + sLinkUrl;\r\n        }\r\n\r\n        return sLinkUrl;\r\n      },\r\n\r\n      keyMap: {\r\n        pc: {\r\n          'ENTER': 'insertParagraph',\r\n          'CTRL+Z': 'undo',\r\n          'CTRL+Y': 'redo',\r\n          'TAB': 'tab',\r\n          'SHIFT+TAB': 'untab',\r\n          'CTRL+B': 'bold',\r\n          'CTRL+I': 'italic',\r\n          'CTRL+U': 'underline',\r\n          'CTRL+SHIFT+S': 'strikethrough',\r\n          'CTRL+BACKSLASH': 'removeFormat',\r\n          'CTRL+SHIFT+L': 'justifyLeft',\r\n          'CTRL+SHIFT+E': 'justifyCenter',\r\n          'CTRL+SHIFT+R': 'justifyRight',\r\n          'CTRL+SHIFT+J': 'justifyFull',\r\n          'CTRL+SHIFT+NUM7': 'insertUnorderedList',\r\n          'CTRL+SHIFT+NUM8': 'insertOrderedList',\r\n          'CTRL+LEFTBRACKET': 'outdent',\r\n          'CTRL+RIGHTBRACKET': 'indent',\r\n          'CTRL+NUM0': 'formatPara',\r\n          'CTRL+NUM1': 'formatH1',\r\n          'CTRL+NUM2': 'formatH2',\r\n          'CTRL+NUM3': 'formatH3',\r\n          'CTRL+NUM4': 'formatH4',\r\n          'CTRL+NUM5': 'formatH5',\r\n          'CTRL+NUM6': 'formatH6',\r\n          'CTRL+ENTER': 'insertHorizontalRule',\r\n          'CTRL+K': 'showLinkDialog'\r\n        },\r\n\r\n        mac: {\r\n          'ENTER': 'insertParagraph',\r\n          'CMD+Z': 'undo',\r\n          'CMD+SHIFT+Z': 'redo',\r\n          'TAB': 'tab',\r\n          'SHIFT+TAB': 'untab',\r\n          'CMD+B': 'bold',\r\n          'CMD+I': 'italic',\r\n          'CMD+U': 'underline',\r\n          'CMD+SHIFT+S': 'strikethrough',\r\n          'CMD+BACKSLASH': 'removeFormat',\r\n          'CMD+SHIFT+L': 'justifyLeft',\r\n          'CMD+SHIFT+E': 'justifyCenter',\r\n          'CMD+SHIFT+R': 'justifyRight',\r\n          'CMD+SHIFT+J': 'justifyFull',\r\n          'CMD+SHIFT+NUM7': 'insertUnorderedList',\r\n          'CMD+SHIFT+NUM8': 'insertOrderedList',\r\n          'CMD+LEFTBRACKET': 'outdent',\r\n          'CMD+RIGHTBRACKET': 'indent',\r\n          'CMD+NUM0': 'formatPara',\r\n          'CMD+NUM1': 'formatH1',\r\n          'CMD+NUM2': 'formatH2',\r\n          'CMD+NUM3': 'formatH3',\r\n          'CMD+NUM4': 'formatH4',\r\n          'CMD+NUM5': 'formatH5',\r\n          'CMD+NUM6': 'formatH6',\r\n          'CMD+ENTER': 'insertHorizontalRule',\r\n          'CMD+K': 'showLinkDialog'\r\n        }\r\n      }\r\n    },\r\n\r\n    // default language: en-US\r\n    lang: {\r\n      'en-US': {\r\n        font: {\r\n          bold: 'Bold',\r\n          italic: 'Italic',\r\n          underline: 'Underline',\r\n          clear: 'Remove Font Style',\r\n          height: 'Line Height',\r\n          name: 'Font Family',\r\n          strikethrough: 'Strikethrough',\r\n          subscript: 'Subscript',\r\n          superscript: 'Superscript',\r\n          size: 'Font Size'\r\n        },\r\n        image: {\r\n          image: 'Picture',\r\n          insert: 'Insert Image',\r\n          resizeFull: 'Resize Full',\r\n          resizeHalf: 'Resize Half',\r\n          resizeQuarter: 'Resize Quarter',\r\n          floatLeft: 'Float Left',\r\n          floatRight: 'Float Right',\r\n          floatNone: 'Float None',\r\n          shapeRounded: 'Shape: Rounded',\r\n          shapeCircle: 'Shape: Circle',\r\n          shapeThumbnail: 'Shape: Thumbnail',\r\n          shapeNone: 'Shape: None',\r\n          dragImageHere: 'Drag image or text here',\r\n          dropImage: 'Drop image or Text',\r\n          selectFromFiles: 'Select from files',\r\n          maximumFileSize: 'Maximum file size',\r\n          maximumFileSizeError: 'Maximum file size exceeded.',\r\n          url: 'Image URL',\r\n          remove: 'Remove Image'\r\n        },\r\n        link: {\r\n          link: 'Link',\r\n          insert: 'Insert Link',\r\n          unlink: 'Unlink',\r\n          edit: 'Edit',\r\n          textToDisplay: 'Text to display',\r\n          url: 'To what URL should this link go?',\r\n          openInNewWindow: 'Open in new window'\r\n        },\r\n        table: {\r\n          table: 'Table'\r\n        },\r\n        hr: {\r\n          insert: 'Insert Horizontal Rule'\r\n        },\r\n        style: {\r\n          style: 'Style',\r\n          normal: 'Normal',\r\n          blockquote: 'Quote',\r\n          pre: 'Code',\r\n          h1: 'Header 1',\r\n          h2: 'Header 2',\r\n          h3: 'Header 3',\r\n          h4: 'Header 4',\r\n          h5: 'Header 5',\r\n          h6: 'Header 6'\r\n        },\r\n        lists: {\r\n          unordered: 'Unordered list',\r\n          ordered: 'Ordered list'\r\n        },\r\n        options: {\r\n          help: 'Help',\r\n          fullscreen: 'Full Screen',\r\n          codeview: 'Code View'\r\n        },\r\n        paragraph: {\r\n          paragraph: 'Paragraph',\r\n          outdent: 'Outdent',\r\n          indent: 'Indent',\r\n          left: 'Align left',\r\n          center: 'Align center',\r\n          right: 'Align right',\r\n          justify: 'Justify full'\r\n        },\r\n        color: {\r\n          recent: 'Recent Color',\r\n          more: 'More Color',\r\n          background: 'Background Color',\r\n          foreground: 'Foreground Color',\r\n          transparent: 'Transparent',\r\n          setTransparent: 'Set transparent',\r\n          reset: 'Reset',\r\n          resetToDefault: 'Reset to default'\r\n        },\r\n        shortcut: {\r\n          shortcuts: 'Keyboard shortcuts',\r\n          close: 'Close',\r\n          textFormatting: 'Text formatting',\r\n          action: 'Action',\r\n          paragraphFormatting: 'Paragraph formatting',\r\n          documentStyle: 'Document Style',\r\n          extraKeys: 'Extra keys'\r\n        },\r\n        history: {\r\n          undo: 'Undo',\r\n          redo: 'Redo'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @class core.async\r\n   *\r\n   * Async functions which returns `Promise`\r\n   *\r\n   * @singleton\r\n   * @alternateClassName async\r\n   */\r\n  var async = (function () {\r\n    /**\r\n     * @method readFileAsDataURL\r\n     *\r\n     * read contents of file as representing URL\r\n     *\r\n     * @param {File} file\r\n     * @return {Promise} - then: sDataUrl\r\n     */\r\n    var readFileAsDataURL = function (file) {\r\n      return $.Deferred(function (deferred) {\r\n        $.extend(new FileReader(), {\r\n          onload: function (e) {\r\n            var sDataURL = e.target.result;\r\n            deferred.resolve(sDataURL);\r\n          },\r\n          onerror: function () {\r\n            deferred.reject(this);\r\n          }\r\n        }).readAsDataURL(file);\r\n      }).promise();\r\n    };\r\n  \r\n    /**\r\n     * @method createImage\r\n     *\r\n     * create `<image>` from url string\r\n     *\r\n     * @param {String} sUrl\r\n     * @param {String} filename\r\n     * @return {Promise} - then: $image\r\n     */\r\n    var createImage = function (sUrl, filename) {\r\n      return $.Deferred(function (deferred) {\r\n        var $img = $('<img>');\r\n\r\n        $img.one('load', function () {\r\n          $img.off('error abort');\r\n          deferred.resolve($img);\r\n        }).one('error abort', function () {\r\n          $img.off('load').detach();\r\n          deferred.reject($img);\r\n        }).css({\r\n          display: 'none'\r\n        }).appendTo(document.body).attr({\r\n          'src': sUrl,\r\n          'data-filename': filename\r\n        });\r\n      }).promise();\r\n    };\r\n\r\n    return {\r\n      readFileAsDataURL: readFileAsDataURL,\r\n      createImage: createImage\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * @class core.key\r\n   *\r\n   * Object for keycodes.\r\n   *\r\n   * @singleton\r\n   * @alternateClassName key\r\n   */\r\n  var key = (function () {\r\n    var keyMap = {\r\n      'BACKSPACE': 8,\r\n      'TAB': 9,\r\n      'ENTER': 13,\r\n      'SPACE': 32,\r\n\r\n      // Number: 0-9\r\n      'NUM0': 48,\r\n      'NUM1': 49,\r\n      'NUM2': 50,\r\n      'NUM3': 51,\r\n      'NUM4': 52,\r\n      'NUM5': 53,\r\n      'NUM6': 54,\r\n      'NUM7': 55,\r\n      'NUM8': 56,\r\n\r\n      // Alphabet: a-z\r\n      'B': 66,\r\n      'E': 69,\r\n      'I': 73,\r\n      'J': 74,\r\n      'K': 75,\r\n      'L': 76,\r\n      'R': 82,\r\n      'S': 83,\r\n      'U': 85,\r\n      'V': 86,\r\n      'Y': 89,\r\n      'Z': 90,\r\n\r\n      'SLASH': 191,\r\n      'LEFTBRACKET': 219,\r\n      'BACKSLASH': 220,\r\n      'RIGHTBRACKET': 221\r\n    };\r\n\r\n    return {\r\n      /**\r\n       * @method isEdit\r\n       *\r\n       * @param {Number} keyCode\r\n       * @return {Boolean}\r\n       */\r\n      isEdit: function (keyCode) {\r\n        return list.contains([8, 9, 13, 32], keyCode);\r\n      },\r\n      /**\r\n       * @method isMove\r\n       *\r\n       * @param {Number} keyCode\r\n       * @return {Boolean}\r\n       */\r\n      isMove: function (keyCode) {\r\n        return list.contains([37, 38, 39, 40], keyCode);\r\n      },\r\n      /**\r\n       * @property {Object} nameFromCode\r\n       * @property {String} nameFromCode.8 \"BACKSPACE\"\r\n       */\r\n      nameFromCode: func.invertObject(keyMap),\r\n      code: keyMap\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * @class editing.History\r\n   *\r\n   * Editor History\r\n   *\r\n   */\r\n  var History = function ($editable) {\r\n    var stack = [], stackOffset = -1;\r\n    var editable = $editable[0];\r\n\r\n    var makeSnapshot = function () {\r\n      var rng = range.create();\r\n      var emptyBookmark = {s: {path: [], offset: 0}, e: {path: [], offset: 0}};\r\n\r\n      return {\r\n        contents: $editable.html(),\r\n        bookmark: (rng ? rng.bookmark(editable) : emptyBookmark)\r\n      };\r\n    };\r\n\r\n    var applySnapshot = function (snapshot) {\r\n      if (snapshot.contents !== null) {\r\n        $editable.html(snapshot.contents);\r\n      }\r\n      if (snapshot.bookmark !== null) {\r\n        range.createFromBookmark(editable, snapshot.bookmark).select();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * undo\r\n     */\r\n    this.undo = function () {\r\n      // Create snap shot if not yet recorded\r\n      if ($editable.html() !== stack[stackOffset].contents) {\r\n        this.recordUndo();\r\n      }\r\n\r\n      if (0 < stackOffset) {\r\n        stackOffset--;\r\n        applySnapshot(stack[stackOffset]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * redo\r\n     */\r\n    this.redo = function () {\r\n      if (stack.length - 1 > stackOffset) {\r\n        stackOffset++;\r\n        applySnapshot(stack[stackOffset]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * recorded undo\r\n     */\r\n    this.recordUndo = function () {\r\n      stackOffset++;\r\n\r\n      // Wash out stack after stackOffset\r\n      if (stack.length > stackOffset) {\r\n        stack = stack.slice(0, stackOffset);\r\n      }\r\n\r\n      // Create new snapshot and push it to the end\r\n      stack.push(makeSnapshot());\r\n    };\r\n\r\n    // Create first undo stack\r\n    this.recordUndo();\r\n  };\r\n\r\n  /**\r\n   * @class editing.Style\r\n   *\r\n   * Style\r\n   *\r\n   */\r\n  var Style = function () {\r\n    /**\r\n     * @method jQueryCSS\r\n     *\r\n     * [workaround] for old jQuery\r\n     * passing an array of style properties to .css()\r\n     * will result in an object of property-value pairs.\r\n     * (compability with version < 1.9)\r\n     *\r\n     * @private\r\n     * @param  {jQuery} $obj\r\n     * @param  {Array} propertyNames - An array of one or more CSS properties.\r\n     * @return {Object}\r\n     */\r\n    var jQueryCSS = function ($obj, propertyNames) {\r\n      if (agent.jqueryVersion < 1.9) {\r\n        var result = {};\r\n        $.each(propertyNames, function (idx, propertyName) {\r\n          result[propertyName] = $obj.css(propertyName);\r\n        });\r\n        return result;\r\n      }\r\n      return $obj.css.call($obj, propertyNames);\r\n    };\r\n\r\n    /**\r\n     * returns style object from node\r\n     *\r\n     * @param {jQuery} $node\r\n     * @return {Object}\r\n     */\r\n    this.fromNode = function ($node) {\r\n      var properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\r\n      var styleInfo = jQueryCSS($node, properties) || {};\r\n      styleInfo['font-size'] = parseInt(styleInfo['font-size'], 10);\r\n      return styleInfo;\r\n    };\r\n\r\n    /**\r\n     * paragraph level style\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @param {Object} styleInfo\r\n     */\r\n    this.stylePara = function (rng, styleInfo) {\r\n      $.each(rng.nodes(dom.isPara, {\r\n        includeAncestor: true\r\n      }), function (idx, para) {\r\n        $(para).css(styleInfo);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * insert and returns styleNodes on range.\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @param {Object} [options] - options for styleNodes\r\n     * @param {String} [options.nodeName] - default: `SPAN`\r\n     * @param {Boolean} [options.expandClosestSibling] - default: `false`\r\n     * @param {Boolean} [options.onlyPartialContains] - default: `false`\r\n     * @return {Node[]}\r\n     */\r\n    this.styleNodes = function (rng, options) {\r\n      rng = rng.splitText();\r\n\r\n      var nodeName = options && options.nodeName || 'SPAN';\r\n      var expandClosestSibling = !!(options && options.expandClosestSibling);\r\n      var onlyPartialContains = !!(options && options.onlyPartialContains);\r\n\r\n      if (rng.isCollapsed()) {\r\n        return [rng.insertNode(dom.create(nodeName))];\r\n      }\r\n\r\n      var pred = dom.makePredByNodeName(nodeName);\r\n      var nodes = rng.nodes(dom.isText, {\r\n        fullyContains: true\r\n      }).map(function (text) {\r\n        return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);\r\n      });\r\n\r\n      if (expandClosestSibling) {\r\n        if (onlyPartialContains) {\r\n          var nodesInRange = rng.nodes();\r\n          // compose with partial contains predication\r\n          pred = func.and(pred, function (node) {\r\n            return list.contains(nodesInRange, node);\r\n          });\r\n        }\r\n\r\n        return nodes.map(function (node) {\r\n          var siblings = dom.withClosestSiblings(node, pred);\r\n          var head = list.head(siblings);\r\n          var tails = list.tail(siblings);\r\n          $.each(tails, function (idx, elem) {\r\n            dom.appendChildNodes(head, elem.childNodes);\r\n            dom.remove(elem);\r\n          });\r\n          return list.head(siblings);\r\n        });\r\n      } else {\r\n        return nodes;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * get current style on cursor\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @return {Object} - object contains style properties.\r\n     */\r\n    this.current = function (rng) {\r\n      var $cont = $(dom.isText(rng.sc) ? rng.sc.parentNode : rng.sc);\r\n      var styleInfo = this.fromNode($cont);\r\n\r\n      // document.queryCommandState for toggle state\r\n      styleInfo['font-bold'] = document.queryCommandState('bold') ? 'bold' : 'normal';\r\n      styleInfo['font-italic'] = document.queryCommandState('italic') ? 'italic' : 'normal';\r\n      styleInfo['font-underline'] = document.queryCommandState('underline') ? 'underline' : 'normal';\r\n      styleInfo['font-strikethrough'] = document.queryCommandState('strikeThrough') ? 'strikethrough' : 'normal';\r\n      styleInfo['font-superscript'] = document.queryCommandState('superscript') ? 'superscript' : 'normal';\r\n      styleInfo['font-subscript'] = document.queryCommandState('subscript') ? 'subscript' : 'normal';\r\n\r\n      // list-style-type to list-style(unordered, ordered)\r\n      if (!rng.isOnList()) {\r\n        styleInfo['list-style'] = 'none';\r\n      } else {\r\n        var aOrderedType = ['circle', 'disc', 'disc-leading-zero', 'square'];\r\n        var isUnordered = $.inArray(styleInfo['list-style-type'], aOrderedType) > -1;\r\n        styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\r\n      }\r\n\r\n      var para = dom.ancestor(rng.sc, dom.isPara);\r\n      if (para && para.style['line-height']) {\r\n        styleInfo['line-height'] = para.style.lineHeight;\r\n      } else {\r\n        var lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\r\n        styleInfo['line-height'] = lineHeight.toFixed(1);\r\n      }\r\n\r\n      styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\r\n      styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);\r\n      styleInfo.range = rng;\r\n\r\n      return styleInfo;\r\n    };\r\n  };\r\n\r\n\r\n  /**\r\n   * @class editing.Bullet\r\n   *\r\n   * @alternateClassName Bullet\r\n   */\r\n  var Bullet = function () {\r\n    /**\r\n     * @method insertOrderedList\r\n     *\r\n     * toggle ordered list\r\n     *\r\n     * @type command\r\n     */\r\n    this.insertOrderedList = function () {\r\n      this.toggleList('OL');\r\n    };\r\n\r\n    /**\r\n     * @method insertUnorderedList\r\n     *\r\n     * toggle unordered list\r\n     *\r\n     * @type command\r\n     */\r\n    this.insertUnorderedList = function () {\r\n      this.toggleList('UL');\r\n    };\r\n\r\n    /**\r\n     * @method indent\r\n     *\r\n     * indent\r\n     *\r\n     * @type command\r\n     */\r\n    this.indent = function () {\r\n      var self = this;\r\n      var rng = range.create().wrapBodyInlineWithPara();\r\n\r\n      var paras = rng.nodes(dom.isPara, { includeAncestor: true });\r\n      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\r\n\r\n      $.each(clustereds, function (idx, paras) {\r\n        var head = list.head(paras);\r\n        if (dom.isLi(head)) {\r\n          self.wrapList(paras, head.parentNode.nodeName);\r\n        } else {\r\n          $.each(paras, function (idx, para) {\r\n            $(para).css('marginLeft', function (idx, val) {\r\n              return (parseInt(val, 10) || 0) + 25;\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      rng.select();\r\n    };\r\n\r\n    /**\r\n     * @method outdent\r\n     *\r\n     * outdent\r\n     *\r\n     * @type command\r\n     */\r\n    this.outdent = function () {\r\n      var self = this;\r\n      var rng = range.create().wrapBodyInlineWithPara();\r\n\r\n      var paras = rng.nodes(dom.isPara, { includeAncestor: true });\r\n      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\r\n\r\n      $.each(clustereds, function (idx, paras) {\r\n        var head = list.head(paras);\r\n        if (dom.isLi(head)) {\r\n          self.releaseList([paras]);\r\n        } else {\r\n          $.each(paras, function (idx, para) {\r\n            $(para).css('marginLeft', function (idx, val) {\r\n              val = (parseInt(val, 10) || 0);\r\n              return val > 25 ? val - 25 : '';\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      rng.select();\r\n    };\r\n\r\n    /**\r\n     * @method toggleList\r\n     *\r\n     * toggle list\r\n     *\r\n     * @param {String} listName - OL or UL\r\n     */\r\n    this.toggleList = function (listName) {\r\n      var self = this;\r\n      var rng = range.create().wrapBodyInlineWithPara();\r\n\r\n      var paras = rng.nodes(dom.isPara, { includeAncestor: true });\r\n      var bookmark = rng.paraBookmark(paras);\r\n      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\r\n\r\n      // paragraph to list\r\n      if (list.find(paras, dom.isPurePara)) {\r\n        var wrappedParas = [];\r\n        $.each(clustereds, function (idx, paras) {\r\n          wrappedParas = wrappedParas.concat(self.wrapList(paras, listName));\r\n        });\r\n        paras = wrappedParas;\r\n      // list to paragraph or change list style\r\n      } else {\r\n        var diffLists = rng.nodes(dom.isList, {\r\n          includeAncestor: true\r\n        }).filter(function (listNode) {\r\n          return !$.nodeName(listNode, listName);\r\n        });\r\n\r\n        if (diffLists.length) {\r\n          $.each(diffLists, function (idx, listNode) {\r\n            dom.replace(listNode, listName);\r\n          });\r\n        } else {\r\n          paras = this.releaseList(clustereds, true);\r\n        }\r\n      }\r\n\r\n      range.createFromParaBookmark(bookmark, paras).select();\r\n    };\r\n\r\n    /**\r\n     * @method wrapList\r\n     *\r\n     * @param {Node[]} paras\r\n     * @param {String} listName\r\n     * @return {Node[]}\r\n     */\r\n    this.wrapList = function (paras, listName) {\r\n      var head = list.head(paras);\r\n      var last = list.last(paras);\r\n\r\n      var prevList = dom.isList(head.previousSibling) && head.previousSibling;\r\n      var nextList = dom.isList(last.nextSibling) && last.nextSibling;\r\n\r\n      var listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last);\r\n\r\n      // P to LI\r\n      paras = paras.map(function (para) {\r\n        return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;\r\n      });\r\n\r\n      // append to list(<ul>, <ol>)\r\n      dom.appendChildNodes(listNode, paras);\r\n\r\n      if (nextList) {\r\n        dom.appendChildNodes(listNode, list.from(nextList.childNodes));\r\n        dom.remove(nextList);\r\n      }\r\n\r\n      return paras;\r\n    };\r\n\r\n    /**\r\n     * @method releaseList\r\n     *\r\n     * @param {Array[]} clustereds\r\n     * @param {Boolean} isEscapseToBody\r\n     * @return {Node[]}\r\n     */\r\n    this.releaseList = function (clustereds, isEscapseToBody) {\r\n      var releasedParas = [];\r\n\r\n      $.each(clustereds, function (idx, paras) {\r\n        var head = list.head(paras);\r\n        var last = list.last(paras);\r\n\r\n        var headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) :\r\n                                         head.parentNode;\r\n        var lastList = headList.childNodes.length > 1 ? dom.splitTree(headList, {\r\n          node: last.parentNode,\r\n          offset: dom.position(last) + 1\r\n        }, {\r\n          isSkipPaddingBlankHTML: true\r\n        }) : null;\r\n\r\n        var middleList = dom.splitTree(headList, {\r\n          node: head.parentNode,\r\n          offset: dom.position(head)\r\n        }, {\r\n          isSkipPaddingBlankHTML: true\r\n        });\r\n\r\n        paras = isEscapseToBody ? dom.listDescendant(middleList, dom.isLi) :\r\n                                  list.from(middleList.childNodes).filter(dom.isLi);\r\n\r\n        // LI to P\r\n        if (isEscapseToBody || !dom.isList(headList.parentNode)) {\r\n          paras = paras.map(function (para) {\r\n            return dom.replace(para, 'P');\r\n          });\r\n        }\r\n\r\n        $.each(list.from(paras).reverse(), function (idx, para) {\r\n          dom.insertAfter(para, headList);\r\n        });\r\n\r\n        // remove empty lists\r\n        var rootLists = list.compact([headList, middleList, lastList]);\r\n        $.each(rootLists, function (idx, rootList) {\r\n          var listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));\r\n          $.each(listNodes.reverse(), function (idx, listNode) {\r\n            if (!dom.nodeLength(listNode)) {\r\n              dom.remove(listNode, true);\r\n            }\r\n          });\r\n        });\r\n\r\n        releasedParas = releasedParas.concat(paras);\r\n      });\r\n\r\n      return releasedParas;\r\n    };\r\n  };\r\n\r\n\r\n  /**\r\n   * @class editing.Typing\r\n   *\r\n   * Typing\r\n   *\r\n   */\r\n  var Typing = function () {\r\n\r\n    // a Bullet instance to toggle lists off\r\n    var bullet = new Bullet();\r\n\r\n    /**\r\n     * insert tab\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {WrappedRange} rng\r\n     * @param {Number} tabsize\r\n     */\r\n    this.insertTab = function ($editable, rng, tabsize) {\r\n      var tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));\r\n      rng = rng.deleteContents();\r\n      rng.insertNode(tab, true);\r\n\r\n      rng = range.create(tab, tabsize);\r\n      rng.select();\r\n    };\r\n\r\n    /**\r\n     * insert paragraph\r\n     */\r\n    this.insertParagraph = function () {\r\n      var rng = range.create();\r\n\r\n      // deleteContents on range.\r\n      rng = rng.deleteContents();\r\n\r\n      // Wrap range if it needs to be wrapped by paragraph\r\n      rng = rng.wrapBodyInlineWithPara();\r\n\r\n      // finding paragraph\r\n      var splitRoot = dom.ancestor(rng.sc, dom.isPara);\r\n\r\n      var nextPara;\r\n      // on paragraph: split paragraph\r\n      if (splitRoot) {\r\n        // if it is an empty line with li\r\n        if (dom.isEmpty(splitRoot) && dom.isLi(splitRoot)) {\r\n          // disable UL/OL and escape!\r\n          bullet.toggleList(splitRoot.parentNode.nodeName);\r\n          return;\r\n        // if new line has content (not a line break)\r\n        } else {\r\n          nextPara = dom.splitTree(splitRoot, rng.getStartPoint());\r\n\r\n          var emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);\r\n          emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));\r\n\r\n          $.each(emptyAnchors, function (idx, anchor) {\r\n            dom.remove(anchor);\r\n          });\r\n        }\r\n      // no paragraph: insert empty paragraph\r\n      } else {\r\n        var next = rng.sc.childNodes[rng.so];\r\n        nextPara = $(dom.emptyPara)[0];\r\n        if (next) {\r\n          rng.sc.insertBefore(nextPara, next);\r\n        } else {\r\n          rng.sc.appendChild(nextPara);\r\n        }\r\n      }\r\n\r\n      range.create(nextPara, 0).normalize().select();\r\n\r\n    };\r\n\r\n  };\r\n\r\n  /**\r\n   * @class editing.Table\r\n   *\r\n   * Table\r\n   *\r\n   */\r\n  var Table = function () {\r\n    /**\r\n     * handle tab key\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @param {Boolean} isShift\r\n     */\r\n    this.tab = function (rng, isShift) {\r\n      var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n      var table = dom.ancestor(cell, dom.isTable);\r\n      var cells = dom.listDescendant(table, dom.isCell);\r\n\r\n      var nextCell = list[isShift ? 'prev' : 'next'](cells, cell);\r\n      if (nextCell) {\r\n        range.create(nextCell, 0).select();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * create empty table element\r\n     *\r\n     * @param {Number} rowCount\r\n     * @param {Number} colCount\r\n     * @return {Node}\r\n     */\r\n    this.createTable = function (colCount, rowCount) {\r\n      var tds = [], tdHTML;\r\n      for (var idxCol = 0; idxCol < colCount; idxCol++) {\r\n        tds.push('<td>' + dom.blank + '</td>');\r\n      }\r\n      tdHTML = tds.join('');\r\n\r\n      var trs = [], trHTML;\r\n      for (var idxRow = 0; idxRow < rowCount; idxRow++) {\r\n        trs.push('<tr>' + tdHTML + '</tr>');\r\n      }\r\n      trHTML = trs.join('');\r\n      return $('<table class=\"table table-bordered\">' + trHTML + '</table>')[0];\r\n    };\r\n  };\r\n\r\n\r\n  var KEY_BOGUS = 'bogus';\r\n\r\n  /**\r\n   * @class editing.Editor\r\n   *\r\n   * Editor\r\n   *\r\n   */\r\n  var Editor = function (handler) {\r\n\r\n    var self = this;\r\n    var style = new Style();\r\n    var table = new Table();\r\n    var typing = new Typing();\r\n    var bullet = new Bullet();\r\n\r\n    /**\r\n     * @method createRange\r\n     *\r\n     * create range\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @return {WrappedRange}\r\n     */\r\n    this.createRange = function ($editable) {\r\n      this.focus($editable);\r\n      return range.create();\r\n    };\r\n\r\n    /**\r\n     * @method saveRange\r\n     *\r\n     * save current range\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {Boolean} [thenCollapse=false]\r\n     */\r\n    this.saveRange = function ($editable, thenCollapse) {\r\n      this.focus($editable);\r\n      $editable.data('range', range.create());\r\n      if (thenCollapse) {\r\n        range.create().collapse().select();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method saveRange\r\n     *\r\n     * save current node list to $editable.data('childNodes')\r\n     *\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.saveNode = function ($editable) {\r\n      // copy child node reference\r\n      var copy = [];\r\n      for (var key  = 0, len = $editable[0].childNodes.length; key < len; key++) {\r\n        copy.push($editable[0].childNodes[key]);\r\n      }\r\n      $editable.data('childNodes', copy);\r\n    };\r\n\r\n    /**\r\n     * @method restoreRange\r\n     *\r\n     * restore lately range\r\n     *\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.restoreRange = function ($editable) {\r\n      var rng = $editable.data('range');\r\n      if (rng) {\r\n        rng.select();\r\n        this.focus($editable);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method restoreNode\r\n     *\r\n     * restore lately node list\r\n     *\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.restoreNode = function ($editable) {\r\n      $editable.html('');\r\n      var child = $editable.data('childNodes');\r\n      for (var index = 0, len = child.length; index < len; index++) {\r\n        $editable[0].appendChild(child[index]);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method currentStyle\r\n     *\r\n     * current style\r\n     *\r\n     * @param {Node} target\r\n     * @return {Object|Boolean} unfocus\r\n     */\r\n    this.currentStyle = function (target) {\r\n      var rng = range.create();\r\n      var styleInfo =  rng && rng.isOnEditable() ? style.current(rng.normalize()) : {};\r\n      if (dom.isImg(target)) {\r\n        styleInfo.image = target;\r\n      }\r\n      return styleInfo;\r\n    };\r\n\r\n    /**\r\n     * style from node\r\n     *\r\n     * @param {jQuery} $node\r\n     * @return {Object}\r\n     */\r\n    this.styleFromNode = function ($node) {\r\n      return style.fromNode($node);\r\n    };\r\n\r\n    var triggerOnBeforeChange = function ($editable) {\r\n      var $holder = dom.makeLayoutInfo($editable).holder();\r\n      handler.bindCustomEvent(\r\n        $holder, $editable.data('callbacks'), 'before.command'\r\n      )($editable.html(), $editable);\r\n    };\r\n\r\n    var triggerOnChange = function ($editable) {\r\n      var $holder = dom.makeLayoutInfo($editable).holder();\r\n      handler.bindCustomEvent(\r\n        $holder, $editable.data('callbacks'), 'change'\r\n      )($editable.html(), $editable);\r\n    };\r\n\r\n    /**\r\n     * @method undo\r\n     * undo\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.undo = function ($editable) {\r\n      triggerOnBeforeChange($editable);\r\n      $editable.data('NoteHistory').undo();\r\n      triggerOnChange($editable);\r\n    };\r\n\r\n    /**\r\n     * @method redo\r\n     * redo\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.redo = function ($editable) {\r\n      triggerOnBeforeChange($editable);\r\n      $editable.data('NoteHistory').redo();\r\n      triggerOnChange($editable);\r\n    };\r\n\r\n    /**\r\n     * @method beforeCommand\r\n     * before command\r\n     * @param {jQuery} $editable\r\n     */\r\n    var beforeCommand = this.beforeCommand = function ($editable) {\r\n      triggerOnBeforeChange($editable);\r\n      // keep focus on editable before command execution\r\n      self.focus($editable);\r\n    };\r\n\r\n    /**\r\n     * @method afterCommand\r\n     * after command\r\n     * @param {jQuery} $editable\r\n     * @param {Boolean} isPreventTrigger\r\n     */\r\n    var afterCommand = this.afterCommand = function ($editable, isPreventTrigger) {\r\n      $editable.data('NoteHistory').recordUndo();\r\n      if (!isPreventTrigger) {\r\n        triggerOnChange($editable);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method bold\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method italic\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method underline\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method strikethrough\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method formatBlock\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method superscript\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method subscript\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method justifyLeft\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method justifyCenter\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method justifyRight\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method justifyFull\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method formatBlock\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method removeFormat\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method backColor\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method foreColor\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method insertHorizontalRule\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /**\r\n     * @method fontName\r\n     *\r\n     * change font name\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {Mixed} value\r\n     */\r\n\r\n    /* jshint ignore:start */\r\n    // native commands(with execCommand), generate function for execCommand\r\n    var commands = ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript',\r\n                    'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull',\r\n                    'formatBlock', 'removeFormat',\r\n                    'backColor', 'foreColor', 'fontName'];\r\n\r\n    for (var idx = 0, len = commands.length; idx < len; idx ++) {\r\n      this[commands[idx]] = (function (sCmd) {\r\n        return function ($editable, value) {\r\n          beforeCommand($editable);\r\n\r\n          document.execCommand(sCmd, false, value);\r\n\r\n          afterCommand($editable, true);\r\n        };\r\n      })(commands[idx]);\r\n    }\r\n    /* jshint ignore:end */\r\n\r\n    /**\r\n     * @method tab\r\n     *\r\n     * handle tab key\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {Object} options\r\n     */\r\n    this.tab = function ($editable, options) {\r\n      var rng = this.createRange($editable);\r\n      if (rng.isCollapsed() && rng.isOnCell()) {\r\n        table.tab(rng);\r\n      } else {\r\n        beforeCommand($editable);\r\n        typing.insertTab($editable, rng, options.tabsize);\r\n        afterCommand($editable);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method untab\r\n     *\r\n     * handle shift+tab key\r\n     *\r\n     */\r\n    this.untab = function ($editable) {\r\n      var rng = this.createRange($editable);\r\n      if (rng.isCollapsed() && rng.isOnCell()) {\r\n        table.tab(rng, true);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @method insertParagraph\r\n     *\r\n     * insert paragraph\r\n     *\r\n     * @param {Node} $editable\r\n     */\r\n    this.insertParagraph = function ($editable) {\r\n      beforeCommand($editable);\r\n      typing.insertParagraph($editable);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * @method insertOrderedList\r\n     *\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.insertOrderedList = function ($editable) {\r\n      beforeCommand($editable);\r\n      bullet.insertOrderedList($editable);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.insertUnorderedList = function ($editable) {\r\n      beforeCommand($editable);\r\n      bullet.insertUnorderedList($editable);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.indent = function ($editable) {\r\n      beforeCommand($editable);\r\n      bullet.indent($editable);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.outdent = function ($editable) {\r\n      beforeCommand($editable);\r\n      bullet.outdent($editable);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * insert image\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} sUrl\r\n     */\r\n    this.insertImage = function ($editable, sUrl, filename) {\r\n      async.createImage(sUrl, filename).then(function ($image) {\r\n        beforeCommand($editable);\r\n        $image.css({\r\n          display: '',\r\n          width: Math.min($editable.width(), $image.width())\r\n        });\r\n        range.create().insertNode($image[0]);\r\n        range.createFromNodeAfter($image[0]).select();\r\n        afterCommand($editable);\r\n      }).fail(function () {\r\n        var $holder = dom.makeLayoutInfo($editable).holder();\r\n        handler.bindCustomEvent(\r\n          $holder, $editable.data('callbacks'), 'image.upload.error'\r\n        )();\r\n      });\r\n    };\r\n\r\n    /**\r\n     * @method insertNode\r\n     * insert node\r\n     * @param {Node} $editable\r\n     * @param {Node} node\r\n     */\r\n    this.insertNode = function ($editable, node) {\r\n      beforeCommand($editable);\r\n      range.create().insertNode(node);\r\n      range.createFromNodeAfter(node).select();\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * insert text\r\n     * @param {Node} $editable\r\n     * @param {String} text\r\n     */\r\n    this.insertText = function ($editable, text) {\r\n      beforeCommand($editable);\r\n      var textNode = range.create().insertNode(dom.createText(text));\r\n      range.create(textNode, dom.nodeLength(textNode)).select();\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * paste HTML\r\n     * @param {Node} $editable\r\n     * @param {String} markup\r\n     */\r\n    this.pasteHTML = function ($editable, markup) {\r\n      beforeCommand($editable);\r\n      var contents = range.create().pasteHTML(markup);\r\n      range.createFromNodeAfter(list.last(contents)).select();\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * formatBlock\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} tagName\r\n     */\r\n    this.formatBlock = function ($editable, tagName) {\r\n      beforeCommand($editable);\r\n      // [workaround] for MSIE, IE need `<`\r\n      tagName = agent.isMSIE ? '<' + tagName + '>' : tagName;\r\n      document.execCommand('FormatBlock', false, tagName);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    this.formatPara = function ($editable) {\r\n      beforeCommand($editable);\r\n      this.formatBlock($editable, 'P');\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /* jshint ignore:start */\r\n    for (var idx = 1; idx <= 6; idx ++) {\r\n      this['formatH' + idx] = function (idx) {\r\n        return function ($editable) {\r\n          this.formatBlock($editable, 'H' + idx);\r\n        };\r\n      }(idx);\r\n    };\r\n    /* jshint ignore:end */\r\n\r\n    /**\r\n     * fontSize\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} value - px\r\n     */\r\n    this.fontSize = function ($editable, value) {\r\n      var rng = range.create();\r\n\r\n      if (rng.isCollapsed()) {\r\n        var spans = style.styleNodes(rng);\r\n        var firstSpan = list.head(spans);\r\n\r\n        $(spans).css({\r\n          'font-size': value + 'px'\r\n        });\r\n\r\n        // [workaround] added styled bogus span for style\r\n        //  - also bogus character needed for cursor position\r\n        if (firstSpan && !dom.nodeLength(firstSpan)) {\r\n          firstSpan.innerHTML = dom.ZERO_WIDTH_NBSP_CHAR;\r\n          range.createFromNodeAfter(firstSpan.firstChild).select();\r\n          $editable.data(KEY_BOGUS, firstSpan);\r\n        }\r\n      } else {\r\n        beforeCommand($editable);\r\n        $(style.styleNodes(rng)).css({\r\n          'font-size': value + 'px'\r\n        });\r\n        afterCommand($editable);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * insert horizontal rule\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.insertHorizontalRule = function ($editable) {\r\n      beforeCommand($editable);\r\n\r\n      var rng = range.create();\r\n      var hrNode = rng.insertNode($('<HR/>')[0]);\r\n      if (hrNode.nextSibling) {\r\n        range.create(hrNode.nextSibling, 0).normalize().select();\r\n      }\r\n\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * remove bogus node and character\r\n     */\r\n    this.removeBogus = function ($editable) {\r\n      var bogusNode = $editable.data(KEY_BOGUS);\r\n      if (!bogusNode) {\r\n        return;\r\n      }\r\n\r\n      var textNode = list.find(list.from(bogusNode.childNodes), dom.isText);\r\n\r\n      var bogusCharIdx = textNode.nodeValue.indexOf(dom.ZERO_WIDTH_NBSP_CHAR);\r\n      if (bogusCharIdx !== -1) {\r\n        textNode.deleteData(bogusCharIdx, 1);\r\n      }\r\n\r\n      if (dom.isEmpty(bogusNode)) {\r\n        dom.remove(bogusNode);\r\n      }\r\n\r\n      $editable.removeData(KEY_BOGUS);\r\n    };\r\n\r\n    /**\r\n     * lineHeight\r\n     * @param {jQuery} $editable\r\n     * @param {String} value\r\n     */\r\n    this.lineHeight = function ($editable, value) {\r\n      beforeCommand($editable);\r\n      style.stylePara(range.create(), {\r\n        lineHeight: value\r\n      });\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * unlink\r\n     *\r\n     * @type command\r\n     *\r\n     * @param {jQuery} $editable\r\n     */\r\n    this.unlink = function ($editable) {\r\n      var rng = this.createRange($editable);\r\n      if (rng.isOnAnchor()) {\r\n        var anchor = dom.ancestor(rng.sc, dom.isAnchor);\r\n        rng = range.createFromNode(anchor);\r\n        rng.select();\r\n\r\n        beforeCommand($editable);\r\n        document.execCommand('unlink');\r\n        afterCommand($editable);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * create link (command)\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {Object} linkInfo\r\n     * @param {Object} options\r\n     */\r\n    this.createLink = function ($editable, linkInfo, options) {\r\n      var linkUrl = linkInfo.url;\r\n      var linkText = linkInfo.text;\r\n      var isNewWindow = linkInfo.isNewWindow;\r\n      var rng = linkInfo.range || this.createRange($editable);\r\n      var isTextChanged = rng.toString() !== linkText;\r\n\r\n      options = options || dom.makeLayoutInfo($editable).editor().data('options');\r\n\r\n      beforeCommand($editable);\r\n\r\n      if (options.onCreateLink) {\r\n        linkUrl = options.onCreateLink(linkUrl);\r\n      }\r\n\r\n      var anchors = [];\r\n      if (isTextChanged) {\r\n        // Create a new link when text changed.\r\n        var anchor = rng.insertNode($('<A>' + linkText + '</A>')[0]);\r\n        anchors.push(anchor);\r\n      } else {\r\n        anchors = style.styleNodes(rng, {\r\n          nodeName: 'A',\r\n          expandClosestSibling: true,\r\n          onlyPartialContains: true\r\n        });\r\n      }\r\n\r\n      $.each(anchors, function (idx, anchor) {\r\n        $(anchor).attr('href', linkUrl);\r\n        if (isNewWindow) {\r\n          $(anchor).attr('target', '_blank');\r\n        } else {\r\n          $(anchor).removeAttr('target');\r\n        }\r\n      });\r\n\r\n      var startRange = range.createFromNodeBefore(list.head(anchors));\r\n      var startPoint = startRange.getStartPoint();\r\n      var endRange = range.createFromNodeAfter(list.last(anchors));\r\n      var endPoint = endRange.getEndPoint();\r\n\r\n      range.create(\r\n        startPoint.node,\r\n        startPoint.offset,\r\n        endPoint.node,\r\n        endPoint.offset\r\n      ).select();\r\n\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * returns link info\r\n     *\r\n     * @return {Object}\r\n     * @return {WrappedRange} return.range\r\n     * @return {String} return.text\r\n     * @return {Boolean} [return.isNewWindow=true]\r\n     * @return {String} [return.url=\"\"]\r\n     */\r\n    this.getLinkInfo = function ($editable) {\r\n      this.focus($editable);\r\n\r\n      var rng = range.create().expand(dom.isAnchor);\r\n\r\n      // Get the first anchor on range(for edit).\r\n      var $anchor = $(list.head(rng.nodes(dom.isAnchor)));\r\n\r\n      return {\r\n        range: rng,\r\n        text: rng.toString(),\r\n        isNewWindow: $anchor.length ? $anchor.attr('target') === '_blank' : false,\r\n        url: $anchor.length ? $anchor.attr('href') : ''\r\n      };\r\n    };\r\n\r\n    /**\r\n     * setting color\r\n     *\r\n     * @param {Node} $editable\r\n     * @param {Object} sObjColor  color code\r\n     * @param {String} sObjColor.foreColor foreground color\r\n     * @param {String} sObjColor.backColor background color\r\n     */\r\n    this.color = function ($editable, sObjColor) {\r\n      var oColor = JSON.parse(sObjColor);\r\n      var foreColor = oColor.foreColor, backColor = oColor.backColor;\r\n\r\n      beforeCommand($editable);\r\n\r\n      if (foreColor) { document.execCommand('foreColor', false, foreColor); }\r\n      if (backColor) { document.execCommand('backColor', false, backColor); }\r\n\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * insert Table\r\n     *\r\n     * @param {Node} $editable\r\n     * @param {String} sDim dimension of table (ex : \"5x5\")\r\n     */\r\n    this.insertTable = function ($editable, sDim) {\r\n      var dimension = sDim.split('x');\r\n      beforeCommand($editable);\r\n\r\n      var rng = range.create().deleteContents();\r\n      rng.insertNode(table.createTable(dimension[0], dimension[1]));\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * float me\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} value\r\n     * @param {jQuery} $target\r\n     */\r\n    this.floatMe = function ($editable, value, $target) {\r\n      beforeCommand($editable);\r\n      // bootstrap\r\n      $target.removeClass('pull-left pull-right');\r\n      if (value && value !== 'none') {\r\n        $target.addClass('pull-' + value);\r\n      }\r\n\r\n      // fallback for non-bootstrap\r\n      $target.css('float', value);\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * change image shape\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} value css class\r\n     * @param {Node} $target\r\n     */\r\n    this.imageShape = function ($editable, value, $target) {\r\n      beforeCommand($editable);\r\n\r\n      $target.removeClass('img-rounded img-circle img-thumbnail');\r\n\r\n      if (value) {\r\n        $target.addClass(value);\r\n      }\r\n\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * resize overlay element\r\n     * @param {jQuery} $editable\r\n     * @param {String} value\r\n     * @param {jQuery} $target - target element\r\n     */\r\n    this.resize = function ($editable, value, $target) {\r\n      beforeCommand($editable);\r\n\r\n      $target.css({\r\n        width: value * 100 + '%',\r\n        height: ''\r\n      });\r\n\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * @param {Position} pos\r\n     * @param {jQuery} $target - target element\r\n     * @param {Boolean} [bKeepRatio] - keep ratio\r\n     */\r\n    this.resizeTo = function (pos, $target, bKeepRatio) {\r\n      var imageSize;\r\n      if (bKeepRatio) {\r\n        var newRatio = pos.y / pos.x;\r\n        var ratio = $target.data('ratio');\r\n        imageSize = {\r\n          width: ratio > newRatio ? pos.x : pos.y / ratio,\r\n          height: ratio > newRatio ? pos.x * ratio : pos.y\r\n        };\r\n      } else {\r\n        imageSize = {\r\n          width: pos.x,\r\n          height: pos.y\r\n        };\r\n      }\r\n\r\n      $target.css(imageSize);\r\n    };\r\n\r\n    /**\r\n     * remove media object\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} value - dummy argument (for keep interface)\r\n     * @param {jQuery} $target - target element\r\n     */\r\n    this.removeMedia = function ($editable, value, $target) {\r\n      beforeCommand($editable);\r\n      $target.detach();\r\n\r\n      handler.bindCustomEvent(\r\n        $(), $editable.data('callbacks'), 'media.delete'\r\n      )($target, $editable);\r\n\r\n      afterCommand($editable);\r\n    };\r\n\r\n    /**\r\n     * set focus\r\n     *\r\n     * @param $editable\r\n     */\r\n    this.focus = function ($editable) {\r\n      $editable.focus();\r\n\r\n      // [workaround] for firefox bug http://goo.gl/lVfAaI\r\n      if (agent.isFF && !range.create().isOnEditable()) {\r\n        range.createFromNode($editable[0])\r\n             .normalize()\r\n             .collapse()\r\n             .select();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * returns whether contents is empty or not.\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @return {Boolean}\r\n     */\r\n    this.isEmpty = function ($editable) {\r\n      return dom.isEmpty($editable[0]) || dom.emptyPara === $editable.html();\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @class module.Button\r\n   *\r\n   * Button\r\n   */\r\n  var Button = function () {\r\n    /**\r\n     * update button status\r\n     *\r\n     * @param {jQuery} $container\r\n     * @param {Object} styleInfo\r\n     */\r\n    this.update = function ($container, styleInfo) {\r\n      /**\r\n       * handle dropdown's check mark (for fontname, fontsize, lineHeight).\r\n       * @param {jQuery} $btn\r\n       * @param {Number} value\r\n       */\r\n      var checkDropdownMenu = function ($btn, value) {\r\n        $btn.find('.dropdown-menu li a').each(function () {\r\n          // always compare string to avoid creating another func.\r\n          var isChecked = ($(this).data('value') + '') === (value + '');\r\n          this.className = isChecked ? 'checked' : '';\r\n        });\r\n      };\r\n\r\n      /**\r\n       * update button state(active or not).\r\n       *\r\n       * @private\r\n       * @param {String} selector\r\n       * @param {Function} pred\r\n       */\r\n      var btnState = function (selector, pred) {\r\n        var $btn = $container.find(selector);\r\n        $btn.toggleClass('active', pred());\r\n      };\r\n\r\n      if (styleInfo.image) {\r\n        var $img = $(styleInfo.image);\r\n          \r\n        btnState('button[data-event=\"imageShape\"][dadata-value=\"none\"]', function () {\r\n          return $img.hasClass('img-responsive');\r\n        });\r\n        btnState('button[data-event=\"imageShape\"][data-value=\"img-rounded\"]', function () {\r\n          return $img.hasClass('img-rounded img-responsive');\r\n        });\r\n        btnState('button[data-event=\"imageShape\"][data-value=\"img-circle\"]', function () {\r\n          return $img.hasClass('img-circle img-responsive');\r\n        });\r\n        btnState('button[data-event=\"imageShape\"][data-value=\"img-thumbnail\"]', function () {\r\n          return $img.hasClass('img-thumbnail img-responsive');\r\n        });\r\n        btnState('button[data-event=\"imageShape\"]:not([data-value])', function () {\r\n          return !$img.is('.img-responsive, .img-rounded, .img-circle, .img-thumbnail');\r\n        });\r\n\r\n        var imgFloat = $img.css('float');\r\n        btnState('button[data-event=\"floatMe\"][data-value=\"left\"]', function () {\r\n          return imgFloat === 'left';\r\n        });\r\n        btnState('button[data-event=\"floatMe\"][data-value=\"right\"]', function () {\r\n          return imgFloat === 'right';\r\n        });\r\n        btnState('button[data-event=\"floatMe\"][data-value=\"none\"]', function () {\r\n          return imgFloat !== 'left' && imgFloat !== 'right';\r\n        });\r\n\r\n        var style = $img.attr('style');\r\n        btnState('button[data-event=\"resize\"][data-value=\"1\"]', function () {\r\n          return !!/(^|\\s)(max-)?width\\s*:\\s*100%/.test(style);\r\n        });\r\n        btnState('button[data-event=\"resize\"][data-value=\"0.5\"]', function () {\r\n          return !!/(^|\\s)(max-)?width\\s*:\\s*50%/.test(style);\r\n        });\r\n        btnState('button[data-event=\"resize\"][data-value=\"0.25\"]', function () {\r\n          return !!/(^|\\s)(max-)?width\\s*:\\s*25%/.test(style);\r\n        });\r\n        return;\r\n      }\r\n\r\n      // fontname\r\n      var $fontname = $container.find('.note-fontname');\r\n      if ($fontname.length) {\r\n        var selectedFont = styleInfo['font-family'];\r\n        if (!!selectedFont) {\r\n\r\n          var list = selectedFont.split(',');\r\n          for (var i = 0, len = list.length; i < len; i++) {\r\n            selectedFont = list[i].replace(/[\\'\\\"]/g, '').replace(/\\s+$/, '').replace(/^\\s+/, '');\r\n            if (agent.isFontInstalled(selectedFont)) {\r\n              break;\r\n            }\r\n          }\r\n          \r\n          $fontname.find('.note-current-fontname').text(selectedFont);\r\n          checkDropdownMenu($fontname, selectedFont);\r\n\r\n        }\r\n      }\r\n\r\n      // fontsize\r\n      var $fontsize = $container.find('.note-fontsize');\r\n      $fontsize.find('.note-current-fontsize').text(styleInfo['font-size']);\r\n      checkDropdownMenu($fontsize, parseFloat(styleInfo['font-size']));\r\n\r\n      // lineheight\r\n      var $lineHeight = $container.find('.note-height');\r\n      checkDropdownMenu($lineHeight, parseFloat(styleInfo['line-height']));\r\n\r\n      btnState('button[data-event=\"bold\"]', function () {\r\n        return styleInfo['font-bold'] === 'bold';\r\n      });\r\n      btnState('button[data-event=\"italic\"]', function () {\r\n        return styleInfo['font-italic'] === 'italic';\r\n      });\r\n      btnState('button[data-event=\"underline\"]', function () {\r\n        return styleInfo['font-underline'] === 'underline';\r\n      });\r\n      btnState('button[data-event=\"strikethrough\"]', function () {\r\n        return styleInfo['font-strikethrough'] === 'strikethrough';\r\n      });\r\n      btnState('button[data-event=\"superscript\"]', function () {\r\n        return styleInfo['font-superscript'] === 'superscript';\r\n      });\r\n      btnState('button[data-event=\"subscript\"]', function () {\r\n        return styleInfo['font-subscript'] === 'subscript';\r\n      });\r\n      btnState('button[data-event=\"justifyLeft\"]', function () {\r\n        return styleInfo['text-align'] === 'left' || styleInfo['text-align'] === 'start';\r\n      });\r\n      btnState('button[data-event=\"justifyCenter\"]', function () {\r\n        return styleInfo['text-align'] === 'center';\r\n      });\r\n      btnState('button[data-event=\"justifyRight\"]', function () {\r\n        return styleInfo['text-align'] === 'right';\r\n      });\r\n      btnState('button[data-event=\"justifyFull\"]', function () {\r\n        return styleInfo['text-align'] === 'justify';\r\n      });\r\n      btnState('button[data-event=\"insertUnorderedList\"]', function () {\r\n        return styleInfo['list-style'] === 'unordered';\r\n      });\r\n      btnState('button[data-event=\"insertOrderedList\"]', function () {\r\n        return styleInfo['list-style'] === 'ordered';\r\n      });\r\n    };\r\n\r\n    /**\r\n     * update recent color\r\n     *\r\n     * @param {Node} button\r\n     * @param {String} eventName\r\n     * @param {Mixed} value\r\n     */\r\n    this.updateRecentColor = function (button, eventName, value) {\r\n      var $color = $(button).closest('.note-color');\r\n      var $recentColor = $color.find('.note-recent-color');\r\n      var colorInfo = JSON.parse($recentColor.attr('data-value'));\r\n      colorInfo[eventName] = value;\r\n      $recentColor.attr('data-value', JSON.stringify(colorInfo));\r\n      var sKey = eventName === 'backColor' ? 'background-color' : 'color';\r\n      $recentColor.find('i').css(sKey, value);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @class module.Toolbar\r\n   *\r\n   * Toolbar\r\n   */\r\n  var Toolbar = function () {\r\n    var button = new Button();\r\n\r\n    this.update = function ($toolbar, styleInfo) {\r\n      button.update($toolbar, styleInfo);\r\n    };\r\n\r\n    /**\r\n     * @param {Node} button\r\n     * @param {String} eventName\r\n     * @param {String} value\r\n     */\r\n    this.updateRecentColor = function (buttonNode, eventName, value) {\r\n      button.updateRecentColor(buttonNode, eventName, value);\r\n    };\r\n\r\n    /**\r\n     * activate buttons exclude codeview\r\n     * @param {jQuery} $toolbar\r\n     */\r\n    this.activate = function ($toolbar) {\r\n      $toolbar.find('button')\r\n              .not('button[data-event=\"codeview\"]')\r\n              .removeClass('disabled');\r\n    };\r\n\r\n    /**\r\n     * deactivate buttons exclude codeview\r\n     * @param {jQuery} $toolbar\r\n     */\r\n    this.deactivate = function ($toolbar) {\r\n      $toolbar.find('button')\r\n              .not('button[data-event=\"codeview\"]')\r\n              .addClass('disabled');\r\n    };\r\n\r\n    /**\r\n     * @param {jQuery} $container\r\n     * @param {Boolean} [bFullscreen=false]\r\n     */\r\n    this.updateFullscreen = function ($container, bFullscreen) {\r\n      var $btn = $container.find('button[data-event=\"fullscreen\"]');\r\n      $btn.toggleClass('active', bFullscreen);\r\n    };\r\n\r\n    /**\r\n     * @param {jQuery} $container\r\n     * @param {Boolean} [isCodeview=false]\r\n     */\r\n    this.updateCodeview = function ($container, isCodeview) {\r\n      var $btn = $container.find('button[data-event=\"codeview\"]');\r\n      $btn.toggleClass('active', isCodeview);\r\n\r\n      if (isCodeview) {\r\n        this.deactivate($container);\r\n      } else {\r\n        this.activate($container);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * get button in toolbar \r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {String} name\r\n     * @return {jQuery}\r\n     */\r\n    this.get = function ($editable, name) {\r\n      var $toolbar = dom.makeLayoutInfo($editable).toolbar();\r\n\r\n      return $toolbar.find('[data-name=' + name + ']');\r\n    };\r\n\r\n    /**\r\n     * set button state\r\n     * @param {jQuery} $editable\r\n     * @param {String} name\r\n     * @param {Boolean} [isActive=true]\r\n     */\r\n    this.setButtonState = function ($editable, name, isActive) {\r\n      isActive = (isActive === false) ? false : true;\r\n\r\n      var $button = this.get($editable, name);\r\n      $button.toggleClass('active', isActive);\r\n    };\r\n  };\r\n\r\n  var EDITABLE_PADDING = 24;\r\n\r\n  var Statusbar = function () {\r\n    var $document = $(document);\r\n\r\n    this.attach = function (layoutInfo, options) {\r\n      if (!options.disableResizeEditor) {\r\n        layoutInfo.statusbar().on('mousedown', hStatusbarMousedown);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * `mousedown` event handler on statusbar\r\n     *\r\n     * @param {MouseEvent} event\r\n     */\r\n    var hStatusbarMousedown = function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      var $editable = dom.makeLayoutInfo(event.target).editable();\r\n      var editableTop = $editable.offset().top - $document.scrollTop();\r\n\r\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\r\n      var options = layoutInfo.editor().data('options');\r\n\r\n      $document.on('mousemove', function (event) {\r\n        var nHeight = event.clientY - (editableTop + EDITABLE_PADDING);\r\n\r\n        nHeight = (options.minHeight > 0) ? Math.max(nHeight, options.minHeight) : nHeight;\r\n        nHeight = (options.maxHeight > 0) ? Math.min(nHeight, options.maxHeight) : nHeight;\r\n\r\n        $editable.height(nHeight);\r\n      }).one('mouseup', function () {\r\n        $document.off('mousemove');\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @class module.Popover\r\n   *\r\n   * Popover (http://getbootstrap.com/javascript/#popovers)\r\n   *\r\n   */\r\n  var Popover = function () {\r\n    var button = new Button();\r\n\r\n    /**\r\n     * returns position from placeholder\r\n     *\r\n     * @private\r\n     * @param {Node} placeholder\r\n     * @param {Object} options\r\n     * @param {Boolean} options.isAirMode\r\n     * @return {Position}\r\n     */\r\n    var posFromPlaceholder = function (placeholder, options) {\r\n      var isAirMode = options && options.isAirMode;\r\n      var isLeftTop = options && options.isLeftTop;\r\n\r\n      var $placeholder = $(placeholder);\r\n      var pos = isAirMode ? $placeholder.offset() : $placeholder.position();\r\n      var height = isLeftTop ? 0 : $placeholder.outerHeight(true); // include margin\r\n\r\n      // popover below placeholder.\r\n      return {\r\n        left: pos.left,\r\n        top: pos.top + height\r\n      };\r\n    };\r\n\r\n    /**\r\n     * show popover\r\n     *\r\n     * @private\r\n     * @param {jQuery} popover\r\n     * @param {Position} pos\r\n     */\r\n    var showPopover = function ($popover, pos) {\r\n      $popover.css({\r\n        display: 'block',\r\n        left: pos.left,\r\n        top: pos.top\r\n      });\r\n    };\r\n\r\n    var PX_POPOVER_ARROW_OFFSET_X = 20;\r\n\r\n    /**\r\n     * update current state\r\n     * @param {jQuery} $popover - popover container\r\n     * @param {Object} styleInfo - style object\r\n     * @param {Boolean} isAirMode\r\n     */\r\n    this.update = function ($popover, styleInfo, isAirMode) {\r\n      button.update($popover, styleInfo);\r\n\r\n      var $linkPopover = $popover.find('.note-link-popover');\r\n      if (styleInfo.anchor) {\r\n        var $anchor = $linkPopover.find('a');\r\n        var href = $(styleInfo.anchor).attr('href');\r\n        var target = $(styleInfo.anchor).attr('target');\r\n        $anchor.attr('href', href).html(href);\r\n        if (!target) {\r\n          $anchor.removeAttr('target');\r\n        } else {\r\n          $anchor.attr('target', '_blank');\r\n        }\r\n        showPopover($linkPopover, posFromPlaceholder(styleInfo.anchor, {\r\n          isAirMode: isAirMode\r\n        }));\r\n      } else {\r\n        $linkPopover.hide();\r\n      }\r\n\r\n      var $imagePopover = $popover.find('.note-image-popover');\r\n      if (styleInfo.image) {\r\n        showPopover($imagePopover, posFromPlaceholder(styleInfo.image, {\r\n          isAirMode: isAirMode,\r\n          isLeftTop: true\r\n        }));\r\n      } else {\r\n        $imagePopover.hide();\r\n      }\r\n\r\n      var $airPopover = $popover.find('.note-air-popover');\r\n      if (isAirMode && styleInfo.range && !styleInfo.range.isCollapsed()) {\r\n        var rect = list.last(styleInfo.range.getClientRects());\r\n        if (rect) {\r\n          var bnd = func.rect2bnd(rect);\r\n          showPopover($airPopover, {\r\n            left: Math.max(bnd.left + bnd.width / 2 - PX_POPOVER_ARROW_OFFSET_X, 0),\r\n            top: bnd.top + bnd.height\r\n          });\r\n        }\r\n      } else {\r\n        $airPopover.hide();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @param {Node} button\r\n     * @param {String} eventName\r\n     * @param {String} value\r\n     */\r\n    this.updateRecentColor = function (button, eventName, value) {\r\n      button.updateRecentColor(button, eventName, value);\r\n    };\r\n\r\n    /**\r\n     * hide all popovers\r\n     * @param {jQuery} $popover - popover container\r\n     */\r\n    this.hide = function ($popover) {\r\n      $popover.children().hide();\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @class module.Handle\r\n   *\r\n   * Handle\r\n   */\r\n  var Handle = function (handler) {\r\n    var $document = $(document);\r\n\r\n    /**\r\n     * `mousedown` event handler on $handle\r\n     *  - controlSizing: resize image\r\n     *\r\n     * @param {MouseEvent} event\r\n     */\r\n    var hHandleMousedown = function (event) {\r\n      if (dom.isControlSizing(event.target)) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        var layoutInfo = dom.makeLayoutInfo(event.target),\r\n            $handle = layoutInfo.handle(),\r\n            $popover = layoutInfo.popover(),\r\n            $editable = layoutInfo.editable(),\r\n            $editor = layoutInfo.editor();\r\n\r\n        var target = $handle.find('.note-control-selection').data('target'),\r\n            $target = $(target), posStart = $target.offset(),\r\n            scrollTop = $document.scrollTop();\r\n\r\n        var isAirMode = $editor.data('options').airMode;\r\n\r\n        $document.on('mousemove', function (event) {\r\n          handler.invoke('editor.resizeTo', {\r\n            x: event.clientX - posStart.left,\r\n            y: event.clientY - (posStart.top - scrollTop)\r\n          }, $target, !event.shiftKey);\r\n\r\n          handler.invoke('handle.update', $handle, {image: target}, isAirMode);\r\n          handler.invoke('popover.update', $popover, {image: target}, isAirMode);\r\n        }).one('mouseup', function () {\r\n          $document.off('mousemove');\r\n          handler.invoke('editor.afterCommand', $editable);\r\n        });\r\n\r\n        if (!$target.data('ratio')) { // original ratio.\r\n          $target.data('ratio', $target.height() / $target.width());\r\n        }\r\n      }\r\n    };\r\n\r\n    this.attach = function (layoutInfo) {\r\n      layoutInfo.handle().on('mousedown', hHandleMousedown);\r\n    };\r\n\r\n    /**\r\n     * update handle\r\n     * @param {jQuery} $handle\r\n     * @param {Object} styleInfo\r\n     * @param {Boolean} isAirMode\r\n     */\r\n    this.update = function ($handle, styleInfo, isAirMode) {\r\n      var $selection = $handle.find('.note-control-selection');\r\n      if (styleInfo.image) {\r\n        var $image = $(styleInfo.image);\r\n        var pos = isAirMode ? $image.offset() : $image.position();\r\n\r\n        // include margin\r\n        var imageSize = {\r\n          w: $image.outerWidth(true),\r\n          h: $image.outerHeight(true)\r\n        };\r\n\r\n        $selection.css({\r\n          display: 'block',\r\n          left: pos.left,\r\n          top: pos.top,\r\n          width: imageSize.w,\r\n          height: imageSize.h\r\n        }).data('target', styleInfo.image); // save current image element.\r\n        var sizingText = imageSize.w + 'x' + imageSize.h;\r\n        $selection.find('.note-control-selection-info').text(sizingText);\r\n      } else {\r\n        $selection.hide();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * hide\r\n     *\r\n     * @param {jQuery} $handle\r\n     */\r\n    this.hide = function ($handle) {\r\n      $handle.children().hide();\r\n    };\r\n  };\r\n\r\n  var Fullscreen = function (handler) {\r\n    var $window = $(window);\r\n    var $scrollbar = $('html, body');\r\n\r\n    /**\r\n     * toggle fullscreen\r\n     *\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.toggle = function (layoutInfo) {\r\n\r\n      var $editor = layoutInfo.editor(),\r\n          $toolbar = layoutInfo.toolbar(),\r\n          $editable = layoutInfo.editable(),\r\n          $codable = layoutInfo.codable();\r\n\r\n      var resize = function (size) {\r\n        $editable.css('height', size.h);\r\n        $codable.css('height', size.h);\r\n        if ($codable.data('cmeditor')) {\r\n          $codable.data('cmeditor').setsize(null, size.h);\r\n        }\r\n      };\r\n\r\n      $editor.toggleClass('fullscreen');\r\n      var isFullscreen = $editor.hasClass('fullscreen');\r\n      if (isFullscreen) {\r\n        $editable.data('orgheight', $editable.css('height'));\r\n\r\n        $window.on('resize', function () {\r\n          resize({\r\n            h: $window.height() - $toolbar.outerHeight()\r\n          });\r\n        }).trigger('resize');\r\n\r\n        $scrollbar.css('overflow', 'hidden');\r\n      } else {\r\n        $window.off('resize');\r\n        resize({\r\n          h: $editable.data('orgheight')\r\n        });\r\n        $scrollbar.css('overflow', 'visible');\r\n      }\r\n\r\n      handler.invoke('toolbar.updateFullscreen', $toolbar, isFullscreen);\r\n    };\r\n  };\r\n\r\n\r\n  var CodeMirror;\r\n  if (agent.hasCodeMirror) {\r\n    if (agent.isSupportAmd) {\r\n      require(['CodeMirror'], function (cm) {\r\n        CodeMirror = cm;\r\n      });\r\n    } else {\r\n      CodeMirror = window.CodeMirror;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @class Codeview\r\n   */\r\n  var Codeview = function (handler) {\r\n\r\n    this.sync = function (layoutInfo) {\r\n      var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);\r\n      if (isCodeview && agent.hasCodeMirror) {\r\n        layoutInfo.codable().data('cmEditor').save();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * @param {Object} layoutInfo\r\n     * @return {Boolean}\r\n     */\r\n    this.isActivated = function (layoutInfo) {\r\n      var $editor = layoutInfo.editor();\r\n      return $editor.hasClass('codeview');\r\n    };\r\n\r\n    /**\r\n     * toggle codeview\r\n     *\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.toggle = function (layoutInfo) {\r\n      if (this.isActivated(layoutInfo)) {\r\n        this.deactivate(layoutInfo);\r\n      } else {\r\n        this.activate(layoutInfo);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * activate code view\r\n     *\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.activate = function (layoutInfo) {\r\n      var $editor = layoutInfo.editor(),\r\n          $toolbar = layoutInfo.toolbar(),\r\n          $editable = layoutInfo.editable(),\r\n          $codable = layoutInfo.codable(),\r\n          $popover = layoutInfo.popover(),\r\n          $handle = layoutInfo.handle();\r\n\r\n      var options = $editor.data('options');\r\n\r\n      $codable.val(dom.html($editable, options.prettifyHtml));\r\n      $codable.height($editable.height());\r\n\r\n      handler.invoke('toolbar.updateCodeview', $toolbar, true);\r\n      handler.invoke('popover.hide', $popover);\r\n      handler.invoke('handle.hide', $handle);\r\n\r\n      $editor.addClass('codeview');\r\n\r\n      $codable.focus();\r\n\r\n      // activate CodeMirror as codable\r\n      if (agent.hasCodeMirror) {\r\n        var cmEditor = CodeMirror.fromTextArea($codable[0], options.codemirror);\r\n\r\n        // CodeMirror TernServer\r\n        if (options.codemirror.tern) {\r\n          var server = new CodeMirror.TernServer(options.codemirror.tern);\r\n          cmEditor.ternServer = server;\r\n          cmEditor.on('cursorActivity', function (cm) {\r\n            server.updateArgHints(cm);\r\n          });\r\n        }\r\n\r\n        // CodeMirror hasn't Padding.\r\n        cmEditor.setSize(null, $editable.outerHeight());\r\n        $codable.data('cmEditor', cmEditor);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * deactivate code view\r\n     *\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.deactivate = function (layoutInfo) {\r\n      var $holder = layoutInfo.holder(),\r\n          $editor = layoutInfo.editor(),\r\n          $toolbar = layoutInfo.toolbar(),\r\n          $editable = layoutInfo.editable(),\r\n          $codable = layoutInfo.codable();\r\n\r\n      var options = $editor.data('options');\r\n\r\n      // deactivate CodeMirror as codable\r\n      if (agent.hasCodeMirror) {\r\n        var cmEditor = $codable.data('cmEditor');\r\n        $codable.val(cmEditor.getValue());\r\n        cmEditor.toTextArea();\r\n      }\r\n\r\n      var value = dom.value($codable, options.prettifyHtml) || dom.emptyPara;\r\n      var isChange = $editable.html() !== value;\r\n\r\n      $editable.html(value);\r\n      $editable.height(options.height ? $codable.height() : 'auto');\r\n      $editor.removeClass('codeview');\r\n\r\n      if (isChange) {\r\n        handler.bindCustomEvent(\r\n          $holder, $editable.data('callbacks'), 'change'\r\n        )($editable.html(), $editable);\r\n      }\r\n\r\n      $editable.focus();\r\n\r\n      handler.invoke('toolbar.updateCodeview', $toolbar, false);\r\n    };\r\n  };\r\n\r\n  var DragAndDrop = function (handler) {\r\n    var $document = $(document);\r\n\r\n    /**\r\n     * attach Drag and Drop Events\r\n     *\r\n     * @param {Object} layoutInfo - layout Informations\r\n     * @param {Object} options\r\n     */\r\n    this.attach = function (layoutInfo, options) {\r\n      if (options.airMode || options.disableDragAndDrop) {\r\n        // prevent default drop event\r\n        $document.on('drop', function (e) {\r\n          e.preventDefault();\r\n        });\r\n      } else {\r\n        this.attachDragAndDropEvent(layoutInfo, options);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * attach Drag and Drop Events\r\n     *\r\n     * @param {Object} layoutInfo - layout Informations\r\n     * @param {Object} options\r\n     */\r\n    this.attachDragAndDropEvent = function (layoutInfo, options) {\r\n      var collection = $(),\r\n          $editor = layoutInfo.editor(),\r\n          $dropzone = layoutInfo.dropzone(),\r\n          $dropzoneMessage = $dropzone.find('.note-dropzone-message');\r\n\r\n      // show dropzone on dragenter when dragging a object to document\r\n      // -but only if the editor is visible, i.e. has a positive width and height\r\n      $document.on('dragenter', function (e) {\r\n        var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);\r\n        var hasEditorSize = $editor.width() > 0 && $editor.height() > 0;\r\n        if (!isCodeview && !collection.length && hasEditorSize) {\r\n          $editor.addClass('dragover');\r\n          $dropzone.width($editor.width());\r\n          $dropzone.height($editor.height());\r\n          $dropzoneMessage.text(options.langInfo.image.dragImageHere);\r\n        }\r\n        collection = collection.add(e.target);\r\n      }).on('dragleave', function (e) {\r\n        collection = collection.not(e.target);\r\n        if (!collection.length) {\r\n          $editor.removeClass('dragover');\r\n        }\r\n      }).on('drop', function () {\r\n        collection = $();\r\n        $editor.removeClass('dragover');\r\n      });\r\n\r\n      // change dropzone's message on hover.\r\n      $dropzone.on('dragenter', function () {\r\n        $dropzone.addClass('hover');\r\n        $dropzoneMessage.text(options.langInfo.image.dropImage);\r\n      }).on('dragleave', function () {\r\n        $dropzone.removeClass('hover');\r\n        $dropzoneMessage.text(options.langInfo.image.dragImageHere);\r\n      });\r\n\r\n      // attach dropImage\r\n      $dropzone.on('drop', function (event) {\r\n\r\n        var dataTransfer = event.originalEvent.dataTransfer;\r\n        var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\r\n\r\n        if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\r\n          event.preventDefault();\r\n          layoutInfo.editable().focus();\r\n          handler.insertImages(layoutInfo, dataTransfer.files);\r\n        } else {\r\n          var insertNodefunc = function () {\r\n            layoutInfo.holder().summernote('insertNode', this);\r\n          };\r\n\r\n          for (var i = 0, len = dataTransfer.types.length; i < len; i++) {\r\n            var type = dataTransfer.types[i];\r\n            var content = dataTransfer.getData(type);\r\n\r\n            if (type.toLowerCase().indexOf('text') > -1) {\r\n              layoutInfo.holder().summernote('pasteHTML', content);\r\n            } else {\r\n              $(content).each(insertNodefunc);\r\n            }\r\n          }\r\n        }\r\n      }).on('dragover', false); // prevent default dragover event\r\n    };\r\n  };\r\n\r\n  var Clipboard = function (handler) {\r\n    var $paste;\r\n\r\n    this.attach = function (layoutInfo) {\r\n      // [workaround] getting image from clipboard\r\n      //  - IE11 and Firefox: CTRL+v hook\r\n      //  - Webkit: event.clipboardData\r\n      if ((agent.isMSIE && agent.browserVersion > 10) || agent.isFF) {\r\n        $paste = $('<div />').attr('contenteditable', true).css({\r\n          position : 'absolute',\r\n          left : -100000,\r\n          opacity : 0\r\n        });\r\n\r\n        layoutInfo.editable().on('keydown', function (e) {\r\n          if (e.ctrlKey && e.keyCode === key.code.V) {\r\n            handler.invoke('saveRange', layoutInfo.editable());\r\n            $paste.focus();\r\n\r\n            setTimeout(function () {\r\n              pasteByHook(layoutInfo);\r\n            }, 0);\r\n          }\r\n        });\r\n\r\n        layoutInfo.editable().before($paste);\r\n      } else {\r\n        layoutInfo.editable().on('paste', pasteByEvent);\r\n      }\r\n    };\r\n\r\n    var pasteByHook = function (layoutInfo) {\r\n      var $editable = layoutInfo.editable();\r\n      var node = $paste[0].firstChild;\r\n\r\n      if (dom.isImg(node)) {\r\n        var dataURI = node.src;\r\n        var decodedData = atob(dataURI.split(',')[1]);\r\n        var array = new Uint8Array(decodedData.length);\r\n        for (var i = 0; i < decodedData.length; i++) {\r\n          array[i] = decodedData.charCodeAt(i);\r\n        }\r\n\r\n        var blob = new Blob([array], { type : 'image/png' });\r\n        blob.name = 'clipboard.png';\r\n\r\n        handler.invoke('restoreRange', $editable);\r\n        handler.invoke('focus', $editable);\r\n        handler.insertImages(layoutInfo, [blob]);\r\n      } else {\r\n        var pasteContent = $('<div />').html($paste.html()).html();\r\n        handler.invoke('restoreRange', $editable);\r\n        handler.invoke('focus', $editable);\r\n\r\n        if (pasteContent) {\r\n          handler.invoke('pasteHTML', $editable, pasteContent);\r\n        }\r\n      }\r\n\r\n      $paste.empty();\r\n    };\r\n\r\n    /**\r\n     * paste by clipboard event\r\n     *\r\n     * @param {Event} event\r\n     */\r\n    var pasteByEvent = function (event) {\r\n      var clipboardData = event.originalEvent.clipboardData;\r\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\r\n      var $editable = layoutInfo.editable();\r\n\r\n      if (clipboardData && clipboardData.items && clipboardData.items.length) {\r\n        var item = list.head(clipboardData.items);\r\n        if (item.kind === 'file' && item.type.indexOf('image/') !== -1) {\r\n          handler.insertImages(layoutInfo, [item.getAsFile()]);\r\n        }\r\n        handler.invoke('editor.afterCommand', $editable);\r\n      }\r\n    };\r\n  };\r\n\r\n  var LinkDialog = function (handler) {\r\n\r\n    /**\r\n     * toggle button status\r\n     *\r\n     * @private\r\n     * @param {jQuery} $btn\r\n     * @param {Boolean} isEnable\r\n     */\r\n    var toggleBtn = function ($btn, isEnable) {\r\n      $btn.toggleClass('disabled', !isEnable);\r\n      $btn.attr('disabled', !isEnable);\r\n    };\r\n\r\n    /**\r\n     * bind enter key\r\n     *\r\n     * @private\r\n     * @param {jQuery} $input\r\n     * @param {jQuery} $btn\r\n     */\r\n    var bindEnterKey = function ($input, $btn) {\r\n      $input.on('keypress', function (event) {\r\n        if (event.keyCode === key.code.ENTER) {\r\n          $btn.trigger('click');\r\n        }\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Show link dialog and set event handlers on dialog controls.\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {jQuery} $dialog\r\n     * @param {Object} linkInfo\r\n     * @return {Promise}\r\n     */\r\n    this.showLinkDialog = function ($editable, $dialog, linkInfo) {\r\n      return $.Deferred(function (deferred) {\r\n        var $linkDialog = $dialog.find('.note-link-dialog');\r\n\r\n        var $linkText = $linkDialog.find('.note-link-text'),\r\n        $linkUrl = $linkDialog.find('.note-link-url'),\r\n        $linkBtn = $linkDialog.find('.note-link-btn'),\r\n        $openInNewWindow = $linkDialog.find('input[type=checkbox]');\r\n\r\n        $linkDialog.one('shown.bs.modal', function () {\r\n          $linkText.val(linkInfo.text);\r\n\r\n          $linkText.on('input', function () {\r\n            toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\r\n            // if linktext was modified by keyup,\r\n            // stop cloning text from linkUrl\r\n            linkInfo.text = $linkText.val();\r\n          });\r\n\r\n          // if no url was given, copy text to url\r\n          if (!linkInfo.url) {\r\n            linkInfo.url = linkInfo.text || 'http://';\r\n            toggleBtn($linkBtn, linkInfo.text);\r\n          }\r\n\r\n          $linkUrl.on('input', function () {\r\n            toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\r\n            // display same link on `Text to display` input\r\n            // when create a new link\r\n            if (!linkInfo.text) {\r\n              $linkText.val($linkUrl.val());\r\n            }\r\n          }).val(linkInfo.url).trigger('focus').trigger('select');\r\n\r\n          bindEnterKey($linkUrl, $linkBtn);\r\n          bindEnterKey($linkText, $linkBtn);\r\n\r\n          $openInNewWindow.prop('checked', linkInfo.isNewWindow);\r\n\r\n          $linkBtn.one('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            deferred.resolve({\r\n              range: linkInfo.range,\r\n              url: $linkUrl.val(),\r\n              text: $linkText.val(),\r\n              isNewWindow: $openInNewWindow.is(':checked')\r\n            });\r\n            $linkDialog.modal('hide');\r\n          });\r\n        }).one('hidden.bs.modal', function () {\r\n          // detach events\r\n          $linkText.off('input keypress');\r\n          $linkUrl.off('input keypress');\r\n          $linkBtn.off('click');\r\n\r\n          if (deferred.state() === 'pending') {\r\n            deferred.reject();\r\n          }\r\n        }).modal('show');\r\n      }).promise();\r\n    };\r\n\r\n    /**\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.show = function (layoutInfo) {\r\n      var $editor = layoutInfo.editor(),\r\n          $dialog = layoutInfo.dialog(),\r\n          $editable = layoutInfo.editable(),\r\n          $popover = layoutInfo.popover(),\r\n          linkInfo = handler.invoke('editor.getLinkInfo', $editable);\r\n\r\n      var options = $editor.data('options');\r\n\r\n      handler.invoke('editor.saveRange', $editable);\r\n      this.showLinkDialog($editable, $dialog, linkInfo).then(function (linkInfo) {\r\n        handler.invoke('editor.restoreRange', $editable);\r\n        handler.invoke('editor.createLink', $editable, linkInfo, options);\r\n        // hide popover after creating link\r\n        handler.invoke('popover.hide', $popover);\r\n      }).fail(function () {\r\n        handler.invoke('editor.restoreRange', $editable);\r\n      });\r\n    };\r\n  };\r\n\r\n  var ImageDialog = function (handler) {\r\n    /**\r\n     * toggle button status\r\n     *\r\n     * @private\r\n     * @param {jQuery} $btn\r\n     * @param {Boolean} isEnable\r\n     */\r\n    var toggleBtn = function ($btn, isEnable) {\r\n      $btn.toggleClass('disabled', !isEnable);\r\n      $btn.attr('disabled', !isEnable);\r\n    };\r\n\r\n    /**\r\n     * bind enter key\r\n     *\r\n     * @private\r\n     * @param {jQuery} $input\r\n     * @param {jQuery} $btn\r\n     */\r\n    var bindEnterKey = function ($input, $btn) {\r\n      $input.on('keypress', function (event) {\r\n        if (event.keyCode === key.code.ENTER) {\r\n          $btn.trigger('click');\r\n        }\r\n      });\r\n    };\r\n\r\n    this.show = function (layoutInfo) {\r\n      var $dialog = layoutInfo.dialog(),\r\n          $editable = layoutInfo.editable();\r\n\r\n      handler.invoke('editor.saveRange', $editable);\r\n      this.showImageDialog($editable, $dialog).then(function (data) {\r\n        handler.invoke('editor.restoreRange', $editable);\r\n\r\n        if (typeof data === 'string') {\r\n          // image url\r\n          handler.invoke('editor.insertImage', $editable, data);\r\n        } else {\r\n          // array of files\r\n          handler.insertImages(layoutInfo, data);\r\n        }\r\n      }).fail(function () {\r\n        handler.invoke('editor.restoreRange', $editable);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * show image dialog\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {jQuery} $dialog\r\n     * @return {Promise}\r\n     */\r\n    this.showImageDialog = function ($editable, $dialog) {\r\n      return $.Deferred(function (deferred) {\r\n        var $imageDialog = $dialog.find('.note-image-dialog');\r\n\r\n        var $imageInput = $dialog.find('.note-image-input'),\r\n            $imageUrl = $dialog.find('.note-image-url'),\r\n            $imageBtn = $dialog.find('.note-image-btn');\r\n\r\n        $imageDialog.one('shown.bs.modal', function () {\r\n          // Cloning imageInput to clear element.\r\n          $imageInput.replaceWith($imageInput.clone()\r\n            .on('change', function () {\r\n              deferred.resolve(this.files || this.value);\r\n              $imageDialog.modal('hide');\r\n            })\r\n            .val('')\r\n          );\r\n\r\n          $imageBtn.click(function (event) {\r\n            event.preventDefault();\r\n\r\n            deferred.resolve($imageUrl.val());\r\n            $imageDialog.modal('hide');\r\n          });\r\n\r\n          $imageUrl.on('keyup paste', function (event) {\r\n            var url;\r\n            \r\n            if (event.type === 'paste') {\r\n              url = event.originalEvent.clipboardData.getData('text');\r\n            } else {\r\n              url = $imageUrl.val();\r\n            }\r\n            \r\n            toggleBtn($imageBtn, url);\r\n          }).val('').trigger('focus');\r\n          bindEnterKey($imageUrl, $imageBtn);\r\n        }).one('hidden.bs.modal', function () {\r\n          $imageInput.off('change');\r\n          $imageUrl.off('keyup paste keypress');\r\n          $imageBtn.off('click');\r\n\r\n          if (deferred.state() === 'pending') {\r\n            deferred.reject();\r\n          }\r\n        }).modal('show');\r\n      });\r\n    };\r\n  };\r\n\r\n  var HelpDialog = function (handler) {\r\n    /**\r\n     * show help dialog\r\n     *\r\n     * @param {jQuery} $editable\r\n     * @param {jQuery} $dialog\r\n     * @return {Promise}\r\n     */\r\n    this.showHelpDialog = function ($editable, $dialog) {\r\n      return $.Deferred(function (deferred) {\r\n        var $helpDialog = $dialog.find('.note-help-dialog');\r\n\r\n        $helpDialog.one('hidden.bs.modal', function () {\r\n          deferred.resolve();\r\n        }).modal('show');\r\n      }).promise();\r\n    };\r\n\r\n    /**\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.show = function (layoutInfo) {\r\n      var $dialog = layoutInfo.dialog(),\r\n          $editable = layoutInfo.editable();\r\n\r\n      handler.invoke('editor.saveRange', $editable, true);\r\n      this.showHelpDialog($editable, $dialog).then(function () {\r\n        handler.invoke('editor.restoreRange', $editable);\r\n      });\r\n    };\r\n  };\r\n\r\n\r\n  /**\r\n   * @class EventHandler\r\n   *\r\n   * EventHandler\r\n   *  - TODO: new instance per a editor\r\n   */\r\n  var EventHandler = function () {\r\n    var self = this;\r\n\r\n    /**\r\n     * Modules\r\n     */\r\n    var modules = this.modules = {\r\n      editor: new Editor(this),\r\n      toolbar: new Toolbar(this),\r\n      statusbar: new Statusbar(this),\r\n      popover: new Popover(this),\r\n      handle: new Handle(this),\r\n      fullscreen: new Fullscreen(this),\r\n      codeview: new Codeview(this),\r\n      dragAndDrop: new DragAndDrop(this),\r\n      clipboard: new Clipboard(this),\r\n      linkDialog: new LinkDialog(this),\r\n      imageDialog: new ImageDialog(this),\r\n      helpDialog: new HelpDialog(this)\r\n    };\r\n\r\n    /**\r\n     * invoke module's method\r\n     *\r\n     * @param {String} moduleAndMethod - ex) 'editor.redo'\r\n     * @param {...*} arguments - arguments of method\r\n     * @return {*}\r\n     */\r\n    this.invoke = function () {\r\n      var moduleAndMethod = list.head(list.from(arguments));\r\n      var args = list.tail(list.from(arguments));\r\n\r\n      var splits = moduleAndMethod.split('.');\r\n      var hasSeparator = splits.length > 1;\r\n      var moduleName = hasSeparator && list.head(splits);\r\n      var methodName = hasSeparator ? list.last(splits) : list.head(splits);\r\n\r\n      var module = this.getModule(moduleName);\r\n      var method = module[methodName];\r\n\r\n      return method && method.apply(module, args);\r\n    };\r\n\r\n    /**\r\n     * returns module\r\n     *\r\n     * @param {String} moduleName - name of module\r\n     * @return {Module} - defaults is editor\r\n     */\r\n    this.getModule = function (moduleName) {\r\n      return this.modules[moduleName] || this.modules.editor;\r\n    };\r\n\r\n    /**\r\n     * @param {jQuery} $holder\r\n     * @param {Object} callbacks\r\n     * @param {String} eventNamespace\r\n     * @returns {Function}\r\n     */\r\n    var bindCustomEvent = this.bindCustomEvent = function ($holder, callbacks, eventNamespace) {\r\n      return function () {\r\n        var callback = callbacks[func.namespaceToCamel(eventNamespace, 'on')];\r\n        if (callback) {\r\n          callback.apply($holder[0], arguments);\r\n        }\r\n        return $holder.trigger('summernote.' + eventNamespace, arguments);\r\n      };\r\n    };\r\n\r\n    /**\r\n     * insert Images from file array.\r\n     *\r\n     * @private\r\n     * @param {Object} layoutInfo\r\n     * @param {File[]} files\r\n     */\r\n    this.insertImages = function (layoutInfo, files) {\r\n      var $editor = layoutInfo.editor(),\r\n          $editable = layoutInfo.editable(),\r\n          $holder = layoutInfo.holder();\r\n\r\n      var callbacks = $editable.data('callbacks');\r\n      var options = $editor.data('options');\r\n\r\n      // If onImageUpload options setted\r\n      if (callbacks.onImageUpload) {\r\n        bindCustomEvent($holder, callbacks, 'image.upload')(files);\r\n      // else insert Image as dataURL\r\n      } else {\r\n        $.each(files, function (idx, file) {\r\n          var filename = file.name;\r\n          if (options.maximumImageFileSize && options.maximumImageFileSize < file.size) {\r\n            bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);\r\n          } else {\r\n            async.readFileAsDataURL(file).then(function (sDataURL) {\r\n              modules.editor.insertImage($editable, sDataURL, filename);\r\n            }).fail(function () {\r\n              bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    var commands = {\r\n      /**\r\n       * @param {Object} layoutInfo\r\n       */\r\n      showLinkDialog: function (layoutInfo) {\r\n        modules.linkDialog.show(layoutInfo);\r\n      },\r\n\r\n      /**\r\n       * @param {Object} layoutInfo\r\n       */\r\n      showImageDialog: function (layoutInfo) {\r\n        modules.imageDialog.show(layoutInfo);\r\n      },\r\n\r\n      /**\r\n       * @param {Object} layoutInfo\r\n       */\r\n      showHelpDialog: function (layoutInfo) {\r\n        modules.helpDialog.show(layoutInfo);\r\n      },\r\n\r\n      /**\r\n       * @param {Object} layoutInfo\r\n       */\r\n      fullscreen: function (layoutInfo) {\r\n        modules.fullscreen.toggle(layoutInfo);\r\n      },\r\n\r\n      /**\r\n       * @param {Object} layoutInfo\r\n       */\r\n      codeview: function (layoutInfo) {\r\n        modules.codeview.toggle(layoutInfo);\r\n      }\r\n    };\r\n\r\n    var hMousedown = function (event) {\r\n      //preventDefault Selection for FF, IE8+\r\n      if (dom.isImg(event.target)) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    var hKeyupAndMouseup = function (event) {\r\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\r\n      modules.editor.removeBogus(layoutInfo.editable());\r\n      hToolbarAndPopoverUpdate(event);\r\n    };\r\n\r\n    /**\r\n     * update sytle info\r\n     * @param {Object} styleInfo\r\n     * @param {Object} layoutInfo\r\n     */\r\n    this.updateStyleInfo = function (styleInfo, layoutInfo) {\r\n      if (!styleInfo) {\r\n        return;\r\n      }\r\n      var isAirMode = layoutInfo.editor().data('options').airMode;\r\n      if (!isAirMode) {\r\n        modules.toolbar.update(layoutInfo.toolbar(), styleInfo);\r\n      }\r\n\r\n      modules.popover.update(layoutInfo.popover(), styleInfo, isAirMode);\r\n      modules.handle.update(layoutInfo.handle(), styleInfo, isAirMode);\r\n    };\r\n\r\n    var hToolbarAndPopoverUpdate = function (event) {\r\n      var target = event.target;\r\n      // delay for range after mouseup\r\n      setTimeout(function () {\r\n        var layoutInfo = dom.makeLayoutInfo(target);\r\n        var styleInfo = modules.editor.currentStyle(target);\r\n        self.updateStyleInfo(styleInfo, layoutInfo);\r\n      }, 0);\r\n    };\r\n\r\n    var hScroll = function (event) {\r\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\r\n      //hide popover and handle when scrolled\r\n      modules.popover.hide(layoutInfo.popover());\r\n      modules.handle.hide(layoutInfo.handle());\r\n    };\r\n\r\n    var hToolbarAndPopoverMousedown = function (event) {\r\n      // prevent default event when insertTable (FF, Webkit)\r\n      var $btn = $(event.target).closest('[data-event]');\r\n      if ($btn.length) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    var hToolbarAndPopoverClick = function (event) {\r\n      var $btn = $(event.target).closest('[data-event]');\r\n\r\n      if (!$btn.length) {\r\n        return;\r\n      }\r\n\r\n      var eventName = $btn.attr('data-event'),\r\n          value = $btn.attr('data-value'),\r\n          hide = $btn.attr('data-hide');\r\n\r\n      var layoutInfo = dom.makeLayoutInfo(event.target);\r\n\r\n      // before command: detect control selection element($target)\r\n      var $target;\r\n      if ($.inArray(eventName, ['resize', 'floatMe', 'removeMedia', 'imageShape']) !== -1) {\r\n        var $selection = layoutInfo.handle().find('.note-control-selection');\r\n        $target = $($selection.data('target'));\r\n      }\r\n\r\n      // If requested, hide the popover when the button is clicked.\r\n      // Useful for things like showHelpDialog.\r\n      if (hide) {\r\n        $btn.parents('.popover').hide();\r\n      }\r\n\r\n      if ($.isFunction($.summernote.pluginEvents[eventName])) {\r\n        $.summernote.pluginEvents[eventName](event, modules.editor, layoutInfo, value);\r\n      } else if (modules.editor[eventName]) { // on command\r\n        var $editable = layoutInfo.editable();\r\n        $editable.focus();\r\n        modules.editor[eventName]($editable, value, $target);\r\n        event.preventDefault();\r\n      } else if (commands[eventName]) {\r\n        commands[eventName].call(this, layoutInfo);\r\n        event.preventDefault();\r\n      }\r\n\r\n      // after command\r\n      if ($.inArray(eventName, ['backColor', 'foreColor']) !== -1) {\r\n        var options = layoutInfo.editor().data('options', options);\r\n        var module = options.airMode ? modules.popover : modules.toolbar;\r\n        module.updateRecentColor(list.head($btn), eventName, value);\r\n      }\r\n\r\n      hToolbarAndPopoverUpdate(event);\r\n    };\r\n\r\n    var PX_PER_EM = 18;\r\n    var hDimensionPickerMove = function (event, options) {\r\n      var $picker = $(event.target.parentNode); // target is mousecatcher\r\n      var $dimensionDisplay = $picker.next();\r\n      var $catcher = $picker.find('.note-dimension-picker-mousecatcher');\r\n      var $highlighted = $picker.find('.note-dimension-picker-highlighted');\r\n      var $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\r\n\r\n      var posOffset;\r\n      // HTML5 with jQuery - e.offsetX is undefined in Firefox\r\n      if (event.offsetX === undefined) {\r\n        var posCatcher = $(event.target).offset();\r\n        posOffset = {\r\n          x: event.pageX - posCatcher.left,\r\n          y: event.pageY - posCatcher.top\r\n        };\r\n      } else {\r\n        posOffset = {\r\n          x: event.offsetX,\r\n          y: event.offsetY\r\n        };\r\n      }\r\n\r\n      var dim = {\r\n        c: Math.ceil(posOffset.x / PX_PER_EM) || 1,\r\n        r: Math.ceil(posOffset.y / PX_PER_EM) || 1\r\n      };\r\n\r\n      $highlighted.css({ width: dim.c + 'em', height: dim.r + 'em' });\r\n      $catcher.attr('data-value', dim.c + 'x' + dim.r);\r\n\r\n      if (3 < dim.c && dim.c < options.insertTableMaxSize.col) {\r\n        $unhighlighted.css({ width: dim.c + 1 + 'em'});\r\n      }\r\n\r\n      if (3 < dim.r && dim.r < options.insertTableMaxSize.row) {\r\n        $unhighlighted.css({ height: dim.r + 1 + 'em'});\r\n      }\r\n\r\n      $dimensionDisplay.html(dim.c + ' x ' + dim.r);\r\n    };\r\n    \r\n    /**\r\n     * bind KeyMap on keydown\r\n     *\r\n     * @param {Object} layoutInfo\r\n     * @param {Object} keyMap\r\n     */\r\n    this.bindKeyMap = function (layoutInfo, keyMap) {\r\n      var $editor = layoutInfo.editor();\r\n      var $editable = layoutInfo.editable();\r\n\r\n      $editable.on('keydown', function (event) {\r\n        var keys = [];\r\n\r\n        // modifier\r\n        if (event.metaKey) { keys.push('CMD'); }\r\n        if (event.ctrlKey && !event.altKey) { keys.push('CTRL'); }\r\n        if (event.shiftKey) { keys.push('SHIFT'); }\r\n\r\n        // keycode\r\n        var keyName = key.nameFromCode[event.keyCode];\r\n        if (keyName) {\r\n          keys.push(keyName);\r\n        }\r\n\r\n        var pluginEvent;\r\n        var keyString = keys.join('+');\r\n        var eventName = keyMap[keyString];\r\n        if (eventName) {\r\n          // FIXME Summernote doesn't support event pipeline yet.\r\n          //  - Plugin -> Base Code\r\n          pluginEvent = $.summernote.pluginEvents[keyString];\r\n          if ($.isFunction(pluginEvent)) {\r\n            if (pluginEvent(event, modules.editor, layoutInfo)) {\r\n              return false;\r\n            }\r\n          }\r\n\r\n          pluginEvent = $.summernote.pluginEvents[eventName];\r\n\r\n          if ($.isFunction(pluginEvent)) {\r\n            pluginEvent(event, modules.editor, layoutInfo);\r\n          } else if (modules.editor[eventName]) {\r\n            modules.editor[eventName]($editable, $editor.data('options'));\r\n            event.preventDefault();\r\n          } else if (commands[eventName]) {\r\n            commands[eventName].call(this, layoutInfo);\r\n            event.preventDefault();\r\n          }\r\n        } else if (key.isEdit(event.keyCode)) {\r\n          modules.editor.afterCommand($editable);\r\n        }\r\n      });\r\n    };\r\n\r\n    /**\r\n     * attach eventhandler\r\n     *\r\n     * @param {Object} layoutInfo - layout Informations\r\n     * @param {Object} options - user options include custom event handlers\r\n     */\r\n    this.attach = function (layoutInfo, options) {\r\n      // handlers for editable\r\n      if (options.shortcuts) {\r\n        this.bindKeyMap(layoutInfo, options.keyMap[agent.isMac ? 'mac' : 'pc']);\r\n      }\r\n      layoutInfo.editable().on('mousedown', hMousedown);\r\n      layoutInfo.editable().on('keyup mouseup', hKeyupAndMouseup);\r\n      layoutInfo.editable().on('scroll', hScroll);\r\n\r\n      // handler for clipboard\r\n      modules.clipboard.attach(layoutInfo, options);\r\n\r\n      // handler for handle and popover\r\n      modules.handle.attach(layoutInfo, options);\r\n      layoutInfo.popover().on('click', hToolbarAndPopoverClick);\r\n      layoutInfo.popover().on('mousedown', hToolbarAndPopoverMousedown);\r\n\r\n      // handler for drag and drop\r\n      modules.dragAndDrop.attach(layoutInfo, options);\r\n\r\n      // handlers for frame mode (toolbar, statusbar)\r\n      if (!options.airMode) {\r\n        // handler for toolbar\r\n        layoutInfo.toolbar().on('click', hToolbarAndPopoverClick);\r\n        layoutInfo.toolbar().on('mousedown', hToolbarAndPopoverMousedown);\r\n\r\n        // handler for statusbar\r\n        modules.statusbar.attach(layoutInfo, options);\r\n      }\r\n\r\n      // handler for table dimension\r\n      var $catcherContainer = options.airMode ? layoutInfo.popover() :\r\n                                                layoutInfo.toolbar();\r\n      var $catcher = $catcherContainer.find('.note-dimension-picker-mousecatcher');\r\n      $catcher.css({\r\n        width: options.insertTableMaxSize.col + 'em',\r\n        height: options.insertTableMaxSize.row + 'em'\r\n      }).on('mousemove', function (event) {\r\n        hDimensionPickerMove(event, options);\r\n      });\r\n\r\n      // save options on editor\r\n      layoutInfo.editor().data('options', options);\r\n\r\n      // ret styleWithCSS for backColor / foreColor clearing with 'inherit'.\r\n      if (!agent.isMSIE) {\r\n        // [workaround] for Firefox\r\n        //  - protect FF Error: NS_ERROR_FAILURE: Failure\r\n        setTimeout(function () {\r\n          document.execCommand('styleWithCSS', 0, options.styleWithSpan);\r\n        }, 0);\r\n      }\r\n\r\n      // History\r\n      var history = new History(layoutInfo.editable());\r\n      layoutInfo.editable().data('NoteHistory', history);\r\n\r\n      // All editor status will be saved on editable with jquery's data\r\n      // for support multiple editor with singleton object.\r\n      layoutInfo.editable().data('callbacks', {\r\n        onInit: options.onInit,\r\n        onFocus: options.onFocus,\r\n        onBlur: options.onBlur,\r\n        onKeydown: options.onKeydown,\r\n        onKeyup: options.onKeyup,\r\n        onMousedown: options.onMousedown,\r\n        onEnter: options.onEnter,\r\n        onPaste: options.onPaste,\r\n        onBeforeCommand: options.onBeforeCommand,\r\n        onChange: options.onChange,\r\n        onImageUpload: options.onImageUpload,\r\n        onImageUploadError: options.onImageUploadError,\r\n        onMediaDelete: options.onMediaDelete,\r\n        onToolbarClick: options.onToolbarClick\r\n      });\r\n\r\n      var styleInfo = modules.editor.styleFromNode(layoutInfo.editable());\r\n      this.updateStyleInfo(styleInfo, layoutInfo);\r\n    };\r\n\r\n    /**\r\n     * attach jquery custom event\r\n     *\r\n     * @param {Object} layoutInfo - layout Informations\r\n     */\r\n    this.attachCustomEvent = function (layoutInfo, options) {\r\n      var $holder = layoutInfo.holder();\r\n      var $editable = layoutInfo.editable();\r\n      var callbacks = $editable.data('callbacks');\r\n\r\n      $editable.focus(bindCustomEvent($holder, callbacks, 'focus'));\r\n      $editable.blur(bindCustomEvent($holder, callbacks, 'blur'));\r\n\r\n      $editable.keydown(function (event) {\r\n        if (event.keyCode === key.code.ENTER) {\r\n          bindCustomEvent($holder, callbacks, 'enter').call(this, event);\r\n        }\r\n        bindCustomEvent($holder, callbacks, 'keydown').call(this, event);\r\n      });\r\n      $editable.keyup(bindCustomEvent($holder, callbacks, 'keyup'));\r\n\r\n      $editable.on('mousedown', bindCustomEvent($holder, callbacks, 'mousedown'));\r\n      $editable.on('mouseup', bindCustomEvent($holder, callbacks, 'mouseup'));\r\n      $editable.on('scroll', bindCustomEvent($holder, callbacks, 'scroll'));\r\n\r\n      $editable.on('paste', bindCustomEvent($holder, callbacks, 'paste'));\r\n      \r\n      // [workaround] IE doesn't have input events for contentEditable\r\n      //  - see: https://goo.gl/4bfIvA\r\n      var changeEventName = agent.isMSIE ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';\r\n      $editable.on(changeEventName, function () {\r\n        bindCustomEvent($holder, callbacks, 'change')($editable.html(), $editable);\r\n      });\r\n\r\n      if (!options.airMode) {\r\n        layoutInfo.toolbar().click(bindCustomEvent($holder, callbacks, 'toolbar.click'));\r\n        layoutInfo.popover().click(bindCustomEvent($holder, callbacks, 'popover.click'));\r\n      }\r\n\r\n      // Textarea: auto filling the code before form submit.\r\n      if (dom.isTextarea(list.head($holder))) {\r\n        $holder.closest('form').submit(function (e) {\r\n          layoutInfo.holder().val(layoutInfo.holder().code());\r\n          bindCustomEvent($holder, callbacks, 'submit').call(this, e, $holder.code());\r\n        });\r\n      }\r\n\r\n      // textarea auto sync\r\n      if (dom.isTextarea(list.head($holder)) && options.textareaAutoSync) {\r\n        $holder.on('summernote.change', function () {\r\n          layoutInfo.holder().val(layoutInfo.holder().code());\r\n        });\r\n      }\r\n\r\n      // fire init event\r\n      bindCustomEvent($holder, callbacks, 'init')(layoutInfo);\r\n\r\n      // fire plugin init event\r\n      for (var i = 0, len = $.summernote.plugins.length; i < len; i++) {\r\n        if ($.isFunction($.summernote.plugins[i].init)) {\r\n          $.summernote.plugins[i].init(layoutInfo);\r\n        }\r\n      }\r\n    };\r\n      \r\n    this.detach = function (layoutInfo, options) {\r\n      layoutInfo.holder().off();\r\n      layoutInfo.editable().off();\r\n\r\n      layoutInfo.popover().off();\r\n      layoutInfo.handle().off();\r\n      layoutInfo.dialog().off();\r\n\r\n      if (!options.airMode) {\r\n        layoutInfo.dropzone().off();\r\n        layoutInfo.toolbar().off();\r\n        layoutInfo.statusbar().off();\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @class Renderer\r\n   *\r\n   * renderer\r\n   *\r\n   * rendering toolbar and editable\r\n   */\r\n  var Renderer = function () {\r\n\r\n    /**\r\n     * bootstrap button template\r\n     * @private\r\n     * @param {String} label button name\r\n     * @param {Object} [options] button options\r\n     * @param {String} [options.event] data-event\r\n     * @param {String} [options.className] button's class name\r\n     * @param {String} [options.value] data-value\r\n     * @param {String} [options.title] button's title for popup\r\n     * @param {String} [options.dropdown] dropdown html\r\n     * @param {String} [options.hide] data-hide\r\n     */\r\n    var tplButton = function (label, options) {\r\n      var event = options.event;\r\n      var value = options.value;\r\n      var title = options.title;\r\n      var className = options.className;\r\n      var dropdown = options.dropdown;\r\n      var hide = options.hide;\r\n\r\n      return (dropdown ? '<div class=\"btn-group' +\r\n               (className ? ' ' + className : '') + '\">' : '') +\r\n               '<button type=\"button\"' +\r\n                 ' class=\"btn btn-default btn-sm' +\r\n                   ((!dropdown && className) ? ' ' + className : '') +\r\n                   (dropdown ? ' dropdown-toggle' : '') +\r\n                 '\"' +\r\n                 (dropdown ? ' data-toggle=\"dropdown\"' : '') +\r\n                 (title ? ' title=\"' + title + '\"' : '') +\r\n                 (event ? ' data-event=\"' + event + '\"' : '') +\r\n                 (value ? ' data-value=\\'' + value + '\\'' : '') +\r\n                 (hide ? ' data-hide=\\'' + hide + '\\'' : '') +\r\n                 ' tabindex=\"-1\">' +\r\n                 label +\r\n                 (dropdown ? ' <span class=\"caret\"></span>' : '') +\r\n               '</button>' +\r\n               (dropdown || '') +\r\n             (dropdown ? '</div>' : '');\r\n    };\r\n\r\n    /**\r\n     * bootstrap icon button template\r\n     * @private\r\n     * @param {String} iconClassName\r\n     * @param {Object} [options]\r\n     * @param {String} [options.event]\r\n     * @param {String} [options.value]\r\n     * @param {String} [options.title]\r\n     * @param {String} [options.dropdown]\r\n     */\r\n    var tplIconButton = function (iconClassName, options) {\r\n      var label = '<i class=\"' + iconClassName + '\"></i>';\r\n      return tplButton(label, options);\r\n    };\r\n\r\n    /**\r\n     * bootstrap popover template\r\n     * @private\r\n     * @param {String} className\r\n     * @param {String} content\r\n     */\r\n    var tplPopover = function (className, content) {\r\n      var $popover = $('<div class=\"' + className + ' popover bottom in\" style=\"display: none;\">' +\r\n               '<div class=\"arrow\"></div>' +\r\n               '<div class=\"popover-content\">' +\r\n               '</div>' +\r\n             '</div>');\r\n\r\n      $popover.find('.popover-content').append(content);\r\n      return $popover;\r\n    };\r\n\r\n    /**\r\n     * bootstrap dialog template\r\n     *\r\n     * @param {String} className\r\n     * @param {String} [title='']\r\n     * @param {String} body\r\n     * @param {String} [footer='']\r\n     */\r\n    var tplDialog = function (className, title, body, footer) {\r\n      return '<div class=\"' + className + ' modal\" aria-hidden=\"false\">' +\r\n               '<div class=\"modal-dialog\">' +\r\n                 '<div class=\"modal-content\">' +\r\n                   (title ?\r\n                   '<div class=\"modal-header\">' +\r\n                     '<button type=\"button\" class=\"close\" aria-hidden=\"true\" tabindex=\"-1\">&times;</button>' +\r\n                     '<h4 class=\"modal-title\">' + title + '</h4>' +\r\n                   '</div>' : ''\r\n                   ) +\r\n                   '<div class=\"modal-body\">' + body + '</div>' +\r\n                   (footer ?\r\n                   '<div class=\"modal-footer\">' + footer + '</div>' : ''\r\n                   ) +\r\n                 '</div>' +\r\n               '</div>' +\r\n             '</div>';\r\n    };\r\n\r\n    /**\r\n     * bootstrap dropdown template\r\n     *\r\n     * @param {String|String[]} contents\r\n     * @param {String} [className='']\r\n     * @param {String} [nodeName='']\r\n     */\r\n    var tplDropdown = function (contents, className, nodeName) {\r\n      var classes = 'dropdown-menu' + (className ? ' ' + className : '');\r\n      nodeName = nodeName || 'ul';\r\n      if (contents instanceof Array) {\r\n        contents = contents.join('');\r\n      }\r\n\r\n      return '<' + nodeName + ' class=\"' + classes + '\">' + contents + '</' + nodeName + '>';\r\n    };\r\n\r\n    var tplButtonInfo = {\r\n      picture: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.image.image, {\r\n          event: 'showImageDialog',\r\n          title: lang.image.image,\r\n          hide: true\r\n        });\r\n      },\r\n      link: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.link.link, {\r\n          event: 'showLinkDialog',\r\n          title: lang.link.link,\r\n          hide: true\r\n        });\r\n      },\r\n      table: function (lang, options) {\r\n        var dropdown = [\r\n          '<div class=\"note-dimension-picker\">',\r\n          '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>',\r\n          '<div class=\"note-dimension-picker-highlighted\"></div>',\r\n          '<div class=\"note-dimension-picker-unhighlighted\"></div>',\r\n          '</div>',\r\n          '<div class=\"note-dimension-display\"> 1 x 1 </div>'\r\n        ];\r\n\r\n        return tplIconButton(options.iconPrefix + options.icons.table.table, {\r\n          title: lang.table.table,\r\n          dropdown: tplDropdown(dropdown, 'note-table')\r\n        });\r\n      },\r\n      style: function (lang, options) {\r\n        var items = options.styleTags.reduce(function (memo, v) {\r\n          var label = lang.style[v === 'p' ? 'normal' : v];\r\n          return memo + '<li><a data-event=\"formatBlock\" href=\"#\" data-value=\"' + v + '\">' +\r\n                   (\r\n                     (v === 'p' || v === 'pre') ? label :\r\n                     '<' + v + '>' + label + '</' + v + '>'\r\n                   ) +\r\n                 '</a></li>';\r\n        }, '');\r\n\r\n        return tplIconButton(options.iconPrefix + options.icons.style.style, {\r\n          title: lang.style.style,\r\n          dropdown: tplDropdown(items)\r\n        });\r\n      },\r\n      fontname: function (lang, options) {\r\n        var realFontList = [];\r\n        var items = options.fontNames.reduce(function (memo, v) {\r\n          if (!agent.isFontInstalled(v) && !list.contains(options.fontNamesIgnoreCheck, v)) {\r\n            return memo;\r\n          }\r\n          realFontList.push(v);\r\n          return memo + '<li><a data-event=\"fontName\" href=\"#\" data-value=\"' + v + '\" style=\"font-family:\\'' + v + '\\'\">' +\r\n                          '<i class=\"' + options.iconPrefix + options.icons.misc.check + '\"></i> ' + v +\r\n                        '</a></li>';\r\n        }, '');\r\n\r\n        var hasDefaultFont = agent.isFontInstalled(options.defaultFontName);\r\n        var defaultFontName = (hasDefaultFont) ? options.defaultFontName : realFontList[0];\r\n\r\n        var label = '<span class=\"note-current-fontname\">' +\r\n                        defaultFontName +\r\n                     '</span>';\r\n        return tplButton(label, {\r\n          title: lang.font.name,\r\n          className: 'note-fontname',\r\n          dropdown: tplDropdown(items, 'note-check')\r\n        });\r\n      },\r\n      fontsize: function (lang, options) {\r\n        var items = options.fontSizes.reduce(function (memo, v) {\r\n          return memo + '<li><a data-event=\"fontSize\" href=\"#\" data-value=\"' + v + '\">' +\r\n                          '<i class=\"' + options.iconPrefix + options.icons.misc.check + '\"></i> ' + v +\r\n                        '</a></li>';\r\n        }, '');\r\n\r\n        var label = '<span class=\"note-current-fontsize\">11</span>';\r\n        return tplButton(label, {\r\n          title: lang.font.size,\r\n          className: 'note-fontsize',\r\n          dropdown: tplDropdown(items, 'note-check')\r\n        });\r\n      },\r\n      color: function (lang, options) {\r\n        var colorButtonLabel = '<i class=\"' +\r\n                                  options.iconPrefix + options.icons.color.recent +\r\n                                '\" style=\"color:black;background-color:yellow;\"></i>';\r\n\r\n        var colorButton = tplButton(colorButtonLabel, {\r\n          className: 'note-recent-color',\r\n          title: lang.color.recent,\r\n          event: 'color',\r\n          value: '{\"backColor\":\"yellow\"}'\r\n        });\r\n\r\n        var items = [\r\n          '<li><div class=\"btn-group\">',\r\n          '<div class=\"note-palette-title\">' + lang.color.background + '</div>',\r\n          '<div class=\"note-color-reset\" data-event=\"backColor\"',\r\n          ' data-value=\"inherit\" title=\"' + lang.color.transparent + '\">' + lang.color.setTransparent + '</div>',\r\n          '<div class=\"note-color-palette\" data-target-event=\"backColor\"></div>',\r\n          '</div><div class=\"btn-group\">',\r\n          '<div class=\"note-palette-title\">' + lang.color.foreground + '</div>',\r\n          '<div class=\"note-color-reset\" data-event=\"foreColor\" data-value=\"inherit\" title=\"' + lang.color.reset + '\">',\r\n          lang.color.resetToDefault,\r\n          '</div>',\r\n          '<div class=\"note-color-palette\" data-target-event=\"foreColor\"></div>',\r\n          '</div></li>'\r\n        ];\r\n\r\n        var moreButton = tplButton('', {\r\n          title: lang.color.more,\r\n          dropdown: tplDropdown(items)\r\n        });\r\n\r\n        return colorButton + moreButton;\r\n      },\r\n      bold: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.bold, {\r\n          event: 'bold',\r\n          title: lang.font.bold\r\n        });\r\n      },\r\n      italic: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.italic, {\r\n          event: 'italic',\r\n          title: lang.font.italic\r\n        });\r\n      },\r\n      underline: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.underline, {\r\n          event: 'underline',\r\n          title: lang.font.underline\r\n        });\r\n      },\r\n      strikethrough: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.strikethrough, {\r\n          event: 'strikethrough',\r\n          title: lang.font.strikethrough\r\n        });\r\n      },\r\n      superscript: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.superscript, {\r\n          event: 'superscript',\r\n          title: lang.font.superscript\r\n        });\r\n      },\r\n      subscript: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.subscript, {\r\n          event: 'subscript',\r\n          title: lang.font.subscript\r\n        });\r\n      },\r\n      clear: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.font.clear, {\r\n          event: 'removeFormat',\r\n          title: lang.font.clear\r\n        });\r\n      },\r\n      ul: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.lists.unordered, {\r\n          event: 'insertUnorderedList',\r\n          title: lang.lists.unordered\r\n        });\r\n      },\r\n      ol: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.lists.ordered, {\r\n          event: 'insertOrderedList',\r\n          title: lang.lists.ordered\r\n        });\r\n      },\r\n      paragraph: function (lang, options) {\r\n        var leftButton = tplIconButton(options.iconPrefix + options.icons.paragraph.left, {\r\n          title: lang.paragraph.left,\r\n          event: 'justifyLeft'\r\n        });\r\n        var centerButton = tplIconButton(options.iconPrefix + options.icons.paragraph.center, {\r\n          title: lang.paragraph.center,\r\n          event: 'justifyCenter'\r\n        });\r\n        var rightButton = tplIconButton(options.iconPrefix + options.icons.paragraph.right, {\r\n          title: lang.paragraph.right,\r\n          event: 'justifyRight'\r\n        });\r\n        var justifyButton = tplIconButton(options.iconPrefix + options.icons.paragraph.justify, {\r\n          title: lang.paragraph.justify,\r\n          event: 'justifyFull'\r\n        });\r\n\r\n        var outdentButton = tplIconButton(options.iconPrefix + options.icons.paragraph.outdent, {\r\n          title: lang.paragraph.outdent,\r\n          event: 'outdent'\r\n        });\r\n        var indentButton = tplIconButton(options.iconPrefix + options.icons.paragraph.indent, {\r\n          title: lang.paragraph.indent,\r\n          event: 'indent'\r\n        });\r\n\r\n        var dropdown = [\r\n          '<div class=\"note-align btn-group\">',\r\n          leftButton + centerButton + rightButton + justifyButton,\r\n          '</div><div class=\"note-list btn-group\">',\r\n          indentButton + outdentButton,\r\n          '</div>'\r\n        ];\r\n\r\n        return tplIconButton(options.iconPrefix + options.icons.paragraph.paragraph, {\r\n          title: lang.paragraph.paragraph,\r\n          dropdown: tplDropdown(dropdown, '', 'div')\r\n        });\r\n      },\r\n      height: function (lang, options) {\r\n        var items = options.lineHeights.reduce(function (memo, v) {\r\n          return memo + '<li><a data-event=\"lineHeight\" href=\"#\" data-value=\"' + parseFloat(v) + '\">' +\r\n                          '<i class=\"' + options.iconPrefix + options.icons.misc.check + '\"></i> ' + v +\r\n                        '</a></li>';\r\n        }, '');\r\n\r\n        return tplIconButton(options.iconPrefix + options.icons.font.height, {\r\n          title: lang.font.height,\r\n          dropdown: tplDropdown(items, 'note-check')\r\n        });\r\n\r\n      },\r\n      help: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.options.help, {\r\n          event: 'showHelpDialog',\r\n          title: lang.options.help,\r\n          hide: true\r\n        });\r\n      },\r\n      fullscreen: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.options.fullscreen, {\r\n          event: 'fullscreen',\r\n          title: lang.options.fullscreen\r\n        });\r\n      },\r\n      codeview: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.options.codeview, {\r\n          event: 'codeview',\r\n          title: lang.options.codeview\r\n        });\r\n      },\r\n      undo: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.history.undo, {\r\n          event: 'undo',\r\n          title: lang.history.undo\r\n        });\r\n      },\r\n      redo: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.history.redo, {\r\n          event: 'redo',\r\n          title: lang.history.redo\r\n        });\r\n      },\r\n      hr: function (lang, options) {\r\n        return tplIconButton(options.iconPrefix + options.icons.hr.insert, {\r\n          event: 'insertHorizontalRule',\r\n          title: lang.hr.insert\r\n        });\r\n      }\r\n    };\r\n\r\n    var tplPopovers = function (lang, options) {\r\n      var tplLinkPopover = function () {\r\n        var linkButton = tplIconButton(options.iconPrefix + options.icons.link.edit, {\r\n          title: lang.link.edit,\r\n          event: 'showLinkDialog',\r\n          hide: true\r\n        });\r\n        var unlinkButton = tplIconButton(options.iconPrefix + options.icons.link.unlink, {\r\n          title: lang.link.unlink,\r\n          event: 'unlink'\r\n        });\r\n        var content = '<a href=\"http://www.google.com\" target=\"_blank\">www.google.com</a>&nbsp;&nbsp;' +\r\n                      '<div class=\"note-insert btn-group\">' +\r\n                        linkButton + unlinkButton +\r\n                      '</div>';\r\n        return tplPopover('note-link-popover', content);\r\n      };\r\n\r\n      var tplImagePopover = function () {\r\n        var fullButton = tplButton('<span class=\"note-fontsize-10\">100%</span>', {\r\n          title: lang.image.resizeFull,\r\n          event: 'resize',\r\n          value: '1'\r\n        });\r\n        var halfButton = tplButton('<span class=\"note-fontsize-10\">50%</span>', {\r\n          title: lang.image.resizeHalf,\r\n          event: 'resize',\r\n          value: '0.5'\r\n        });\r\n        var quarterButton = tplButton('<span class=\"note-fontsize-10\">25%</span>', {\r\n          title: lang.image.resizeQuarter,\r\n          event: 'resize',\r\n          value: '0.25'\r\n        });\r\n\r\n        var leftButton = tplIconButton(options.iconPrefix + options.icons.image.floatLeft, {\r\n          title: lang.image.floatLeft,\r\n          event: 'floatMe',\r\n          value: 'left'\r\n        });\r\n        var rightButton = tplIconButton(options.iconPrefix + options.icons.image.floatRight, {\r\n          title: lang.image.floatRight,\r\n          event: 'floatMe',\r\n          value: 'right'\r\n        });\r\n        var justifyButton = tplIconButton(options.iconPrefix + options.icons.image.floatNone, {\r\n          title: lang.image.floatNone,\r\n          event: 'floatMe',\r\n          value: 'none'\r\n        });\r\n        var roundedButton = tplIconButton(options.iconPrefix + options.icons.image.shapeRounded, {\r\n          title: lang.image.shapeRounded,\r\n          event: 'imageShape',\r\n          value: 'img-rounded'\r\n        });\r\n        var circleButton = tplIconButton(options.iconPrefix + options.icons.image.shapeCircle, {\r\n          title: lang.image.shapeCircle,\r\n          event: 'imageShape',\r\n          value: 'img-circle'\r\n        });\r\n        var thumbnailButton = tplIconButton(options.iconPrefix + options.icons.image.shapeThumbnail, {\r\n          title: lang.image.shapeThumbnail,\r\n          event: 'imageShape',\r\n          value: 'img-thumbnail'\r\n        });\r\n        var noneButton = tplIconButton(options.iconPrefix + options.icons.image.shapeNone, {\r\n          title: lang.image.shapeNone,\r\n          event: 'imageShape',\r\n          value: 'none'\r\n        });\r\n\r\n        var removeButton = tplIconButton(options.iconPrefix + options.icons.image.remove, {\r\n          title: lang.image.remove,\r\n          event: 'removeMedia',\r\n          value: 'none'\r\n        });\r\n\r\n        var content = (options.disableResizeImage ? '' : '<div class=\"btn-group\">' + fullButton + halfButton + quarterButton + '</div>') +\r\n                      '<div class=\"btn-group\">' + leftButton + rightButton + justifyButton + '</div><br>' +\r\n                      '<div class=\"btn-group\">' + roundedButton + circleButton + thumbnailButton + noneButton + '</div>' +\r\n                      '<div class=\"btn-group\">' + removeButton + '</div>';\r\n        return tplPopover('note-image-popover', content);\r\n      };\r\n\r\n      var tplAirPopover = function () {\r\n        var $content = $('<div />');\r\n        for (var idx = 0, len = options.airPopover.length; idx < len; idx ++) {\r\n          var group = options.airPopover[idx];\r\n\r\n          var $group = $('<div class=\"note-' + group[0] + ' btn-group\">');\r\n          for (var i = 0, lenGroup = group[1].length; i < lenGroup; i++) {\r\n            var $button = $(tplButtonInfo[group[1][i]](lang, options));\r\n\r\n            $button.attr('data-name', group[1][i]);\r\n\r\n            $group.append($button);\r\n          }\r\n          $content.append($group);\r\n        }\r\n\r\n        return tplPopover('note-air-popover', $content.children());\r\n      };\r\n\r\n      var $notePopover = $('<div class=\"note-popover\" />');\r\n\r\n      $notePopover.append(tplLinkPopover());\r\n      $notePopover.append(tplImagePopover());\r\n\r\n      if (options.airMode) {\r\n        $notePopover.append(tplAirPopover());\r\n      }\r\n\r\n      return $notePopover;\r\n    };\r\n\r\n    var tplHandles = function (options) {\r\n      return '<div class=\"note-handle\">' +\r\n               '<div class=\"note-control-selection\">' +\r\n                 '<div class=\"note-control-selection-bg\"></div>' +\r\n                 '<div class=\"note-control-holder note-control-nw\"></div>' +\r\n                 '<div class=\"note-control-holder note-control-ne\"></div>' +\r\n                 '<div class=\"note-control-holder note-control-sw\"></div>' +\r\n                 '<div class=\"' +\r\n                 (options.disableResizeImage ? 'note-control-holder' : 'note-control-sizing') +\r\n                 ' note-control-se\"></div>' +\r\n                 (options.disableResizeImage ? '' : '<div class=\"note-control-selection-info\"></div>') +\r\n               '</div>' +\r\n             '</div>';\r\n    };\r\n\r\n    /**\r\n     * shortcut table template\r\n     * @param {String} title\r\n     * @param {String} body\r\n     */\r\n    var tplShortcut = function (title, keys) {\r\n      var keyClass = 'note-shortcut-col col-xs-6 note-shortcut-';\r\n      var body = [];\r\n\r\n      for (var i in keys) {\r\n        if (keys.hasOwnProperty(i)) {\r\n          body.push(\r\n            '<div class=\"' + keyClass + 'key\">' + keys[i].kbd + '</div>' +\r\n            '<div class=\"' + keyClass + 'name\">' + keys[i].text + '</div>'\r\n            );\r\n        }\r\n      }\r\n\r\n      return '<div class=\"note-shortcut-row row\"><div class=\"' + keyClass + 'title col-xs-offset-6\">' + title + '</div></div>' +\r\n             '<div class=\"note-shortcut-row row\">' + body.join('</div><div class=\"note-shortcut-row row\">') + '</div>';\r\n    };\r\n\r\n    var tplShortcutText = function (lang) {\r\n      var keys = [\r\n        { kbd: '⌘ + B', text: lang.font.bold },\r\n        { kbd: '⌘ + I', text: lang.font.italic },\r\n        { kbd: '⌘ + U', text: lang.font.underline },\r\n        { kbd: '⌘ + \\\\', text: lang.font.clear }\r\n      ];\r\n\r\n      return tplShortcut(lang.shortcut.textFormatting, keys);\r\n    };\r\n\r\n    var tplShortcutAction = function (lang) {\r\n      var keys = [\r\n        { kbd: '⌘ + Z', text: lang.history.undo },\r\n        { kbd: '⌘ + ⇧ + Z', text: lang.history.redo },\r\n        { kbd: '⌘ + ]', text: lang.paragraph.indent },\r\n        { kbd: '⌘ + [', text: lang.paragraph.outdent },\r\n        { kbd: '⌘ + ENTER', text: lang.hr.insert }\r\n      ];\r\n\r\n      return tplShortcut(lang.shortcut.action, keys);\r\n    };\r\n\r\n    var tplShortcutPara = function (lang) {\r\n      var keys = [\r\n        { kbd: '⌘ + ⇧ + L', text: lang.paragraph.left },\r\n        { kbd: '⌘ + ⇧ + E', text: lang.paragraph.center },\r\n        { kbd: '⌘ + ⇧ + R', text: lang.paragraph.right },\r\n        { kbd: '⌘ + ⇧ + J', text: lang.paragraph.justify },\r\n        { kbd: '⌘ + ⇧ + NUM7', text: lang.lists.ordered },\r\n        { kbd: '⌘ + ⇧ + NUM8', text: lang.lists.unordered }\r\n      ];\r\n\r\n      return tplShortcut(lang.shortcut.paragraphFormatting, keys);\r\n    };\r\n\r\n    var tplShortcutStyle = function (lang) {\r\n      var keys = [\r\n        { kbd: '⌘ + NUM0', text: lang.style.normal },\r\n        { kbd: '⌘ + NUM1', text: lang.style.h1 },\r\n        { kbd: '⌘ + NUM2', text: lang.style.h2 },\r\n        { kbd: '⌘ + NUM3', text: lang.style.h3 },\r\n        { kbd: '⌘ + NUM4', text: lang.style.h4 },\r\n        { kbd: '⌘ + NUM5', text: lang.style.h5 },\r\n        { kbd: '⌘ + NUM6', text: lang.style.h6 }\r\n      ];\r\n\r\n      return tplShortcut(lang.shortcut.documentStyle, keys);\r\n    };\r\n\r\n    var tplExtraShortcuts = function (lang, options) {\r\n      var extraKeys = options.extraKeys;\r\n      var keys = [];\r\n\r\n      for (var key in extraKeys) {\r\n        if (extraKeys.hasOwnProperty(key)) {\r\n          keys.push({ kbd: key, text: extraKeys[key] });\r\n        }\r\n      }\r\n\r\n      return tplShortcut(lang.shortcut.extraKeys, keys);\r\n    };\r\n\r\n    var tplShortcutTable = function (lang, options) {\r\n      var colClass = 'class=\"note-shortcut note-shortcut-col col-sm-6 col-xs-12\"';\r\n      var template = [\r\n        '<div ' + colClass + '>' + tplShortcutAction(lang, options) + '</div>' +\r\n        '<div ' + colClass + '>' + tplShortcutText(lang, options) + '</div>',\r\n        '<div ' + colClass + '>' + tplShortcutStyle(lang, options) + '</div>' +\r\n        '<div ' + colClass + '>' + tplShortcutPara(lang, options) + '</div>'\r\n      ];\r\n\r\n      if (options.extraKeys) {\r\n        template.push('<div ' + colClass + '>' + tplExtraShortcuts(lang, options) + '</div>');\r\n      }\r\n\r\n      return '<div class=\"note-shortcut-row row\">' +\r\n               template.join('</div><div class=\"note-shortcut-row row\">') +\r\n             '</div>';\r\n    };\r\n\r\n    var replaceMacKeys = function (sHtml) {\r\n      return sHtml.replace(/⌘/g, 'Ctrl').replace(/⇧/g, 'Shift');\r\n    };\r\n\r\n    var tplDialogInfo = {\r\n      image: function (lang, options) {\r\n        var imageLimitation = '';\r\n        if (options.maximumImageFileSize) {\r\n          var unit = Math.floor(Math.log(options.maximumImageFileSize) / Math.log(1024));\r\n          var readableSize = (options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 +\r\n                             ' ' + ' KMGTP'[unit] + 'B';\r\n          imageLimitation = '<small>' + lang.image.maximumFileSize + ' : ' + readableSize + '</small>';\r\n        }\r\n\r\n        var body = '<div class=\"form-group row note-group-select-from-files\">' +\r\n                     '<label>' + lang.image.selectFromFiles + '</label>' +\r\n                     '<input class=\"note-image-input form-control\" type=\"file\" name=\"files\" accept=\"image/*\" multiple=\"multiple\" />' +\r\n                     imageLimitation +\r\n                   '</div>' +\r\n                   '<div class=\"form-group row\">' +\r\n                     '<label>' + lang.image.url + '</label>' +\r\n                     '<input class=\"note-image-url form-control col-md-12\" type=\"text\" />' +\r\n                   '</div>';\r\n        var footer = '<button href=\"#\" class=\"btn btn-primary note-image-btn disabled\" disabled>' + lang.image.insert + '</button>';\r\n        return tplDialog('note-image-dialog', lang.image.insert, body, footer);\r\n      },\r\n\r\n      link: function (lang, options) {\r\n        var body = '<div class=\"form-group row\">' +\r\n                     '<label>' + lang.link.textToDisplay + '</label>' +\r\n                     '<input class=\"note-link-text form-control col-md-12\" type=\"text\" />' +\r\n                   '</div>' +\r\n                   '<div class=\"form-group row\">' +\r\n                     '<label>' + lang.link.url + '</label>' +\r\n                     '<input class=\"note-link-url form-control col-md-12\" type=\"text\" value=\"http://\" />' +\r\n                   '</div>' +\r\n                   (!options.disableLinkTarget ?\r\n                     '<div class=\"checkbox\">' +\r\n                       '<label>' + '<input type=\"checkbox\" checked> ' +\r\n                         lang.link.openInNewWindow +\r\n                       '</label>' +\r\n                     '</div>' : ''\r\n                   );\r\n        var footer = '<button href=\"#\" class=\"btn btn-primary note-link-btn disabled\" disabled>' + lang.link.insert + '</button>';\r\n        return tplDialog('note-link-dialog', lang.link.insert, body, footer);\r\n      },\r\n\r\n      help: function (lang, options) {\r\n        var body = '<a class=\"modal-close pull-right\" aria-hidden=\"true\" tabindex=\"-1\">' + lang.shortcut.close + '</a>' +\r\n                   '<div class=\"title\">' + lang.shortcut.shortcuts + '</div>' +\r\n                   (agent.isMac ? tplShortcutTable(lang, options) : replaceMacKeys(tplShortcutTable(lang, options))) +\r\n                   '<p class=\"text-center\">' +\r\n                     '<a href=\"//summernote.org/\" target=\"_blank\">Summernote 0.6.16</a> · ' +\r\n                     '<a href=\"//github.com/summernote/summernote\" target=\"_blank\">Project</a> · ' +\r\n                     '<a href=\"//github.com/summernote/summernote/issues\" target=\"_blank\">Issues</a>' +\r\n                   '</p>';\r\n        return tplDialog('note-help-dialog', '', body, '');\r\n      }\r\n    };\r\n\r\n    var tplDialogs = function (lang, options) {\r\n      var dialogs = '';\r\n\r\n      $.each(tplDialogInfo, function (idx, tplDialog) {\r\n        dialogs += tplDialog(lang, options);\r\n      });\r\n\r\n      return '<div class=\"note-dialog\">' + dialogs + '</div>';\r\n    };\r\n\r\n    var tplStatusbar = function () {\r\n      return '<div class=\"note-resizebar\">' +\r\n               '<div class=\"note-icon-bar\"></div>' +\r\n               '<div class=\"note-icon-bar\"></div>' +\r\n               '<div class=\"note-icon-bar\"></div>' +\r\n             '</div>';\r\n    };\r\n\r\n    var representShortcut = function (str) {\r\n      if (agent.isMac) {\r\n        str = str.replace('CMD', '⌘').replace('SHIFT', '⇧');\r\n      }\r\n\r\n      return str.replace('BACKSLASH', '\\\\')\r\n                .replace('SLASH', '/')\r\n                .replace('LEFTBRACKET', '[')\r\n                .replace('RIGHTBRACKET', ']');\r\n    };\r\n\r\n    /**\r\n     * createTooltip\r\n     *\r\n     * @param {jQuery} $container\r\n     * @param {Object} keyMap\r\n     * @param {String} [sPlacement]\r\n     */\r\n    var createTooltip = function ($container, keyMap, sPlacement) {\r\n      var invertedKeyMap = func.invertObject(keyMap);\r\n      var $buttons = $container.find('button');\r\n\r\n      $buttons.each(function (i, elBtn) {\r\n        var $btn = $(elBtn);\r\n        var sShortcut = invertedKeyMap[$btn.data('event')];\r\n        if (sShortcut) {\r\n          $btn.attr('title', function (i, v) {\r\n            return v + ' (' + representShortcut(sShortcut) + ')';\r\n          });\r\n        }\r\n      // bootstrap tooltip on btn-group bug\r\n      // https://github.com/twbs/bootstrap/issues/5687\r\n      }).tooltip({\r\n        container: 'body',\r\n        trigger: 'hover',\r\n        placement: sPlacement || 'top'\r\n      }).on('click', function () {\r\n        $(this).tooltip('hide');\r\n      });\r\n    };\r\n\r\n    // createPalette\r\n    var createPalette = function ($container, options) {\r\n      var colorInfo = options.colors;\r\n      $container.find('.note-color-palette').each(function () {\r\n        var $palette = $(this), eventName = $palette.attr('data-target-event');\r\n        var paletteContents = [];\r\n        for (var row = 0, lenRow = colorInfo.length; row < lenRow; row++) {\r\n          var colors = colorInfo[row];\r\n          var buttons = [];\r\n          for (var col = 0, lenCol = colors.length; col < lenCol; col++) {\r\n            var color = colors[col];\r\n            buttons.push(['<button type=\"button\" class=\"note-color-btn\" style=\"background-color:', color,\r\n                           ';\" data-event=\"', eventName,\r\n                           '\" data-value=\"', color,\r\n                           '\" title=\"', color,\r\n                           '\" data-toggle=\"button\" tabindex=\"-1\"></button>'].join(''));\r\n          }\r\n          paletteContents.push('<div class=\"note-color-row\">' + buttons.join('') + '</div>');\r\n        }\r\n        $palette.html(paletteContents.join(''));\r\n      });\r\n    };\r\n\r\n    /**\r\n     * create summernote layout (air mode)\r\n     *\r\n     * @param {jQuery} $holder\r\n     * @param {Object} options\r\n     */\r\n    this.createLayoutByAirMode = function ($holder, options) {\r\n      var langInfo = options.langInfo;\r\n      var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];\r\n      var id = func.uniqueId();\r\n\r\n      $holder.addClass('note-air-editor note-editable panel-body');\r\n      $holder.attr({\r\n        'id': 'note-editor-' + id,\r\n        'contentEditable': true\r\n      });\r\n\r\n      var body = document.body;\r\n\r\n      // create Popover\r\n      var $popover = $(tplPopovers(langInfo, options));\r\n      $popover.addClass('note-air-layout');\r\n      $popover.attr('id', 'note-popover-' + id);\r\n      $popover.appendTo(body);\r\n      createTooltip($popover, keyMap);\r\n      createPalette($popover, options);\r\n\r\n      // create Handle\r\n      var $handle = $(tplHandles(options));\r\n      $handle.addClass('note-air-layout');\r\n      $handle.attr('id', 'note-handle-' + id);\r\n      $handle.appendTo(body);\r\n\r\n      // create Dialog\r\n      var $dialog = $(tplDialogs(langInfo, options));\r\n      $dialog.addClass('note-air-layout');\r\n      $dialog.attr('id', 'note-dialog-' + id);\r\n      $dialog.find('button.close, a.modal-close').click(function () {\r\n        $(this).closest('.modal').modal('hide');\r\n      });\r\n      $dialog.appendTo(body);\r\n    };\r\n\r\n    /**\r\n     * create summernote layout (normal mode)\r\n     *\r\n     * @param {jQuery} $holder\r\n     * @param {Object} options\r\n     */\r\n    this.createLayoutByFrame = function ($holder, options) {\r\n      var langInfo = options.langInfo;\r\n\r\n      //01. create Editor\r\n      var $editor = $('<div class=\"note-editor panel panel-default\" />');\r\n      if (options.width) {\r\n        $editor.width(options.width);\r\n      }\r\n\r\n      //02. statusbar (resizebar)\r\n      if (options.height > 0) {\r\n        $('<div class=\"note-statusbar\">' + (options.disableResizeEditor ? '' : tplStatusbar()) + '</div>').prependTo($editor);\r\n      }\r\n\r\n      //03 editing area\r\n      var $editingArea = $('<div class=\"note-editing-area\" />');\r\n      //03. create editable\r\n      var isContentEditable = !$holder.is(':disabled');\r\n      var $editable = $('<div class=\"note-editable panel-body\" contentEditable=\"' + isContentEditable + '\"></div>').prependTo($editingArea);\r\n      \r\n      if (options.height) {\r\n        $editable.height(options.height);\r\n      }\r\n      if (options.direction) {\r\n        $editable.attr('dir', options.direction);\r\n      }\r\n      var placeholder = $holder.attr('placeholder') || options.placeholder;\r\n      if (placeholder) {\r\n        $editable.attr('data-placeholder', placeholder);\r\n      }\r\n\r\n      $editable.html(dom.html($holder) || dom.emptyPara);\r\n\r\n      //031. create codable\r\n      $('<textarea class=\"note-codable\"></textarea>').prependTo($editingArea);\r\n\r\n      //04. create Popover\r\n      var $popover = $(tplPopovers(langInfo, options)).prependTo($editingArea);\r\n      createPalette($popover, options);\r\n      createTooltip($popover, keyMap);\r\n\r\n      //05. handle(control selection, ...)\r\n      $(tplHandles(options)).prependTo($editingArea);\r\n\r\n      $editingArea.prependTo($editor);\r\n\r\n      //06. create Toolbar\r\n      var $toolbar = $('<div class=\"note-toolbar panel-heading\" />');\r\n      for (var idx = 0, len = options.toolbar.length; idx < len; idx ++) {\r\n        var groupName = options.toolbar[idx][0];\r\n        var groupButtons = options.toolbar[idx][1];\r\n\r\n        var $group = $('<div class=\"note-' + groupName + ' btn-group\" />');\r\n        for (var i = 0, btnLength = groupButtons.length; i < btnLength; i++) {\r\n          var buttonInfo = tplButtonInfo[groupButtons[i]];\r\n          // continue creating toolbar even if a button doesn't exist\r\n          if (!$.isFunction(buttonInfo)) { continue; }\r\n\r\n          var $button = $(buttonInfo(langInfo, options));\r\n          $button.attr('data-name', groupButtons[i]);  // set button's alias, becuase to get button element from $toolbar\r\n          $group.append($button);\r\n        }\r\n        $toolbar.append($group);\r\n      }\r\n\r\n      var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];\r\n      createPalette($toolbar, options);\r\n      createTooltip($toolbar, keyMap, 'bottom');\r\n      $toolbar.prependTo($editor);\r\n\r\n      //07. create Dropzone\r\n      $('<div class=\"note-dropzone\"><div class=\"note-dropzone-message\"></div></div>').prependTo($editor);\r\n\r\n      //08. create Dialog\r\n      var $dialogContainer = options.dialogsInBody ? $(document.body) : $editor;\r\n      var $dialog = $(tplDialogs(langInfo, options)).prependTo($dialogContainer);\r\n      $dialog.find('button.close, a.modal-close').click(function () {\r\n        $(this).closest('.modal').modal('hide');\r\n      });\r\n\r\n      //09. Editor/Holder switch\r\n      $editor.insertAfter($holder);\r\n      $holder.hide();\r\n    };\r\n\r\n    this.hasNoteEditor = function ($holder) {\r\n      return this.noteEditorFromHolder($holder).length > 0;\r\n    };\r\n\r\n    this.noteEditorFromHolder = function ($holder) {\r\n      if ($holder.hasClass('note-air-editor')) {\r\n        return $holder;\r\n      } else if ($holder.next().hasClass('note-editor')) {\r\n        return $holder.next();\r\n      } else {\r\n        return $();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * create summernote layout\r\n     *\r\n     * @param {jQuery} $holder\r\n     * @param {Object} options\r\n     */\r\n    this.createLayout = function ($holder, options) {\r\n      if (options.airMode) {\r\n        this.createLayoutByAirMode($holder, options);\r\n      } else {\r\n        this.createLayoutByFrame($holder, options);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * returns layoutInfo from holder\r\n     *\r\n     * @param {jQuery} $holder - placeholder\r\n     * @return {Object}\r\n     */\r\n    this.layoutInfoFromHolder = function ($holder) {\r\n      var $editor = this.noteEditorFromHolder($holder);\r\n      if (!$editor.length) {\r\n        return;\r\n      }\r\n\r\n      // connect $holder to $editor\r\n      $editor.data('holder', $holder);\r\n\r\n      return dom.buildLayoutInfo($editor);\r\n    };\r\n\r\n    /**\r\n     * removeLayout\r\n     *\r\n     * @param {jQuery} $holder - placeholder\r\n     * @param {Object} layoutInfo\r\n     * @param {Object} options\r\n     *\r\n     */\r\n    this.removeLayout = function ($holder, layoutInfo, options) {\r\n      if (options.airMode) {\r\n        $holder.removeClass('note-air-editor note-editable')\r\n               .removeAttr('id contentEditable');\r\n\r\n        layoutInfo.popover().remove();\r\n        layoutInfo.handle().remove();\r\n        layoutInfo.dialog().remove();\r\n      } else {\r\n        $holder.html(layoutInfo.editable().html());\r\n\r\n        if (options.dialogsInBody) {\r\n          layoutInfo.dialog().remove();\r\n        }\r\n        layoutInfo.editor().remove();\r\n        $holder.show();\r\n      }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @return {Object}\r\n     * @return {function(label, options=):string} return.button {@link #tplButton function to make text button}\r\n     * @return {function(iconClass, options=):string} return.iconButton {@link #tplIconButton function to make icon button}\r\n     * @return {function(className, title=, body=, footer=):string} return.dialog {@link #tplDialog function to make dialog}\r\n     */\r\n    this.getTemplate = function () {\r\n      return {\r\n        button: tplButton,\r\n        iconButton: tplIconButton,\r\n        dialog: tplDialog\r\n      };\r\n    };\r\n\r\n    /**\r\n     * add button information\r\n     *\r\n     * @param {String} name button name\r\n     * @param {Function} buttonInfo function to make button, reference to {@link #tplButton},{@link #tplIconButton}\r\n     */\r\n    this.addButtonInfo = function (name, buttonInfo) {\r\n      tplButtonInfo[name] = buttonInfo;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} name\r\n     * @param {Function} dialogInfo function to make dialog, reference to {@link #tplDialog}\r\n     */\r\n    this.addDialogInfo = function (name, dialogInfo) {\r\n      tplDialogInfo[name] = dialogInfo;\r\n    };\r\n  };\r\n\r\n\r\n  // jQuery namespace for summernote\r\n  /**\r\n   * @class $.summernote \r\n   * \r\n   * summernote attribute  \r\n   * \r\n   * @mixin defaults\r\n   * @singleton  \r\n   * \r\n   */\r\n  $.summernote = $.summernote || {};\r\n\r\n  // extends default settings\r\n  //  - $.summernote.version\r\n  //  - $.summernote.options\r\n  //  - $.summernote.lang\r\n  $.extend($.summernote, defaults);\r\n\r\n  var renderer = new Renderer();\r\n  var eventHandler = new EventHandler();\r\n\r\n  $.extend($.summernote, {\r\n    /** @property {Renderer} */\r\n    renderer: renderer,\r\n    /** @property {EventHandler} */\r\n    eventHandler: eventHandler,\r\n    /** \r\n     * @property {Object} core \r\n     * @property {core.agent} core.agent \r\n     * @property {core.dom} core.dom\r\n     * @property {core.range} core.range \r\n     */\r\n    core: {\r\n      agent: agent,\r\n      list : list,\r\n      dom: dom,\r\n      range: range\r\n    },\r\n    /** \r\n     * @property {Object} \r\n     * pluginEvents event list for plugins\r\n     * event has name and callback function.\r\n     * \r\n     * ``` \r\n     * $.summernote.addPlugin({\r\n     *     events : {\r\n     *          'hello' : function(layoutInfo, value, $target) {\r\n     *              console.log('event name is hello, value is ' + value );\r\n     *          }\r\n     *     }     \r\n     * })\r\n     * ```\r\n     * \r\n     * * event name is data-event property.\r\n     * * layoutInfo is a summernote layout information.\r\n     * * value is data-value property.\r\n     */\r\n    pluginEvents: {},\r\n\r\n    plugins : []\r\n  });\r\n\r\n  /**\r\n   * @method addPlugin\r\n   *\r\n   * add Plugin in Summernote \r\n   * \r\n   * Summernote can make a own plugin.\r\n   *\r\n   * ### Define plugin\r\n   * ```\r\n   * // get template function  \r\n   * var tmpl = $.summernote.renderer.getTemplate();\r\n   * \r\n   * // add a button   \r\n   * $.summernote.addPlugin({\r\n   *     buttons : {\r\n   *        // \"hello\"  is button's namespace.      \r\n   *        \"hello\" : function(lang, options) {\r\n   *            // make icon button by template function          \r\n   *            return tmpl.iconButton(options.iconPrefix + 'header', {\r\n   *                // callback function name when button clicked \r\n   *                event : 'hello',\r\n   *                // set data-value property                 \r\n   *                value : 'hello',                \r\n   *                hide : true\r\n   *            });           \r\n   *        }\r\n   *     \r\n   *     }, \r\n   *     \r\n   *     events : {\r\n   *        \"hello\" : function(layoutInfo, value) {\r\n   *            // here is event code \r\n   *        }\r\n   *     }     \r\n   * });\r\n   * ``` \r\n   * ### Use a plugin in toolbar\r\n   * \r\n   * ``` \r\n   *    $(\"#editor\").summernote({\r\n   *    ...\r\n   *    toolbar : [\r\n   *        // display hello plugin in toolbar     \r\n   *        ['group', [ 'hello' ]]\r\n   *    ]\r\n   *    ...    \r\n   *    });\r\n   * ```\r\n   *  \r\n   *  \r\n   * @param {Object} plugin\r\n   * @param {Object} [plugin.buttons] define plugin button. for detail, see to Renderer.addButtonInfo\r\n   * @param {Object} [plugin.dialogs] define plugin dialog. for detail, see to Renderer.addDialogInfo\r\n   * @param {Object} [plugin.events] add event in $.summernote.pluginEvents \r\n   * @param {Object} [plugin.langs] update $.summernote.lang\r\n   * @param {Object} [plugin.options] update $.summernote.options\r\n   */\r\n  $.summernote.addPlugin = function (plugin) {\r\n\r\n    // save plugin list\r\n    $.summernote.plugins.push(plugin);\r\n\r\n    if (plugin.buttons) {\r\n      $.each(plugin.buttons, function (name, button) {\r\n        renderer.addButtonInfo(name, button);\r\n      });\r\n    }\r\n\r\n    if (plugin.dialogs) {\r\n      $.each(plugin.dialogs, function (name, dialog) {\r\n        renderer.addDialogInfo(name, dialog);\r\n      });\r\n    }\r\n\r\n    if (plugin.events) {\r\n      $.each(plugin.events, function (name, event) {\r\n        $.summernote.pluginEvents[name] = event;\r\n      });\r\n    }\r\n\r\n    if (plugin.langs) {\r\n      $.each(plugin.langs, function (locale, lang) {\r\n        if ($.summernote.lang[locale]) {\r\n          $.extend($.summernote.lang[locale], lang);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (plugin.options) {\r\n      $.extend($.summernote.options, plugin.options);\r\n    }\r\n  };\r\n\r\n  /*\r\n   * extend $.fn\r\n   */\r\n  $.fn.extend({\r\n    /**\r\n     * @method\r\n     * Initialize summernote\r\n     *  - create editor layout and attach Mouse and keyboard events.\r\n     * \r\n     * ```\r\n     * $(\"#summernote\").summernote( { options ..} );\r\n     * ```\r\n     *   \r\n     * @member $.fn\r\n     * @param {Object|String} options reference to $.summernote.options\r\n     * @return {this}\r\n     */\r\n    summernote: function () {\r\n      // check first argument's type\r\n      //  - {String}: External API call {{module}}.{{method}}\r\n      //  - {Object}: init options\r\n      var type = $.type(list.head(arguments));\r\n      var isExternalAPICalled = type === 'string';\r\n      var hasInitOptions = type === 'object';\r\n\r\n      // extend default options with custom user options\r\n      var options = hasInitOptions ? list.head(arguments) : {};\r\n\r\n      options = $.extend({}, $.summernote.options, options);\r\n      options.icons = $.extend({}, $.summernote.options.icons, options.icons);\r\n\r\n      // Include langInfo in options for later use, e.g. for image drag-n-drop\r\n      // Setup language info with en-US as default\r\n      options.langInfo = $.extend(true, {}, $.summernote.lang['en-US'], $.summernote.lang[options.lang]);\r\n\r\n      // override plugin options\r\n      if (!isExternalAPICalled && hasInitOptions) {\r\n        for (var i = 0, len = $.summernote.plugins.length; i < len; i++) {\r\n          var plugin = $.summernote.plugins[i];\r\n\r\n          if (options.plugin[plugin.name]) {\r\n            $.summernote.plugins[i] = $.extend(true, plugin, options.plugin[plugin.name]);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.each(function (idx, holder) {\r\n        var $holder = $(holder);\r\n\r\n        // if layout isn't created yet, createLayout and attach events\r\n        if (!renderer.hasNoteEditor($holder)) {\r\n          renderer.createLayout($holder, options);\r\n\r\n          var layoutInfo = renderer.layoutInfoFromHolder($holder);\r\n          $holder.data('layoutInfo', layoutInfo);\r\n\r\n          eventHandler.attach(layoutInfo, options);\r\n          eventHandler.attachCustomEvent(layoutInfo, options);\r\n        }\r\n      });\r\n\r\n      var $first = this.first();\r\n      if ($first.length) {\r\n        var layoutInfo = renderer.layoutInfoFromHolder($first);\r\n\r\n        // external API\r\n        if (isExternalAPICalled) {\r\n          var moduleAndMethod = list.head(list.from(arguments));\r\n          var args = list.tail(list.from(arguments));\r\n\r\n          // TODO now external API only works for editor\r\n          var params = [moduleAndMethod, layoutInfo.editable()].concat(args);\r\n          return eventHandler.invoke.apply(eventHandler, params);\r\n        } else if (options.focus) {\r\n          // focus on first editable element for initialize editor\r\n          layoutInfo.editable().focus();\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @method \r\n     * \r\n     * get the HTML contents of note or set the HTML contents of note.\r\n     *\r\n     * * get contents \r\n     * ```\r\n     * var content = $(\"#summernote\").code();\r\n     * ```\r\n     * * set contents \r\n     *\r\n     * ```\r\n     * $(\"#summernote\").code(html);\r\n     * ```\r\n     *\r\n     * @member $.fn \r\n     * @param {String} [html] - HTML contents(optional, set)\r\n     * @return {this|String} - context(set) or HTML contents of note(get).\r\n     */\r\n    code: function (html) {\r\n      // get the HTML contents of note\r\n      if (html === undefined) {\r\n        var $holder = this.first();\r\n        if (!$holder.length) {\r\n          return;\r\n        }\r\n\r\n        var layoutInfo = renderer.layoutInfoFromHolder($holder);\r\n        var $editable = layoutInfo && layoutInfo.editable();\r\n\r\n        if ($editable && $editable.length) {\r\n          var isCodeview = eventHandler.invoke('codeview.isActivated', layoutInfo);\r\n          eventHandler.invoke('codeview.sync', layoutInfo);\r\n          return isCodeview ? layoutInfo.codable().val() :\r\n                              layoutInfo.editable().html();\r\n        }\r\n        return dom.value($holder);\r\n      }\r\n\r\n      // set the HTML contents of note\r\n      this.each(function (i, holder) {\r\n        var layoutInfo = renderer.layoutInfoFromHolder($(holder));\r\n        var $editable = layoutInfo && layoutInfo.editable();\r\n        if ($editable) {\r\n          $editable.html(html);\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @method\r\n     * \r\n     * destroy Editor Layout and detach Key and Mouse Event\r\n     *\r\n     * @member $.fn\r\n     * @return {this}\r\n     */\r\n    destroy: function () {\r\n      this.each(function (idx, holder) {\r\n        var $holder = $(holder);\r\n\r\n        if (!renderer.hasNoteEditor($holder)) {\r\n          return;\r\n        }\r\n\r\n        var info = renderer.layoutInfoFromHolder($holder);\r\n        var options = info.editor().data('options');\r\n\r\n        eventHandler.detach(info, options);\r\n        renderer.removeLayout($holder, info, options);\r\n      });\r\n\r\n      return this;\r\n    }\r\n  });\r\n}));\r\n","/* ========================================================================\r\n * bootstrap-switch - v3.3.2\r\n * http://www.bootstrap-switch.org\r\n * ========================================================================\r\n * Copyright 2012-2013 Mattia Larentis\r\n *\r\n * ========================================================================\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================================\r\n */\r\n\r\n(function(){var t=[].slice;!function(e,i){\"use strict\";var n;return n=function(){function t(t,i){null==i&&(i={}),this.$element=e(t),this.options=e.extend({},e.fn.bootstrapSwitch.defaults,{state:this.$element.is(\":checked\"),size:this.$element.data(\"size\"),animate:this.$element.data(\"animate\"),disabled:this.$element.is(\":disabled\"),readonly:this.$element.is(\"[readonly]\"),indeterminate:this.$element.data(\"indeterminate\"),inverse:this.$element.data(\"inverse\"),radioAllOff:this.$element.data(\"radio-all-off\"),onColor:this.$element.data(\"on-color\"),offColor:this.$element.data(\"off-color\"),onText:this.$element.data(\"on-text\"),offText:this.$element.data(\"off-text\"),labelText:this.$element.data(\"label-text\"),handleWidth:this.$element.data(\"handle-width\"),labelWidth:this.$element.data(\"label-width\"),baseClass:this.$element.data(\"base-class\"),wrapperClass:this.$element.data(\"wrapper-class\")},i),this.prevOptions={},this.$wrapper=e(\"<div>\",{\"class\":function(t){return function(){var e;return e=[\"\"+t.options.baseClass].concat(t._getClasses(t.options.wrapperClass)),e.push(t.options.state?t.options.baseClass+\"-on\":t.options.baseClass+\"-off\"),null!=t.options.size&&e.push(t.options.baseClass+\"-\"+t.options.size),t.options.disabled&&e.push(t.options.baseClass+\"-disabled\"),t.options.readonly&&e.push(t.options.baseClass+\"-readonly\"),t.options.indeterminate&&e.push(t.options.baseClass+\"-indeterminate\"),t.options.inverse&&e.push(t.options.baseClass+\"-inverse\"),t.$element.attr(\"id\")&&e.push(t.options.baseClass+\"-id-\"+t.$element.attr(\"id\")),e.join(\" \")}}(this)()}),this.$container=e(\"<div>\",{\"class\":this.options.baseClass+\"-container\"}),this.$on=e(\"<span>\",{html:this.options.onText,\"class\":this.options.baseClass+\"-handle-on \"+this.options.baseClass+\"-\"+this.options.onColor}),this.$off=e(\"<span>\",{html:this.options.offText,\"class\":this.options.baseClass+\"-handle-off \"+this.options.baseClass+\"-\"+this.options.offColor}),this.$label=e(\"<span>\",{html:this.options.labelText,\"class\":this.options.baseClass+\"-label\"}),this.$element.on(\"init.bootstrapSwitch\",function(e){return function(){return e.options.onInit.apply(t,arguments)}}(this)),this.$element.on(\"switchChange.bootstrapSwitch\",function(i){return function(n){return!1===i.options.onSwitchChange.apply(t,arguments)?i.$element.is(\":radio\")?e(\"[name='\"+i.$element.attr(\"name\")+\"']\").trigger(\"previousState.bootstrapSwitch\",!0):i.$element.trigger(\"previousState.bootstrapSwitch\",!0):void 0}}(this)),this.$container=this.$element.wrap(this.$container).parent(),this.$wrapper=this.$container.wrap(this.$wrapper).parent(),this.$element.before(this.options.inverse?this.$off:this.$on).before(this.$label).before(this.options.inverse?this.$on:this.$off),this.options.indeterminate&&this.$element.prop(\"indeterminate\",!0),this._init(),this._elementHandlers(),this._handleHandlers(),this._labelHandlers(),this._formHandler(),this._externalLabelHandler(),this.$element.trigger(\"init.bootstrapSwitch\",this.options.state)}return t.prototype._constructor=t,t.prototype.setPrevOptions=function(){return this.prevOptions=e.extend(!0,{},this.options)},t.prototype.state=function(t,i){return\"undefined\"==typeof t?this.options.state:this.options.disabled||this.options.readonly?this.$element:this.options.state&&!this.options.radioAllOff&&this.$element.is(\":radio\")?this.$element:(this.$element.is(\":radio\")?e(\"[name='\"+this.$element.attr(\"name\")+\"']\").trigger(\"setPreviousOptions.bootstrapSwitch\"):this.$element.trigger(\"setPreviousOptions.bootstrapSwitch\"),this.options.indeterminate&&this.indeterminate(!1),t=!!t,this.$element.prop(\"checked\",t).trigger(\"change.bootstrapSwitch\",i),this.$element)},t.prototype.toggleState=function(t){return this.options.disabled||this.options.readonly?this.$element:this.options.indeterminate?(this.indeterminate(!1),this.state(!0)):this.$element.prop(\"checked\",!this.options.state).trigger(\"change.bootstrapSwitch\",t)},t.prototype.size=function(t){return\"undefined\"==typeof t?this.options.size:(null!=this.options.size&&this.$wrapper.removeClass(this.options.baseClass+\"-\"+this.options.size),t&&this.$wrapper.addClass(this.options.baseClass+\"-\"+t),this._width(),this._containerPosition(),this.options.size=t,this.$element)},t.prototype.animate=function(t){return\"undefined\"==typeof t?this.options.animate:(t=!!t,t===this.options.animate?this.$element:this.toggleAnimate())},t.prototype.toggleAnimate=function(){return this.options.animate=!this.options.animate,this.$wrapper.toggleClass(this.options.baseClass+\"-animate\"),this.$element},t.prototype.disabled=function(t){return\"undefined\"==typeof t?this.options.disabled:(t=!!t,t===this.options.disabled?this.$element:this.toggleDisabled())},t.prototype.toggleDisabled=function(){return this.options.disabled=!this.options.disabled,this.$element.prop(\"disabled\",this.options.disabled),this.$wrapper.toggleClass(this.options.baseClass+\"-disabled\"),this.$element},t.prototype.readonly=function(t){return\"undefined\"==typeof t?this.options.readonly:(t=!!t,t===this.options.readonly?this.$element:this.toggleReadonly())},t.prototype.toggleReadonly=function(){return this.options.readonly=!this.options.readonly,this.$element.prop(\"readonly\",this.options.readonly),this.$wrapper.toggleClass(this.options.baseClass+\"-readonly\"),this.$element},t.prototype.indeterminate=function(t){return\"undefined\"==typeof t?this.options.indeterminate:(t=!!t,t===this.options.indeterminate?this.$element:this.toggleIndeterminate())},t.prototype.toggleIndeterminate=function(){return this.options.indeterminate=!this.options.indeterminate,this.$element.prop(\"indeterminate\",this.options.indeterminate),this.$wrapper.toggleClass(this.options.baseClass+\"-indeterminate\"),this._containerPosition(),this.$element},t.prototype.inverse=function(t){return\"undefined\"==typeof t?this.options.inverse:(t=!!t,t===this.options.inverse?this.$element:this.toggleInverse())},t.prototype.toggleInverse=function(){var t,e;return this.$wrapper.toggleClass(this.options.baseClass+\"-inverse\"),e=this.$on.clone(!0),t=this.$off.clone(!0),this.$on.replaceWith(t),this.$off.replaceWith(e),this.$on=t,this.$off=e,this.options.inverse=!this.options.inverse,this.$element},t.prototype.onColor=function(t){var e;return e=this.options.onColor,\"undefined\"==typeof t?e:(null!=e&&this.$on.removeClass(this.options.baseClass+\"-\"+e),this.$on.addClass(this.options.baseClass+\"-\"+t),this.options.onColor=t,this.$element)},t.prototype.offColor=function(t){var e;return e=this.options.offColor,\"undefined\"==typeof t?e:(null!=e&&this.$off.removeClass(this.options.baseClass+\"-\"+e),this.$off.addClass(this.options.baseClass+\"-\"+t),this.options.offColor=t,this.$element)},t.prototype.onText=function(t){return\"undefined\"==typeof t?this.options.onText:(this.$on.html(t),this._width(),this._containerPosition(),this.options.onText=t,this.$element)},t.prototype.offText=function(t){return\"undefined\"==typeof t?this.options.offText:(this.$off.html(t),this._width(),this._containerPosition(),this.options.offText=t,this.$element)},t.prototype.labelText=function(t){return\"undefined\"==typeof t?this.options.labelText:(this.$label.html(t),this._width(),this.options.labelText=t,this.$element)},t.prototype.handleWidth=function(t){return\"undefined\"==typeof t?this.options.handleWidth:(this.options.handleWidth=t,this._width(),this._containerPosition(),this.$element)},t.prototype.labelWidth=function(t){return\"undefined\"==typeof t?this.options.labelWidth:(this.options.labelWidth=t,this._width(),this._containerPosition(),this.$element)},t.prototype.baseClass=function(t){return this.options.baseClass},t.prototype.wrapperClass=function(t){return\"undefined\"==typeof t?this.options.wrapperClass:(t||(t=e.fn.bootstrapSwitch.defaults.wrapperClass),this.$wrapper.removeClass(this._getClasses(this.options.wrapperClass).join(\" \")),this.$wrapper.addClass(this._getClasses(t).join(\" \")),this.options.wrapperClass=t,this.$element)},t.prototype.radioAllOff=function(t){return\"undefined\"==typeof t?this.options.radioAllOff:(t=!!t,t===this.options.radioAllOff?this.$element:(this.options.radioAllOff=t,this.$element))},t.prototype.onInit=function(t){return\"undefined\"==typeof t?this.options.onInit:(t||(t=e.fn.bootstrapSwitch.defaults.onInit),this.options.onInit=t,this.$element)},t.prototype.onSwitchChange=function(t){return\"undefined\"==typeof t?this.options.onSwitchChange:(t||(t=e.fn.bootstrapSwitch.defaults.onSwitchChange),this.options.onSwitchChange=t,this.$element)},t.prototype.destroy=function(){var t;return t=this.$element.closest(\"form\"),t.length&&t.off(\"reset.bootstrapSwitch\").removeData(\"bootstrap-switch\"),this.$container.children().not(this.$element).remove(),this.$element.unwrap().unwrap().off(\".bootstrapSwitch\").removeData(\"bootstrap-switch\"),this.$element},t.prototype._width=function(){var t,e;return t=this.$on.add(this.$off),t.add(this.$label).css(\"width\",\"\"),e=\"auto\"===this.options.handleWidth?Math.max(this.$on.width(),this.$off.width()):this.options.handleWidth,t.width(e),this.$label.width(function(t){return function(i,n){return\"auto\"!==t.options.labelWidth?t.options.labelWidth:e>n?e:n}}(this)),this._handleWidth=this.$on.outerWidth(),this._labelWidth=this.$label.outerWidth(),this.$container.width(2*this._handleWidth+this._labelWidth),this.$wrapper.width(this._handleWidth+this._labelWidth)},t.prototype._containerPosition=function(t,e){return null==t&&(t=this.options.state),this.$container.css(\"margin-left\",function(e){return function(){var i;return i=[0,\"-\"+e._handleWidth+\"px\"],e.options.indeterminate?\"-\"+e._handleWidth/2+\"px\":t?e.options.inverse?i[1]:i[0]:e.options.inverse?i[0]:i[1]}}(this)),e?setTimeout(function(){return e()},50):void 0},t.prototype._init=function(){var t,e;return t=function(t){return function(){return t.setPrevOptions(),t._width(),t._containerPosition(null,function(){return t.options.animate?t.$wrapper.addClass(t.options.baseClass+\"-animate\"):void 0})}}(this),this.$wrapper.is(\":visible\")?t():e=i.setInterval(function(n){return function(){return n.$wrapper.is(\":visible\")?(t(),i.clearInterval(e)):void 0}}(this),50)},t.prototype._elementHandlers=function(){return this.$element.on({\"setPreviousOptions.bootstrapSwitch\":function(t){return function(e){return t.setPrevOptions()}}(this),\"previousState.bootstrapSwitch\":function(t){return function(e){return t.options=t.prevOptions,t.options.indeterminate&&t.$wrapper.addClass(t.options.baseClass+\"-indeterminate\"),t.$element.prop(\"checked\",t.options.state).trigger(\"change.bootstrapSwitch\",!0)}}(this),\"change.bootstrapSwitch\":function(t){return function(i,n){var o;return i.preventDefault(),i.stopImmediatePropagation(),o=t.$element.is(\":checked\"),t._containerPosition(o),o!==t.options.state?(t.options.state=o,t.$wrapper.toggleClass(t.options.baseClass+\"-off\").toggleClass(t.options.baseClass+\"-on\"),n?void 0:(t.$element.is(\":radio\")&&e(\"[name='\"+t.$element.attr(\"name\")+\"']\").not(t.$element).prop(\"checked\",!1).trigger(\"change.bootstrapSwitch\",!0),t.$element.trigger(\"switchChange.bootstrapSwitch\",[o]))):void 0}}(this),\"focus.bootstrapSwitch\":function(t){return function(e){return e.preventDefault(),t.$wrapper.addClass(t.options.baseClass+\"-focused\")}}(this),\"blur.bootstrapSwitch\":function(t){return function(e){return e.preventDefault(),t.$wrapper.removeClass(t.options.baseClass+\"-focused\")}}(this),\"keydown.bootstrapSwitch\":function(t){return function(e){if(e.which&&!t.options.disabled&&!t.options.readonly)switch(e.which){case 37:return e.preventDefault(),e.stopImmediatePropagation(),t.state(!1);case 39:return e.preventDefault(),e.stopImmediatePropagation(),t.state(!0)}}}(this)})},t.prototype._handleHandlers=function(){return this.$on.on(\"click.bootstrapSwitch\",function(t){return function(e){return e.preventDefault(),e.stopPropagation(),t.state(!1),t.$element.trigger(\"focus.bootstrapSwitch\")}}(this)),this.$off.on(\"click.bootstrapSwitch\",function(t){return function(e){return e.preventDefault(),e.stopPropagation(),t.state(!0),t.$element.trigger(\"focus.bootstrapSwitch\")}}(this))},t.prototype._labelHandlers=function(){return this.$label.on({click:function(t){return t.stopPropagation()},\"mousedown.bootstrapSwitch touchstart.bootstrapSwitch\":function(t){return function(e){return t._dragStart||t.options.disabled||t.options.readonly?void 0:(e.preventDefault(),e.stopPropagation(),t._dragStart=(e.pageX||e.originalEvent.touches[0].pageX)-parseInt(t.$container.css(\"margin-left\"),10),t.options.animate&&t.$wrapper.removeClass(t.options.baseClass+\"-animate\"),t.$element.trigger(\"focus.bootstrapSwitch\"))}}(this),\"mousemove.bootstrapSwitch touchmove.bootstrapSwitch\":function(t){return function(e){var i;if(null!=t._dragStart&&(e.preventDefault(),i=(e.pageX||e.originalEvent.touches[0].pageX)-t._dragStart,!(i<-t._handleWidth||i>0)))return t._dragEnd=i,t.$container.css(\"margin-left\",t._dragEnd+\"px\")}}(this),\"mouseup.bootstrapSwitch touchend.bootstrapSwitch\":function(t){return function(e){var i;if(t._dragStart)return e.preventDefault(),t.options.animate&&t.$wrapper.addClass(t.options.baseClass+\"-animate\"),t._dragEnd?(i=t._dragEnd>-(t._handleWidth/2),t._dragEnd=!1,t.state(t.options.inverse?!i:i)):t.state(!t.options.state),t._dragStart=!1}}(this),\"mouseleave.bootstrapSwitch\":function(t){return function(e){return t.$label.trigger(\"mouseup.bootstrapSwitch\")}}(this)})},t.prototype._externalLabelHandler=function(){var t;return t=this.$element.closest(\"label\"),t.on(\"click\",function(e){return function(i){return i.preventDefault(),i.stopImmediatePropagation(),i.target===t[0]?e.toggleState():void 0}}(this))},t.prototype._formHandler=function(){var t;return t=this.$element.closest(\"form\"),t.data(\"bootstrap-switch\")?void 0:t.on(\"reset.bootstrapSwitch\",function(){return i.setTimeout(function(){return t.find(\"input\").filter(function(){return e(this).data(\"bootstrap-switch\")}).each(function(){return e(this).bootstrapSwitch(\"state\",this.checked)})},1)}).data(\"bootstrap-switch\",!0)},t.prototype._getClasses=function(t){var i,n,o,s;if(!e.isArray(t))return[this.options.baseClass+\"-\"+t];for(n=[],o=0,s=t.length;s>o;o++)i=t[o],n.push(this.options.baseClass+\"-\"+i);return n},t}(),e.fn.bootstrapSwitch=function(){var i,o,s;return o=arguments[0],i=2<=arguments.length?t.call(arguments,1):[],s=this,this.each(function(){var t,a;return t=e(this),a=t.data(\"bootstrap-switch\"),a||t.data(\"bootstrap-switch\",a=new n(this,o)),\"string\"==typeof o?s=a[o].apply(a,i):void 0}),s},e.fn.bootstrapSwitch.Constructor=n,e.fn.bootstrapSwitch.defaults={state:!0,size:null,animate:!0,disabled:!1,readonly:!1,indeterminate:!1,inverse:!1,radioAllOff:!1,onColor:\"primary\",offColor:\"default\",onText:\"ON\",offText:\"OFF\",labelText:\"&nbsp;\",handleWidth:\"auto\",labelWidth:\"auto\",baseClass:\"bootstrap-switch\",wrapperClass:\"wrapper\",onInit:function(){},onSwitchChange:function(){}}}(window.jQuery,window)}).call(this);","/*!\r\n * jQuery Upvote - a voting plugin\r\n * ------------------------------------------------------------------\r\n *\r\n * jQuery Upvote is a plugin that generates a voting widget like\r\n * the one used on Stack Exchange sites.\r\n *\r\n * Licensed under Creative Commons Attribution 3.0 Unported\r\n * http://creativecommons.org/licenses/by/3.0/\r\n *\r\n * @version         1.0.2\r\n * @since           2013.06.19\r\n * @author          Janos Gyerik\r\n * @homepage        https://janosgyerik.github.io/jquery-upvote\r\n * @twitter         twitter.com/janosgyerik\r\n *\r\n * ------------------------------------------------------------------\r\n *\r\n *  <div id=\"topic\" class=\"upvote\">\r\n *    <a class=\"upvote\"></a>\r\n *    <span class=\"count\"></span>\r\n *    <a class=\"downvote\"></a>\r\n *    <a class=\"star\"></a>\r\n *  </div>\r\n *\r\n *  $('#topic').upvote();\r\n *  $('#topic').upvote({count: 5, upvoted: true});\r\n *\r\n */\r\n\r\n;(function($) {\r\n    \"use strict\";\r\n    var namespace = 'upvote';\r\n    var dot_namespace = '.' + namespace;\r\n    var upvote_css = 'upvote';\r\n    var dot_upvote_css = '.' + upvote_css;\r\n    var upvoted_css = 'upvote-on';\r\n    var dot_upvoted_css = '.' + upvoted_css;\r\n    var downvote_css = 'downvote';\r\n    var dot_downvote_css = '.' + downvote_css;\r\n    var downvoted_css = 'downvote-on';\r\n    var dot_downvoted_css = '.' + downvoted_css;\r\n    var star_css = 'star';\r\n    var dot_star_css = '.' + star_css;\r\n    var starred_css = 'star-on';\r\n    var dot_starred_css = '.' + starred_css;\r\n    var count_css = 'count';\r\n    var dot_count_css = '.' + count_css;\r\n    var enabled_css = 'upvote-enabled';\r\n\r\n    function init(dom, options) {\r\n        return dom.each(function() {\r\n            var jqdom = $(this);\r\n            methods.destroy(jqdom);\r\n\r\n            var count = parseInt(jqdom.find(dot_count_css).text(), 10);\r\n            count = isNaN(count) ? 0 : count;\r\n            var initial = {\r\n                id: jqdom.attr('data-id'),\r\n                count: count,\r\n                upvoted: jqdom.find(dot_upvoted_css).size(),\r\n                downvoted: jqdom.find(dot_downvoted_css).size(),\r\n                starred: jqdom.find(dot_starred_css).size(),\r\n                callback: function() {}\r\n            };\r\n\r\n            var data = $.extend(initial, options);\r\n            if (data.upvoted && data.downvoted) {\r\n                data.downvoted = false;\r\n            }\r\n\r\n            jqdom.data(namespace, data);\r\n            render(jqdom);\r\n            setupUI(jqdom);\r\n        });\r\n    }\r\n\r\n    function setupUI(jqdom) {\r\n        jqdom.find(dot_upvote_css).addClass(enabled_css);\r\n        jqdom.find(dot_downvote_css).addClass(enabled_css);\r\n        jqdom.find(dot_star_css).addClass(enabled_css);\r\n        jqdom.find(dot_upvote_css).on('click.' + namespace, function() {\r\n            jqdom.upvote('upvote');\r\n        });\r\n        jqdom.find('.downvote').on('click.' + namespace, function() {\r\n            jqdom.upvote('downvote');\r\n        });\r\n        jqdom.find('.star').on('click.' + namespace, function() {\r\n            jqdom.upvote('star');\r\n        });\r\n    }\r\n\r\n    function _click_upvote(jqdom) {\r\n        jqdom.find(dot_upvote_css).click();\r\n    }\r\n\r\n    function _click_downvote(jqdom) {\r\n        jqdom.find(dot_downvote_css).click();\r\n    }\r\n\r\n    function _click_star(jqdom) {\r\n        jqdom.find(dot_star_css).click();\r\n    }\r\n\r\n    function render(jqdom) {\r\n        var data = jqdom.data(namespace);\r\n        jqdom.find(dot_count_css).text(data.count);\r\n        if (data.upvoted) {\r\n            jqdom.find(dot_upvote_css).addClass(upvoted_css);\r\n            jqdom.find(dot_downvote_css).removeClass(downvoted_css);\r\n        } else if (data.downvoted) {\r\n            jqdom.find(dot_upvote_css).removeClass(upvoted_css);\r\n            jqdom.find(dot_downvote_css).addClass(downvoted_css);\r\n        } else {\r\n            jqdom.find(dot_upvote_css).removeClass(upvoted_css);\r\n            jqdom.find(dot_downvote_css).removeClass(downvoted_css);\r\n        }\r\n        if (data.starred) {\r\n            jqdom.find(dot_star_css).addClass(starred_css);\r\n        } else {\r\n            jqdom.find(dot_star_css).removeClass(starred_css);\r\n        }\r\n    }\r\n\r\n    function callback(jqdom) {\r\n        var data = jqdom.data(namespace);\r\n        data.callback(data);\r\n    }\r\n\r\n    function upvote(jqdom) {\r\n        var data = jqdom.data(namespace);\r\n        if (data.upvoted) {\r\n            data.upvoted = false;\r\n            --data.count;\r\n        } else {\r\n            data.upvoted = true;\r\n            ++data.count;\r\n            if (data.downvoted) {\r\n                data.downvoted = false;\r\n                ++data.count;\r\n            }\r\n        }\r\n        render(jqdom);\r\n        callback(jqdom);\r\n        return jqdom;\r\n    }\r\n\r\n    function downvote(jqdom) {\r\n        var data = jqdom.data(namespace);\r\n        if (data.downvoted) {\r\n            data.downvoted = false;\r\n            ++data.count;\r\n        } else {\r\n            data.downvoted = true;\r\n            --data.count;\r\n            if (data.upvoted) {\r\n                data.upvoted = false;\r\n                --data.count;\r\n            }\r\n        }\r\n        render(jqdom);\r\n        callback(jqdom);\r\n        return jqdom;\r\n    }\r\n\r\n    function star(jqdom) {\r\n        var data = jqdom.data(namespace);\r\n        data.starred = ! data.starred;\r\n        render(jqdom);\r\n        callback(jqdom);\r\n        return jqdom;\r\n    }\r\n\r\n    function count(jqdom) {\r\n        return jqdom.data(namespace).count;\r\n    }\r\n\r\n    function upvoted(jqdom) {\r\n        return jqdom.data(namespace).upvoted;\r\n    }\r\n\r\n    function downvoted(jqdom) {\r\n        return jqdom.data(namespace).downvoted;\r\n    }\r\n\r\n    function starred(jqdom) {\r\n        return jqdom.data(namespace).starred;\r\n    }\r\n\r\n    var methods = {\r\n        init: init,\r\n        count: count,\r\n        upvote: upvote,\r\n        upvoted: upvoted,\r\n        downvote: downvote,\r\n        downvoted: downvoted,\r\n        starred: starred,\r\n        star: star,\r\n        _click_upvote: _click_upvote,\r\n        _click_downvote: _click_downvote,\r\n        _click_star: _click_star,\r\n        destroy: destroy\r\n    };\r\n\r\n    function destroy(jqdom) {\r\n        return jqdom.each(function() {\r\n            $(window).unbind(dot_namespace);\r\n            $(this).removeClass(enabled_css);\r\n            $(this).removeData(namespace);\r\n        });\r\n    }\r\n\r\n    $.fn.upvote = function(method) {  \r\n        var args;\r\n        if (methods[method]) {\r\n            args = Array.prototype.slice.call(arguments, 1);\r\n            args.unshift(this);\r\n            return methods[method].apply(this, args);\r\n        }\r\n        if (typeof method === 'object' || ! method) {\r\n            args = Array.prototype.slice.call(arguments);\r\n            args.unshift(this);\r\n            return methods.init.apply(this, args);\r\n        }\r\n        $.error('Method ' + method + ' does not exist on jQuery.upvote');\r\n    };  \r\n})(jQuery);"],"sourceRoot":"/source/"}